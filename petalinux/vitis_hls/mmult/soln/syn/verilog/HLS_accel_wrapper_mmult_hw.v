// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module HLS_accel_wrapper_mmult_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_pp0_stage0 = 25'd2;
parameter    ap_ST_fsm_state4 = 25'd4;
parameter    ap_ST_fsm_pp1_stage0 = 25'd8;
parameter    ap_ST_fsm_state7 = 25'd16;
parameter    ap_ST_fsm_pp2_stage0 = 25'd32;
parameter    ap_ST_fsm_state10 = 25'd64;
parameter    ap_ST_fsm_pp3_stage0 = 25'd128;
parameter    ap_ST_fsm_state13 = 25'd256;
parameter    ap_ST_fsm_pp4_stage0 = 25'd512;
parameter    ap_ST_fsm_pp4_stage1 = 25'd1024;
parameter    ap_ST_fsm_pp4_stage2 = 25'd2048;
parameter    ap_ST_fsm_pp4_stage3 = 25'd4096;
parameter    ap_ST_fsm_pp4_stage4 = 25'd8192;
parameter    ap_ST_fsm_pp4_stage5 = 25'd16384;
parameter    ap_ST_fsm_pp4_stage6 = 25'd32768;
parameter    ap_ST_fsm_pp4_stage7 = 25'd65536;
parameter    ap_ST_fsm_pp4_stage8 = 25'd131072;
parameter    ap_ST_fsm_pp4_stage9 = 25'd262144;
parameter    ap_ST_fsm_pp4_stage10 = 25'd524288;
parameter    ap_ST_fsm_state54 = 25'd1048576;
parameter    ap_ST_fsm_pp5_stage0 = 25'd2097152;
parameter    ap_ST_fsm_state57 = 25'd4194304;
parameter    ap_ST_fsm_pp6_stage0 = 25'd8388608;
parameter    ap_ST_fsm_state60 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] INPUT_STREAM_TDATA;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
input  [3:0] INPUT_STREAM_TKEEP;
input  [3:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [31:0] OUTPUT_STREAM_TDATA;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;
output  [3:0] OUTPUT_STREAM_TKEEP;
output  [3:0] OUTPUT_STREAM_TSTRB;
output  [0:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [0:0] OUTPUT_STREAM_TID;
output  [0:0] OUTPUT_STREAM_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg INPUT_STREAM_TREADY;
reg[31:0] OUTPUT_STREAM_TDATA;
reg OUTPUT_STREAM_TVALID;
reg[0:0] OUTPUT_STREAM_TLAST;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    INPUT_STREAM_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln26_fu_759_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] icmp_ln35_fu_836_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage0;
wire   [0:0] icmp_ln45_fu_913_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_pp3_stage0;
wire   [0:0] icmp_ln55_fu_990_p2;
reg    OUTPUT_STREAM_TDATA_blk_n;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln69_reg_2098;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln82_reg_2122;
reg   [8:0] indvar_flatten_reg_452;
reg   [2:0] i_reg_463;
reg   [6:0] j_reg_474;
reg   [8:0] indvar_flatten7_reg_485;
reg   [2:0] i_1_reg_496;
reg   [6:0] j_1_reg_507;
reg   [8:0] indvar_flatten15_reg_518;
reg   [6:0] i_2_reg_529;
reg   [2:0] j_2_reg_540;
reg   [8:0] indvar_flatten23_reg_551;
reg   [6:0] i_3_reg_562;
reg   [2:0] j_3_reg_573;
reg   [0:0] p_phi_reg_584;
reg   [0:0] p_phi18_reg_597;
reg   [0:0] p_phi19_reg_610;
reg   [8:0] indvar_flatten39_reg_623;
reg   [2:0] i_4_reg_634;
reg   [6:0] k_reg_646;
reg   [4:0] indvar_flatten47_reg_657;
reg   [2:0] i_5_reg_668;
reg   [2:0] j_4_reg_679;
reg   [4:0] indvar_flatten55_reg_690;
reg   [2:0] i_6_reg_701;
reg   [2:0] j_5_reg_712;
reg   [31:0] reg_743;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
reg    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state9_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
reg    ap_block_state11_pp3_stage0_iter0;
wire    ap_block_state12_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [31:0] grp_fu_727_p2;
reg   [31:0] reg_747;
wire    ap_CS_fsm_pp4_stage9;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_state23_pp4_stage9_iter0;
wire    ap_block_state34_pp4_stage9_iter1;
wire    ap_block_state45_pp4_stage9_iter2;
wire    ap_block_pp4_stage9_11001;
reg   [0:0] icmp_ln95_reg_1743;
reg   [0:0] icmp_ln95_reg_1743_pp4_iter2_reg;
wire    ap_CS_fsm_pp4_stage10;
wire    ap_block_state24_pp4_stage10_iter0;
wire    ap_block_state35_pp4_stage10_iter1;
wire    ap_block_state46_pp4_stage10_iter2;
wire    ap_block_pp4_stage10_11001;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter3;
wire    ap_block_state14_pp4_stage0_iter0;
wire    ap_block_state25_pp4_stage0_iter1;
wire    ap_block_state36_pp4_stage0_iter2;
wire    ap_block_state47_pp4_stage0_iter3;
wire    ap_block_pp4_stage0_11001;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_state15_pp4_stage1_iter0;
wire    ap_block_state26_pp4_stage1_iter1;
wire    ap_block_state37_pp4_stage1_iter2;
wire    ap_block_state48_pp4_stage1_iter3;
wire    ap_block_pp4_stage1_11001;
wire    ap_CS_fsm_pp4_stage2;
wire    ap_block_state16_pp4_stage2_iter0;
wire    ap_block_state27_pp4_stage2_iter1;
wire    ap_block_state38_pp4_stage2_iter2;
wire    ap_block_state49_pp4_stage2_iter3;
wire    ap_block_pp4_stage2_11001;
wire    ap_CS_fsm_pp4_stage3;
wire    ap_block_state17_pp4_stage3_iter0;
wire    ap_block_state28_pp4_stage3_iter1;
wire    ap_block_state39_pp4_stage3_iter2;
wire    ap_block_state50_pp4_stage3_iter3;
wire    ap_block_pp4_stage3_11001;
wire    ap_CS_fsm_pp4_stage4;
wire    ap_block_state18_pp4_stage4_iter0;
wire    ap_block_state29_pp4_stage4_iter1;
wire    ap_block_state40_pp4_stage4_iter2;
wire    ap_block_state51_pp4_stage4_iter3;
wire    ap_block_pp4_stage4_11001;
wire    ap_CS_fsm_pp4_stage5;
wire    ap_block_state19_pp4_stage5_iter0;
wire    ap_block_state30_pp4_stage5_iter1;
wire    ap_block_state41_pp4_stage5_iter2;
wire    ap_block_state52_pp4_stage5_iter3;
wire    ap_block_pp4_stage5_11001;
wire   [8:0] add_ln26_1_fu_753_p2;
reg   [0:0] icmp_ln26_reg_1584;
wire   [2:0] select_ln26_1_fu_785_p3;
reg   [2:0] select_ln26_1_reg_1588;
wire   [7:0] add_ln32_fu_809_p2;
reg   [7:0] add_ln32_reg_1593;
wire   [6:0] add_ln28_fu_815_p2;
wire   [8:0] add_ln35_1_fu_830_p2;
reg   [0:0] icmp_ln35_reg_1608;
wire   [2:0] select_ln35_1_fu_862_p3;
reg   [2:0] select_ln35_1_reg_1612;
wire   [7:0] add_ln41_fu_886_p2;
reg   [7:0] add_ln41_reg_1617;
wire   [6:0] add_ln37_fu_892_p2;
wire   [8:0] add_ln45_1_fu_907_p2;
reg   [0:0] icmp_ln45_reg_1632;
wire   [6:0] select_ln45_1_fu_939_p3;
reg   [6:0] select_ln45_1_reg_1636;
wire   [7:0] add_ln51_fu_963_p2;
reg   [7:0] add_ln51_reg_1641;
wire   [2:0] add_ln47_fu_969_p2;
wire   [8:0] add_ln55_1_fu_984_p2;
reg   [0:0] icmp_ln55_reg_1656;
wire   [6:0] select_ln55_1_fu_1016_p3;
reg   [6:0] select_ln55_1_reg_1660;
wire   [7:0] add_ln61_fu_1040_p2;
reg   [7:0] add_ln61_reg_1665;
reg   [0:0] tmp_i66_user_reg_1670;
reg   [0:0] tmp_i66_id_reg_1675;
reg   [0:0] tmp_i66_dest_reg_1680;
wire   [2:0] add_ln57_fu_1058_p2;
wire   [8:0] add_ln95_1_fu_1073_p2;
reg   [8:0] add_ln95_1_reg_1738;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln95_fu_1079_p2;
reg   [0:0] icmp_ln95_reg_1743_pp4_iter1_reg;
reg   [0:0] icmp_ln95_reg_1743_pp4_iter3_reg;
wire   [2:0] add_ln95_fu_1085_p2;
reg   [2:0] add_ln95_reg_1747;
wire   [0:0] icmp_ln99_fu_1091_p2;
reg   [0:0] icmp_ln99_reg_1752;
wire   [6:0] select_ln95_fu_1097_p3;
reg   [6:0] select_ln95_reg_1757;
reg   [6:0] select_ln95_reg_1757_pp4_iter1_reg;
wire   [8:0] tmp_9_fu_1105_p3;
reg   [8:0] tmp_9_reg_1765;
wire   [2:0] select_ln95_1_fu_1119_p3;
reg   [2:0] select_ln95_1_reg_1782;
reg   [2:0] select_ln95_1_reg_1782_pp4_iter1_reg;
reg   [2:0] select_ln95_1_reg_1782_pp4_iter2_reg;
wire   [31:0] Br_q0;
reg   [31:0] Br_load_reg_1808;
wire   [31:0] Bi_q0;
reg   [31:0] Bi_load_reg_1814;
wire   [31:0] Ar_q0;
reg   [31:0] Ar_load_reg_1830;
wire   [31:0] Ai_q0;
reg   [31:0] Ai_load_reg_1835;
reg   [31:0] Br_load_1_reg_1840;
reg   [31:0] Bi_load_1_reg_1846;
wire   [0:0] cmp49_i_fu_1197_p2;
reg   [0:0] cmp49_i_reg_1862;
reg   [0:0] cmp49_i_reg_1862_pp4_iter1_reg;
reg   [0:0] cmp49_i_reg_1862_pp4_iter2_reg;
reg   [0:0] cmp49_i_reg_1862_pp4_iter3_reg;
reg   [31:0] Br_load_2_reg_1866;
reg   [31:0] Bi_load_2_reg_1872;
reg   [31:0] Br_load_3_reg_1878;
reg   [31:0] Bi_load_3_reg_1884;
wire   [31:0] grp_fu_731_p2;
reg   [31:0] mul_i_reg_1890;
wire   [31:0] grp_fu_735_p2;
reg   [31:0] mul24_i_reg_1895;
reg   [31:0] mul33_i_reg_1900;
reg   [31:0] mul42_i_reg_1905;
wire   [6:0] add_ln99_fu_1202_p2;
reg   [6:0] add_ln99_reg_1910;
reg   [31:0] mul_i_1_reg_1915;
reg    ap_enable_reg_pp4_iter1;
reg   [31:0] mul24_i_1_reg_1920;
reg   [31:0] mul33_i_1_reg_1925;
reg   [31:0] mul42_i_1_reg_1930;
reg   [31:0] mul_i_2_reg_1935;
reg   [31:0] mul24_i_2_reg_1940;
reg   [31:0] mul33_i_2_reg_1945;
reg   [31:0] mul42_i_2_reg_1950;
reg   [31:0] mul_i_3_reg_1955;
reg   [31:0] mul24_i_3_reg_1960;
reg   [31:0] mul33_i_3_reg_1965;
reg   [31:0] mul42_i_3_reg_1970;
wire   [0:0] cmp3_i_fu_1210_p2;
reg   [0:0] cmp3_i_reg_1975;
wire   [31:0] select_ln103_fu_1215_p3;
reg   [31:0] select_ln103_reg_1986;
wire   [31:0] grp_fu_723_p2;
reg   [31:0] sub_i_reg_1991;
wire   [31:0] select_ln103_1_fu_1226_p3;
reg   [31:0] select_ln103_1_reg_1996;
reg   [31:0] add43_i_reg_2001;
wire   [31:0] select_ln103_2_fu_1236_p3;
reg   [31:0] select_ln103_2_reg_2006;
reg   [31:0] sub_i_1_reg_2011;
wire   [31:0] select_ln103_3_fu_1246_p3;
reg   [31:0] select_ln103_3_reg_2016;
reg   [31:0] add43_i_1_reg_2021;
wire   [31:0] select_ln103_4_fu_1256_p3;
reg   [31:0] select_ln103_4_reg_2026;
reg   [31:0] sub_i_2_reg_2031;
wire   [31:0] select_ln103_5_fu_1266_p3;
reg   [31:0] select_ln103_5_reg_2036;
reg   [31:0] add43_i_2_reg_2041;
wire   [31:0] select_ln103_6_fu_1276_p3;
reg   [31:0] select_ln103_6_reg_2046;
reg   [31:0] sub_i_3_reg_2051;
wire   [31:0] select_ln103_7_fu_1286_p3;
reg   [31:0] select_ln103_7_reg_2056;
reg   [31:0] add43_i_3_reg_2061;
wire   [4:0] tmp_5_fu_1298_p3;
reg   [4:0] tmp_5_reg_2066;
reg   [3:0] Ci_addr_1_reg_2073;
reg   [3:0] Ci_addr_2_reg_2078;
reg   [3:0] Ci_addr_3_reg_2083;
reg   [3:0] Ci_addr_4_reg_2088;
wire   [4:0] add_ln69_1_fu_1391_p2;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state55_pp5_stage0_iter0;
reg    ap_block_state56_pp5_stage0_iter1;
reg    ap_block_state56_io;
reg    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln69_fu_1397_p2;
wire   [2:0] select_ln69_1_fu_1423_p3;
reg   [2:0] select_ln69_1_reg_2102;
wire   [2:0] add_ln71_fu_1458_p2;
wire   [4:0] add_ln82_1_fu_1469_p2;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state58_pp6_stage0_iter0;
reg    ap_block_state59_pp6_stage0_iter1;
reg    ap_block_state59_io;
reg    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln82_fu_1475_p2;
wire   [2:0] select_ln82_1_fu_1501_p3;
reg   [2:0] select_ln82_1_reg_2126;
wire   [0:0] val_last_V_fu_1562_p2;
reg   [0:0] val_last_V_reg_2136;
wire   [2:0] add_ln84_fu_1568_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state7;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg    ap_enable_reg_pp2_iter1;
wire    ap_CS_fsm_state10;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state11;
reg    ap_enable_reg_pp3_iter1;
wire    ap_CS_fsm_state13;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state14;
wire    ap_block_pp4_stage10_subdone;
wire    ap_block_state20_pp4_stage6_iter0;
wire    ap_block_state31_pp4_stage6_iter1;
wire    ap_block_state42_pp4_stage6_iter2;
wire    ap_block_state53_pp4_stage6_iter3;
wire    ap_block_pp4_stage6_subdone;
wire    ap_CS_fsm_pp4_stage6;
wire    ap_CS_fsm_state54;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state55;
wire    ap_CS_fsm_state57;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state58;
reg   [7:0] Ar_address0;
reg    Ar_ce0;
reg    Ar_we0;
wire   [31:0] Ar_d0;
reg   [7:0] Ai_address0;
reg    Ai_ce0;
reg    Ai_we0;
wire   [31:0] Ai_d0;
reg   [7:0] Br_address0;
reg    Br_ce0;
reg    Br_we0;
wire   [31:0] Br_d0;
reg   [7:0] Bi_address0;
reg    Bi_ce0;
reg    Bi_we0;
wire   [31:0] Bi_d0;
reg   [3:0] Cr_address0;
reg    Cr_ce0;
reg    Cr_we0;
wire   [31:0] Cr_q0;
reg   [3:0] Ci_address0;
reg    Ci_ce0;
reg    Ci_we0;
wire   [31:0] Ci_q0;
reg   [2:0] ap_phi_mux_i_phi_fu_467_p4;
reg   [2:0] ap_phi_mux_i_1_phi_fu_500_p4;
reg   [6:0] ap_phi_mux_i_2_phi_fu_533_p4;
reg   [6:0] ap_phi_mux_i_3_phi_fu_566_p4;
reg   [8:0] ap_phi_mux_indvar_flatten39_phi_fu_627_p4;
wire    ap_block_pp4_stage0;
reg   [2:0] ap_phi_mux_i_4_phi_fu_638_p4;
reg   [6:0] ap_phi_mux_k_phi_fu_650_p4;
reg   [2:0] ap_phi_mux_i_5_phi_fu_672_p4;
reg   [2:0] ap_phi_mux_i_6_phi_fu_705_p4;
wire   [63:0] zext_ln32_1_fu_821_p1;
wire   [63:0] zext_ln41_1_fu_898_p1;
wire   [63:0] zext_ln51_1_fu_975_p1;
wire   [63:0] zext_ln61_1_fu_1064_p1;
wire   [63:0] zext_ln105_fu_1113_p1;
wire   [63:0] p_cast_fu_1146_p1;
wire    ap_block_pp4_stage1;
wire   [63:0] tmp_s_fu_1157_p3;
wire   [63:0] tmp_1_fu_1172_p3;
wire    ap_block_pp4_stage2;
wire   [63:0] tmp_2_fu_1187_p3;
wire    ap_block_pp4_stage3;
wire   [63:0] zext_ln110_fu_1305_p1;
wire    ap_block_pp4_stage10;
wire   [63:0] tmp_6_fu_1326_p3;
wire   [63:0] tmp_7_fu_1351_p3;
wire   [63:0] tmp_8_fu_1376_p3;
wire    ap_block_pp4_stage5;
wire   [63:0] zext_ln74_1_fu_1453_p1;
wire   [63:0] zext_ln87_1_fu_1551_p1;
reg   [31:0] resultr_3_fu_180;
reg   [31:0] ap_sig_allocacmp_resultr_3_load;
wire    ap_block_pp4_stage4;
reg   [31:0] temp_sumi_load_3_fu_184;
reg   [31:0] ap_sig_allocacmp_temp_sumi_load_6;
reg   [31:0] resultr_2_fu_188;
reg   [31:0] ap_sig_allocacmp_resultr_2_load;
reg   [31:0] temp_sumi_load_2_fu_192;
reg   [31:0] ap_sig_allocacmp_temp_sumi_load_5;
reg   [31:0] resultr_13_fu_196;
reg   [31:0] ap_sig_allocacmp_resultr_13_load;
reg   [31:0] temp_sumi_load_1_fu_200;
reg   [31:0] ap_sig_allocacmp_temp_sumi_load_4;
reg   [31:0] resultr_0_fu_204;
reg   [31:0] ap_sig_allocacmp_resultr_0_load;
wire    ap_block_pp4_stage9;
reg   [31:0] temp_sumi_load_0_fu_208;
reg   [31:0] ap_sig_allocacmp_temp_sumi_load;
wire   [31:0] bitcast_ln303_fu_1464_p1;
reg    ap_block_pp5_stage0_01001;
wire   [31:0] bitcast_ln303_1_fu_1574_p1;
reg    ap_block_pp6_stage0_01001;
wire    ap_block_pp4_stage6_11001;
wire    ap_block_pp4_stage6;
reg   [31:0] grp_fu_723_p0;
reg   [31:0] grp_fu_723_p1;
reg   [31:0] grp_fu_727_p0;
reg   [31:0] grp_fu_727_p1;
reg   [31:0] grp_fu_731_p1;
wire    ap_CS_fsm_pp4_stage7;
wire    ap_block_pp4_stage7;
wire    ap_CS_fsm_pp4_stage8;
wire    ap_block_pp4_stage8;
reg   [31:0] grp_fu_735_p1;
wire   [0:0] icmp_ln28_fu_771_p2;
wire   [2:0] add_ln26_fu_765_p2;
wire   [1:0] trunc_ln32_fu_793_p1;
wire   [6:0] select_ln26_fu_777_p3;
wire   [7:0] tmp_cast_fu_797_p3;
wire   [7:0] zext_ln32_fu_805_p1;
wire   [0:0] icmp_ln37_fu_848_p2;
wire   [2:0] add_ln35_fu_842_p2;
wire   [1:0] trunc_ln41_fu_870_p1;
wire   [6:0] select_ln35_fu_854_p3;
wire   [7:0] tmp_1_cast_fu_874_p3;
wire   [7:0] zext_ln41_fu_882_p1;
wire   [0:0] icmp_ln47_fu_925_p2;
wire   [6:0] add_ln45_fu_919_p2;
wire   [5:0] trunc_ln51_fu_947_p1;
wire   [2:0] select_ln45_fu_931_p3;
wire   [7:0] tmp_2_cast_fu_951_p3;
wire   [7:0] zext_ln51_fu_959_p1;
wire   [0:0] icmp_ln57_fu_1002_p2;
wire   [6:0] add_ln55_fu_996_p2;
wire   [5:0] trunc_ln61_fu_1024_p1;
wire   [2:0] select_ln55_fu_1008_p3;
wire   [7:0] tmp_3_cast_fu_1028_p3;
wire   [7:0] zext_ln61_fu_1036_p1;
wire   [1:0] empty_17_fu_1125_p1;
wire   [7:0] tmp_4_cast_fu_1129_p3;
wire   [7:0] select_ln95_cast_fu_1137_p1;
wire   [7:0] empty_18_fu_1140_p2;
wire   [8:0] or_ln105_fu_1152_p2;
wire   [8:0] or_ln105_1_fu_1167_p2;
wire   [8:0] or_ln105_2_fu_1182_p2;
wire   [4:0] or_ln110_fu_1321_p2;
wire   [4:0] or_ln110_1_fu_1346_p2;
wire   [4:0] or_ln110_2_fu_1371_p2;
wire   [0:0] icmp_ln71_fu_1409_p2;
wire   [2:0] add_ln69_fu_1403_p2;
wire   [1:0] trunc_ln74_fu_1431_p1;
wire   [2:0] select_ln69_fu_1415_p3;
wire   [3:0] tmp_13_cast_fu_1435_p3;
wire   [3:0] zext_ln74_fu_1443_p1;
wire   [3:0] add_ln74_fu_1447_p2;
wire   [0:0] icmp_ln84_fu_1487_p2;
wire   [2:0] add_ln82_fu_1481_p2;
wire   [1:0] trunc_ln87_fu_1509_p1;
wire   [0:0] cmp66_mid1_fu_1521_p2;
wire   [0:0] cmp66210_fu_1527_p2;
wire   [2:0] select_ln82_fu_1493_p3;
wire   [3:0] tmp_14_cast_fu_1513_p3;
wire   [3:0] zext_ln87_fu_1541_p1;
wire   [3:0] add_ln87_fu_1545_p2;
wire   [0:0] select_ln82_2_fu_1533_p3;
wire   [0:0] icmp_ln88_fu_1556_p2;
reg   [1:0] grp_fu_723_opcode;
wire    ap_block_pp4_stage0_00001;
wire    ap_block_pp4_stage2_00001;
wire    ap_block_pp4_stage4_00001;
wire    ap_block_pp4_stage6_00001;
wire    ap_block_pp4_stage10_00001;
wire    ap_block_pp4_stage1_00001;
wire    ap_block_pp4_stage3_00001;
wire    ap_block_pp4_stage5_00001;
wire    ap_CS_fsm_state60;
reg   [24:0] ap_NS_fsm;
wire    ap_block_pp4_stage1_subdone;
wire    ap_block_pp4_stage2_subdone;
wire    ap_block_pp4_stage3_subdone;
wire    ap_block_pp4_stage4_subdone;
wire    ap_block_pp4_stage5_subdone;
wire    ap_block_state21_pp4_stage7_iter0;
wire    ap_block_state32_pp4_stage7_iter1;
wire    ap_block_state43_pp4_stage7_iter2;
wire    ap_block_pp4_stage7_subdone;
wire    ap_block_state22_pp4_stage8_iter0;
wire    ap_block_state33_pp4_stage8_iter1;
wire    ap_block_state44_pp4_stage8_iter2;
wire    ap_block_pp4_stage8_subdone;
wire    ap_block_pp4_stage9_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
end

HLS_accel_wrapper_mmult_hw_Ar #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Ar_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Ar_address0),
    .ce0(Ar_ce0),
    .we0(Ar_we0),
    .d0(Ar_d0),
    .q0(Ar_q0)
);

HLS_accel_wrapper_mmult_hw_Ar #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Ai_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Ai_address0),
    .ce0(Ai_ce0),
    .we0(Ai_we0),
    .d0(Ai_d0),
    .q0(Ai_q0)
);

HLS_accel_wrapper_mmult_hw_Br #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Br_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Br_address0),
    .ce0(Br_ce0),
    .we0(Br_we0),
    .d0(Br_d0),
    .q0(Br_q0)
);

HLS_accel_wrapper_mmult_hw_Br #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Bi_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Bi_address0),
    .ce0(Bi_ce0),
    .we0(Bi_we0),
    .d0(Bi_d0),
    .q0(Bi_q0)
);

HLS_accel_wrapper_mmult_hw_Cr #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Cr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Cr_address0),
    .ce0(Cr_ce0),
    .we0(Cr_we0),
    .d0(reg_747),
    .q0(Cr_q0)
);

HLS_accel_wrapper_mmult_hw_Cr #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Ci_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Ci_address0),
    .ce0(Ci_ce0),
    .we0(Ci_we0),
    .d0(reg_747),
    .q0(Ci_q0)
);

HLS_accel_faddfsub_32ns_32ns_32_11_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_11_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_723_p0),
    .din1(grp_fu_723_p1),
    .opcode(grp_fu_723_opcode),
    .ce(1'b1),
    .dout(grp_fu_723_p2)
);

HLS_accel_fadd_32ns_32ns_32_11_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_11_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_727_p0),
    .din1(grp_fu_727_p1),
    .ce(1'b1),
    .dout(grp_fu_727_p2)
);

HLS_accel_fmul_32ns_32ns_32_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_7_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Ar_load_reg_1830),
    .din1(grp_fu_731_p1),
    .ce(1'b1),
    .dout(grp_fu_731_p2)
);

HLS_accel_fmul_32ns_32ns_32_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_7_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Ai_load_reg_1835),
    .din1(grp_fu_735_p1),
    .ce(1'b1),
    .dout(grp_fu_735_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state11))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage10_subdone) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage10_subdone) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp4_stage6_subdone) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage6)) | ((1'b0 == ap_block_pp4_stage10_subdone) & (1'b1 == ap_CS_fsm_pp4_stage10)))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp4_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state55) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state54)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state55))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state55);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if ((1'b1 == ap_CS_fsm_state54)) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state58) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state57)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state58))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state58);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if ((1'b1 == ap_CS_fsm_state57)) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_reg_496 <= 3'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln35_reg_1608 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_1_reg_496 <= select_ln35_1_reg_1612;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_2_reg_529 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln45_reg_1632 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_2_reg_529 <= select_ln45_1_reg_1636;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_3_reg_562 <= 7'd0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln55_reg_1656 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_3_reg_562 <= select_ln55_1_reg_1660;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_4_reg_634 <= 3'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_4_reg_634 <= select_ln95_1_reg_1782;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        i_5_reg_668 <= 3'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln69_reg_2098 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        i_5_reg_668 <= select_ln69_1_reg_2102;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        i_6_reg_701 <= 3'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln82_reg_2122 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        i_6_reg_701 <= select_ln82_1_reg_2126;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln26_reg_1584 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_463 <= select_ln26_1_reg_1588;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_463 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten15_reg_518 <= 9'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln45_fu_913_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        indvar_flatten15_reg_518 <= add_ln45_1_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten23_reg_551 <= 9'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln55_fu_990_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        indvar_flatten23_reg_551 <= add_ln55_1_fu_984_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar_flatten39_reg_623 <= 9'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        indvar_flatten39_reg_623 <= add_ln95_1_reg_1738;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        indvar_flatten47_reg_657 <= 5'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln69_fu_1397_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        indvar_flatten47_reg_657 <= add_ln69_1_fu_1391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        indvar_flatten55_reg_690 <= 5'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln82_fu_1475_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        indvar_flatten55_reg_690 <= add_ln82_1_fu_1469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten7_reg_485 <= 9'd0;
    end else if (((icmp_ln35_fu_836_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten7_reg_485 <= add_ln35_1_fu_830_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_759_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_452 <= add_ln26_1_fu_753_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_452 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_1_reg_507 <= 7'd0;
    end else if (((icmp_ln35_fu_836_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_1_reg_507 <= add_ln37_fu_892_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j_2_reg_540 <= 3'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln45_fu_913_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        j_2_reg_540 <= add_ln47_fu_969_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_3_reg_573 <= 3'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln55_fu_990_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        j_3_reg_573 <= add_ln57_fu_1058_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        j_4_reg_679 <= 3'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln69_fu_1397_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        j_4_reg_679 <= add_ln71_fu_1458_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        j_5_reg_712 <= 3'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln82_fu_1475_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        j_5_reg_712 <= add_ln84_fu_1568_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_759_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_474 <= add_ln28_fu_815_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_474 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_reg_646 <= 7'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        k_reg_646 <= add_ln99_reg_1910;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        Ai_load_reg_1835 <= Ai_q0;
        Ar_load_reg_1830 <= Ar_q0;
        Bi_load_1_reg_1846 <= Bi_q0;
        Br_load_1_reg_1840 <= Br_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        Bi_load_2_reg_1872 <= Bi_q0;
        Br_load_2_reg_1866 <= Br_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        Bi_load_3_reg_1884 <= Bi_q0;
        Br_load_3_reg_1878 <= Br_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        Bi_load_reg_1814 <= Bi_q0;
        Br_load_reg_1808 <= Br_q0;
        select_ln95_1_reg_1782 <= select_ln95_1_fu_1119_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage10_11001) & (icmp_ln95_reg_1743_pp4_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        Ci_addr_1_reg_2073[3 : 2] <= zext_ln110_fu_1305_p1[3 : 2];
        tmp_5_reg_2066[4 : 2] <= tmp_5_fu_1298_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (icmp_ln95_reg_1743_pp4_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        Ci_addr_2_reg_2078[3 : 2] <= tmp_6_fu_1326_p3[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (icmp_ln95_reg_1743_pp4_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        Ci_addr_3_reg_2083[3 : 2] <= tmp_7_fu_1351_p3[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (icmp_ln95_reg_1743_pp4_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        Ci_addr_4_reg_2088[3 : 2] <= tmp_8_fu_1376_p3[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        add43_i_1_reg_2021 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        add43_i_2_reg_2041 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        add43_i_3_reg_2061 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage10_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln95_reg_1743_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        add43_i_reg_2001 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_759_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln32_reg_1593 <= add_ln32_fu_809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_fu_836_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln41_reg_1617 <= add_ln41_fu_886_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln45_fu_913_p2 == 1'd0))) begin
        add_ln51_reg_1641 <= add_ln51_fu_963_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln55_fu_990_p2 == 1'd0))) begin
        add_ln61_reg_1665 <= add_ln61_fu_1040_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        add_ln95_1_reg_1738 <= add_ln95_1_fu_1073_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln95_fu_1079_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        add_ln95_reg_1747 <= add_ln95_fu_1085_p2;
        icmp_ln99_reg_1752 <= icmp_ln99_fu_1091_p2;
        select_ln95_reg_1757 <= select_ln95_fu_1097_p3;
        tmp_9_reg_1765[8 : 2] <= tmp_9_fu_1105_p3[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage10_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        add_ln99_reg_1910 <= add_ln99_fu_1202_p2;
        mul33_i_reg_1900 <= grp_fu_731_p2;
        mul42_i_reg_1905 <= grp_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage9_11001) & (icmp_ln95_reg_1743_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
        cmp3_i_reg_1975 <= cmp3_i_fu_1210_p2;
        select_ln103_reg_1986 <= select_ln103_fu_1215_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        cmp49_i_reg_1862 <= cmp49_i_fu_1197_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        cmp49_i_reg_1862_pp4_iter1_reg <= cmp49_i_reg_1862;
        cmp49_i_reg_1862_pp4_iter2_reg <= cmp49_i_reg_1862_pp4_iter1_reg;
        cmp49_i_reg_1862_pp4_iter3_reg <= cmp49_i_reg_1862_pp4_iter2_reg;
        select_ln103_5_reg_2036 <= select_ln103_5_fu_1266_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln26_reg_1584 <= icmp_ln26_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln35_reg_1608 <= icmp_ln35_fu_836_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln45_reg_1632 <= icmp_ln45_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln55_reg_1656 <= icmp_ln55_fu_990_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln69_reg_2098 <= icmp_ln69_fu_1397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln82_reg_2122 <= icmp_ln82_fu_1475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln95_reg_1743 <= icmp_ln95_fu_1079_p2;
        icmp_ln95_reg_1743_pp4_iter1_reg <= icmp_ln95_reg_1743;
        icmp_ln95_reg_1743_pp4_iter2_reg <= icmp_ln95_reg_1743_pp4_iter1_reg;
        icmp_ln95_reg_1743_pp4_iter3_reg <= icmp_ln95_reg_1743_pp4_iter2_reg;
        select_ln103_2_reg_2006 <= select_ln103_2_fu_1236_p3;
        select_ln95_reg_1757_pp4_iter1_reg <= select_ln95_reg_1757;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        mul24_i_1_reg_1920 <= grp_fu_735_p2;
        mul_i_1_reg_1915 <= grp_fu_731_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        mul24_i_2_reg_1940 <= grp_fu_735_p2;
        mul_i_2_reg_1935 <= grp_fu_731_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        mul24_i_3_reg_1960 <= grp_fu_735_p2;
        mul_i_3_reg_1955 <= grp_fu_731_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage9_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
        mul24_i_reg_1895 <= grp_fu_735_p2;
        mul_i_reg_1890 <= grp_fu_731_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        mul33_i_1_reg_1925 <= grp_fu_731_p2;
        mul42_i_1_reg_1930 <= grp_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        mul33_i_2_reg_1945 <= grp_fu_731_p2;
        mul42_i_2_reg_1950 <= grp_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        mul33_i_3_reg_1965 <= grp_fu_731_p2;
        mul42_i_3_reg_1970 <= grp_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln55_reg_1656 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        p_phi18_reg_597 <= tmp_i66_id_reg_1675;
        p_phi19_reg_610 <= tmp_i66_dest_reg_1680;
        p_phi_reg_584 <= tmp_i66_user_reg_1670;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln35_fu_836_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln26_fu_759_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln55_fu_990_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln45_fu_913_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        reg_743 <= INPUT_STREAM_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage10_11001) & (icmp_ln95_reg_1743_pp4_iter2_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10)) | ((1'b0 == ap_block_pp4_stage9_11001) & (icmp_ln95_reg_1743_pp4_iter2_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage9)))) begin
        reg_747 <= grp_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage9_11001) & (icmp_ln95_reg_1743_pp4_iter2_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
        resultr_0_fu_204 <= grp_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        resultr_13_fu_196 <= grp_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        resultr_2_fu_188 <= grp_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        resultr_3_fu_180 <= grp_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage10_11001) & (icmp_ln95_reg_1743_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        select_ln103_1_reg_1996 <= select_ln103_1_fu_1226_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        select_ln103_3_reg_2016 <= select_ln103_3_fu_1246_p3;
        select_ln95_1_reg_1782_pp4_iter1_reg <= select_ln95_1_reg_1782;
        select_ln95_1_reg_1782_pp4_iter2_reg <= select_ln95_1_reg_1782_pp4_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        select_ln103_4_reg_2026 <= select_ln103_4_fu_1256_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage4_11001) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        select_ln103_6_reg_2046 <= select_ln103_6_fu_1276_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        select_ln103_7_reg_2056 <= select_ln103_7_fu_1286_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln26_fu_759_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln26_1_reg_1588 <= select_ln26_1_fu_785_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_fu_836_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln35_1_reg_1612 <= select_ln35_1_fu_862_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln45_fu_913_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        select_ln45_1_reg_1636 <= select_ln45_1_fu_939_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln55_fu_990_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        select_ln55_1_reg_1660 <= select_ln55_1_fu_1016_p3;
        tmp_i66_dest_reg_1680 <= INPUT_STREAM_TDEST;
        tmp_i66_id_reg_1675 <= INPUT_STREAM_TID;
        tmp_i66_user_reg_1670 <= INPUT_STREAM_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln69_fu_1397_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        select_ln69_1_reg_2102 <= select_ln69_1_fu_1423_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln82_fu_1475_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        select_ln82_1_reg_2126 <= select_ln82_1_fu_1501_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        sub_i_1_reg_2011 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        sub_i_2_reg_2031 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        sub_i_3_reg_2051 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage9_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln95_reg_1743_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
        sub_i_reg_1991 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage10_11001) & (icmp_ln95_reg_1743_pp4_iter2_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        temp_sumi_load_0_fu_208 <= grp_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        temp_sumi_load_1_fu_200 <= grp_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        temp_sumi_load_2_fu_192 <= grp_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        temp_sumi_load_3_fu_184 <= grp_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln82_fu_1475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        val_last_V_reg_2136 <= val_last_V_fu_1562_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        Ai_address0 = p_cast_fu_1146_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Ai_address0 = zext_ln41_1_fu_898_p1;
    end else begin
        Ai_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        Ai_ce0 = 1'b1;
    end else begin
        Ai_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln35_reg_1608 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Ai_we0 = 1'b1;
    end else begin
        Ai_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        Ar_address0 = p_cast_fu_1146_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ar_address0 = zext_ln32_1_fu_821_p1;
    end else begin
        Ar_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Ar_ce0 = 1'b1;
    end else begin
        Ar_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln26_reg_1584 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ar_we0 = 1'b1;
    end else begin
        Ar_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        Bi_address0 = tmp_2_fu_1187_p3;
    end else if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        Bi_address0 = tmp_1_fu_1172_p3;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        Bi_address0 = tmp_s_fu_1157_p3;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        Bi_address0 = zext_ln105_fu_1113_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        Bi_address0 = zext_ln61_1_fu_1064_p1;
    end else begin
        Bi_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        Bi_ce0 = 1'b1;
    end else begin
        Bi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln55_reg_1656 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        Bi_we0 = 1'b1;
    end else begin
        Bi_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        Br_address0 = tmp_2_fu_1187_p3;
    end else if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        Br_address0 = tmp_1_fu_1172_p3;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        Br_address0 = tmp_s_fu_1157_p3;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        Br_address0 = zext_ln105_fu_1113_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Br_address0 = zext_ln51_1_fu_975_p1;
    end else begin
        Br_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        Br_ce0 = 1'b1;
    end else begin
        Br_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln45_reg_1632 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Br_we0 = 1'b1;
    end else begin
        Br_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        Ci_address0 = zext_ln87_1_fu_1551_p1;
    end else if (((1'b0 == ap_block_pp4_stage6) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        Ci_address0 = Ci_addr_4_reg_2088;
    end else if (((1'b0 == ap_block_pp4_stage4) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        Ci_address0 = Ci_addr_3_reg_2083;
    end else if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        Ci_address0 = Ci_addr_2_reg_2078;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        Ci_address0 = Ci_addr_1_reg_2073;
    end else begin
        Ci_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage6_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6)))) begin
        Ci_ce0 = 1'b1;
    end else begin
        Ci_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage4_11001) & (cmp49_i_reg_1862_pp4_iter3_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b0 == ap_block_pp4_stage2_11001) & (cmp49_i_reg_1862_pp4_iter2_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (cmp49_i_reg_1862_pp4_iter2_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage6_11001) & (cmp49_i_reg_1862_pp4_iter3_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6)))) begin
        Ci_we0 = 1'b1;
    end else begin
        Ci_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        Cr_address0 = zext_ln74_1_fu_1453_p1;
    end else if (((1'b0 == ap_block_pp4_stage5) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        Cr_address0 = tmp_8_fu_1376_p3;
    end else if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        Cr_address0 = tmp_7_fu_1351_p3;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        Cr_address0 = tmp_6_fu_1326_p3;
    end else if (((1'b0 == ap_block_pp4_stage10) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        Cr_address0 = zext_ln110_fu_1305_p1;
    end else begin
        Cr_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage10_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10)))) begin
        Cr_ce0 = 1'b1;
    end else begin
        Cr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage5_11001) & (cmp49_i_reg_1862_pp4_iter3_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b0 == ap_block_pp4_stage3_11001) & (cmp49_i_reg_1862_pp4_iter2_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage1_11001) & (cmp49_i_reg_1862_pp4_iter2_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage10_11001) & (cmp49_i_reg_1862_pp4_iter2_reg == 1'd1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10)))) begin
        Cr_we0 = 1'b1;
    end else begin
        Cr_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln35_fu_836_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln26_fu_759_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln55_fu_990_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln45_fu_913_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        INPUT_STREAM_TDATA_blk_n = INPUT_STREAM_TVALID;
    end else begin
        INPUT_STREAM_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln35_fu_836_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln26_fu_759_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln55_fu_990_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln45_fu_913_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        INPUT_STREAM_TREADY = 1'b1;
    end else begin
        INPUT_STREAM_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_01001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln82_reg_2122 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        OUTPUT_STREAM_TDATA = bitcast_ln303_1_fu_1574_p1;
    end else if (((1'b0 == ap_block_pp5_stage0_01001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln69_reg_2098 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        OUTPUT_STREAM_TDATA = bitcast_ln303_fu_1464_p1;
    end else begin
        OUTPUT_STREAM_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln82_reg_2122 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln69_reg_2098 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1)))) begin
        OUTPUT_STREAM_TDATA_blk_n = OUTPUT_STREAM_TREADY;
    end else begin
        OUTPUT_STREAM_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_01001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln82_reg_2122 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        OUTPUT_STREAM_TLAST = val_last_V_reg_2136;
    end else if (((1'b0 == ap_block_pp5_stage0_01001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln69_reg_2098 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        OUTPUT_STREAM_TLAST = 1'd0;
    end else begin
        OUTPUT_STREAM_TLAST = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln82_reg_2122 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln69_reg_2098 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1)))) begin
        OUTPUT_STREAM_TVALID = 1'b1;
    end else begin
        OUTPUT_STREAM_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln26_fu_759_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln35_fu_836_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln45_fu_913_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln55_fu_990_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_fu_1079_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln69_fu_1397_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state55 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state55 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln82_fu_1475_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state58 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state58 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln35_reg_1608 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_1_phi_fu_500_p4 = select_ln35_1_reg_1612;
    end else begin
        ap_phi_mux_i_1_phi_fu_500_p4 = i_1_reg_496;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln45_reg_1632 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_2_phi_fu_533_p4 = select_ln45_1_reg_1636;
    end else begin
        ap_phi_mux_i_2_phi_fu_533_p4 = i_2_reg_529;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln55_reg_1656 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_i_3_phi_fu_566_p4 = select_ln55_1_reg_1660;
    end else begin
        ap_phi_mux_i_3_phi_fu_566_p4 = i_3_reg_562;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_i_4_phi_fu_638_p4 = select_ln95_1_reg_1782;
    end else begin
        ap_phi_mux_i_4_phi_fu_638_p4 = i_4_reg_634;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln69_reg_2098 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1))) begin
        ap_phi_mux_i_5_phi_fu_672_p4 = select_ln69_1_reg_2102;
    end else begin
        ap_phi_mux_i_5_phi_fu_672_p4 = i_5_reg_668;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln82_reg_2122 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1))) begin
        ap_phi_mux_i_6_phi_fu_705_p4 = select_ln82_1_reg_2126;
    end else begin
        ap_phi_mux_i_6_phi_fu_705_p4 = i_6_reg_701;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln26_reg_1584 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_467_p4 = select_ln26_1_reg_1588;
    end else begin
        ap_phi_mux_i_phi_fu_467_p4 = i_reg_463;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_indvar_flatten39_phi_fu_627_p4 = add_ln95_1_reg_1738;
    end else begin
        ap_phi_mux_indvar_flatten39_phi_fu_627_p4 = indvar_flatten39_reg_623;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_k_phi_fu_650_p4 = add_ln99_reg_1910;
    end else begin
        ap_phi_mux_k_phi_fu_650_p4 = k_reg_646;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage9) & (icmp_ln95_reg_1743_pp4_iter2_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
        ap_sig_allocacmp_resultr_0_load = grp_fu_727_p2;
    end else begin
        ap_sig_allocacmp_resultr_0_load = resultr_0_fu_204;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_sig_allocacmp_resultr_13_load = grp_fu_727_p2;
    end else begin
        ap_sig_allocacmp_resultr_13_load = resultr_13_fu_196;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        ap_sig_allocacmp_resultr_2_load = grp_fu_727_p2;
    end else begin
        ap_sig_allocacmp_resultr_2_load = resultr_2_fu_188;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage4) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        ap_sig_allocacmp_resultr_3_load = grp_fu_727_p2;
    end else begin
        ap_sig_allocacmp_resultr_3_load = resultr_3_fu_180;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage10) & (icmp_ln95_reg_1743_pp4_iter2_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        ap_sig_allocacmp_temp_sumi_load = grp_fu_727_p2;
    end else begin
        ap_sig_allocacmp_temp_sumi_load = temp_sumi_load_0_fu_208;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        ap_sig_allocacmp_temp_sumi_load_4 = grp_fu_727_p2;
    end else begin
        ap_sig_allocacmp_temp_sumi_load_4 = temp_sumi_load_1_fu_200;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        ap_sig_allocacmp_temp_sumi_load_5 = grp_fu_727_p2;
    end else begin
        ap_sig_allocacmp_temp_sumi_load_5 = temp_sumi_load_2_fu_192;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage5) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        ap_sig_allocacmp_temp_sumi_load_6 = grp_fu_727_p2;
    end else begin
        ap_sig_allocacmp_temp_sumi_load_6 = temp_sumi_load_3_fu_184;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage5_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b0 == ap_block_pp4_stage3_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage1_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage10_00001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage10)))) begin
        grp_fu_723_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp4_stage6_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6)) | ((1'b0 == ap_block_pp4_stage4_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b0 == ap_block_pp4_stage2_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage0_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln95_reg_1743 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        grp_fu_723_opcode = 2'd0;
    end else begin
        grp_fu_723_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage6) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        grp_fu_723_p0 = mul33_i_3_reg_1965;
    end else if (((1'b0 == ap_block_pp4_stage5) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        grp_fu_723_p0 = mul_i_3_reg_1955;
    end else if (((1'b0 == ap_block_pp4_stage4) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        grp_fu_723_p0 = mul33_i_2_reg_1945;
    end else if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        grp_fu_723_p0 = mul_i_2_reg_1935;
    end else if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_723_p0 = mul33_i_1_reg_1925;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        grp_fu_723_p0 = mul_i_1_reg_1915;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        grp_fu_723_p0 = mul33_i_reg_1900;
    end else if (((1'b0 == ap_block_pp4_stage10) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        grp_fu_723_p0 = mul_i_reg_1890;
    end else begin
        grp_fu_723_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage6) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        grp_fu_723_p1 = mul42_i_3_reg_1970;
    end else if (((1'b0 == ap_block_pp4_stage5) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        grp_fu_723_p1 = mul24_i_3_reg_1960;
    end else if (((1'b0 == ap_block_pp4_stage4) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        grp_fu_723_p1 = mul42_i_2_reg_1950;
    end else if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        grp_fu_723_p1 = mul24_i_2_reg_1940;
    end else if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_723_p1 = mul42_i_1_reg_1930;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        grp_fu_723_p1 = mul24_i_1_reg_1920;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        grp_fu_723_p1 = mul42_i_reg_1905;
    end else if (((1'b0 == ap_block_pp4_stage10) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        grp_fu_723_p1 = mul24_i_reg_1895;
    end else begin
        grp_fu_723_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage6) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        grp_fu_727_p0 = select_ln103_7_reg_2056;
    end else if (((1'b0 == ap_block_pp4_stage5) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        grp_fu_727_p0 = select_ln103_6_reg_2046;
    end else if (((1'b0 == ap_block_pp4_stage4) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        grp_fu_727_p0 = select_ln103_5_reg_2036;
    end else if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        grp_fu_727_p0 = select_ln103_4_reg_2026;
    end else if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_727_p0 = select_ln103_3_reg_2016;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        grp_fu_727_p0 = select_ln103_2_reg_2006;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        grp_fu_727_p0 = select_ln103_1_reg_1996;
    end else if (((1'b0 == ap_block_pp4_stage10) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        grp_fu_727_p0 = select_ln103_reg_1986;
    end else begin
        grp_fu_727_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage6) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        grp_fu_727_p1 = add43_i_3_reg_2061;
    end else if (((1'b0 == ap_block_pp4_stage5) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        grp_fu_727_p1 = sub_i_3_reg_2051;
    end else if (((1'b0 == ap_block_pp4_stage4) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        grp_fu_727_p1 = add43_i_2_reg_2041;
    end else if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        grp_fu_727_p1 = sub_i_2_reg_2031;
    end else if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        grp_fu_727_p1 = add43_i_1_reg_2021;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        grp_fu_727_p1 = sub_i_1_reg_2011;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        grp_fu_727_p1 = add43_i_reg_2001;
    end else if (((1'b0 == ap_block_pp4_stage10) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        grp_fu_727_p1 = sub_i_reg_1991;
    end else begin
        grp_fu_727_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp4_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp4_stage10) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
            grp_fu_731_p1 = Bi_load_3_reg_1884;
        end else if (((1'b0 == ap_block_pp4_stage9) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
            grp_fu_731_p1 = Br_load_3_reg_1878;
        end else if (((1'b0 == ap_block_pp4_stage8) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
            grp_fu_731_p1 = Bi_load_2_reg_1872;
        end else if (((1'b0 == ap_block_pp4_stage7) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
            grp_fu_731_p1 = Br_load_2_reg_1866;
        end else if (((1'b0 == ap_block_pp4_stage6) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
            grp_fu_731_p1 = Bi_load_1_reg_1846;
        end else if (((1'b0 == ap_block_pp4_stage5) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
            grp_fu_731_p1 = Br_load_1_reg_1840;
        end else if (((1'b0 == ap_block_pp4_stage4) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
            grp_fu_731_p1 = Bi_load_reg_1814;
        end else if (((1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
            grp_fu_731_p1 = Br_load_reg_1808;
        end else begin
            grp_fu_731_p1 = 'bx;
        end
    end else begin
        grp_fu_731_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp4_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp4_stage10) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
            grp_fu_735_p1 = Br_load_3_reg_1878;
        end else if (((1'b0 == ap_block_pp4_stage9) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
            grp_fu_735_p1 = Bi_load_3_reg_1884;
        end else if (((1'b0 == ap_block_pp4_stage8) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
            grp_fu_735_p1 = Br_load_2_reg_1866;
        end else if (((1'b0 == ap_block_pp4_stage7) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
            grp_fu_735_p1 = Bi_load_2_reg_1872;
        end else if (((1'b0 == ap_block_pp4_stage6) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
            grp_fu_735_p1 = Br_load_1_reg_1840;
        end else if (((1'b0 == ap_block_pp4_stage5) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
            grp_fu_735_p1 = Bi_load_1_reg_1846;
        end else if (((1'b0 == ap_block_pp4_stage4) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
            grp_fu_735_p1 = Br_load_reg_1808;
        end else if (((1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
            grp_fu_735_p1 = Bi_load_reg_1814;
        end else begin
            grp_fu_735_p1 = 'bx;
        end
    end else begin
        grp_fu_735_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln26_fu_759_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln26_fu_759_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln35_fu_836_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln35_fu_836_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln45_fu_913_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln45_fu_913_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln55_fu_990_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln55_fu_990_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln95_fu_1079_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln95_fu_1079_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((1'b0 == ap_block_pp4_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((1'b0 == ap_block_pp4_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_pp4_stage4 : begin
            if ((1'b0 == ap_block_pp4_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end
        end
        ap_ST_fsm_pp4_stage5 : begin
            if ((1'b0 == ap_block_pp4_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end
        end
        ap_ST_fsm_pp4_stage6 : begin
            if ((~((1'b0 == ap_block_pp4_stage6_subdone) & (ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage6)) & (1'b0 == ap_block_pp4_stage6_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end else if (((1'b0 == ap_block_pp4_stage6_subdone) & (ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end
        end
        ap_ST_fsm_pp4_stage7 : begin
            if ((1'b0 == ap_block_pp4_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end
        end
        ap_ST_fsm_pp4_stage8 : begin
            if ((1'b0 == ap_block_pp4_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end
        end
        ap_ST_fsm_pp4_stage9 : begin
            if ((1'b0 == ap_block_pp4_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage9;
            end
        end
        ap_ST_fsm_pp4_stage10 : begin
            if ((1'b0 == ap_block_pp4_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage10;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln69_fu_1397_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln69_fu_1397_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln82_fu_1475_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln82_fu_1475_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ai_d0 = reg_743;

assign Ar_d0 = reg_743;

assign Bi_d0 = reg_743;

assign Br_d0 = reg_743;

assign OUTPUT_STREAM_TDEST = p_phi19_reg_610;

assign OUTPUT_STREAM_TID = p_phi18_reg_597;

assign OUTPUT_STREAM_TKEEP = 4'd15;

assign OUTPUT_STREAM_TSTRB = 4'd15;

assign OUTPUT_STREAM_TUSER = p_phi_reg_584;

assign add_ln26_1_fu_753_p2 = (indvar_flatten_reg_452 + 9'd1);

assign add_ln26_fu_765_p2 = (ap_phi_mux_i_phi_fu_467_p4 + 3'd1);

assign add_ln28_fu_815_p2 = (select_ln26_fu_777_p3 + 7'd1);

assign add_ln32_fu_809_p2 = (tmp_cast_fu_797_p3 + zext_ln32_fu_805_p1);

assign add_ln35_1_fu_830_p2 = (indvar_flatten7_reg_485 + 9'd1);

assign add_ln35_fu_842_p2 = (ap_phi_mux_i_1_phi_fu_500_p4 + 3'd1);

assign add_ln37_fu_892_p2 = (select_ln35_fu_854_p3 + 7'd1);

assign add_ln41_fu_886_p2 = (tmp_1_cast_fu_874_p3 + zext_ln41_fu_882_p1);

assign add_ln45_1_fu_907_p2 = (indvar_flatten15_reg_518 + 9'd1);

assign add_ln45_fu_919_p2 = (ap_phi_mux_i_2_phi_fu_533_p4 + 7'd1);

assign add_ln47_fu_969_p2 = (select_ln45_fu_931_p3 + 3'd1);

assign add_ln51_fu_963_p2 = (tmp_2_cast_fu_951_p3 + zext_ln51_fu_959_p1);

assign add_ln55_1_fu_984_p2 = (indvar_flatten23_reg_551 + 9'd1);

assign add_ln55_fu_996_p2 = (ap_phi_mux_i_3_phi_fu_566_p4 + 7'd1);

assign add_ln57_fu_1058_p2 = (select_ln55_fu_1008_p3 + 3'd1);

assign add_ln61_fu_1040_p2 = (tmp_3_cast_fu_1028_p3 + zext_ln61_fu_1036_p1);

assign add_ln69_1_fu_1391_p2 = (indvar_flatten47_reg_657 + 5'd1);

assign add_ln69_fu_1403_p2 = (ap_phi_mux_i_5_phi_fu_672_p4 + 3'd1);

assign add_ln71_fu_1458_p2 = (select_ln69_fu_1415_p3 + 3'd1);

assign add_ln74_fu_1447_p2 = (tmp_13_cast_fu_1435_p3 + zext_ln74_fu_1443_p1);

assign add_ln82_1_fu_1469_p2 = (indvar_flatten55_reg_690 + 5'd1);

assign add_ln82_fu_1481_p2 = (ap_phi_mux_i_6_phi_fu_705_p4 + 3'd1);

assign add_ln84_fu_1568_p2 = (select_ln82_fu_1493_p3 + 3'd1);

assign add_ln87_fu_1545_p2 = (tmp_14_cast_fu_1513_p3 + zext_ln87_fu_1541_p1);

assign add_ln95_1_fu_1073_p2 = (ap_phi_mux_indvar_flatten39_phi_fu_627_p4 + 9'd1);

assign add_ln95_fu_1085_p2 = (ap_phi_mux_i_4_phi_fu_638_p4 + 3'd1);

assign add_ln99_fu_1202_p2 = (select_ln95_reg_1757 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp4_stage10 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp4_stage4 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp4_stage7 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp4_stage8 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp4_stage9 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln26_fu_759_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == INPUT_STREAM_TVALID));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln26_fu_759_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == INPUT_STREAM_TVALID));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln35_fu_836_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == INPUT_STREAM_TVALID));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln35_fu_836_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == INPUT_STREAM_TVALID));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln45_fu_913_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln45_fu_913_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln55_fu_990_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln55_fu_990_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_01001 = ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln69_reg_2098 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((ap_enable_reg_pp5_iter1 == 1'b1) & ((1'b1 == ap_block_state56_io) | ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln69_reg_2098 == 1'd0))));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((ap_enable_reg_pp5_iter1 == 1'b1) & ((1'b1 == ap_block_state56_io) | ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln69_reg_2098 == 1'd0))));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_01001 = ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln82_reg_2122 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((ap_enable_reg_pp6_iter1 == 1'b1) & ((1'b1 == ap_block_state59_io) | ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln82_reg_2122 == 1'd0))));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((ap_enable_reg_pp6_iter1 == 1'b1) & ((1'b1 == ap_block_state59_io) | ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln82_reg_2122 == 1'd0))));
end

always @ (*) begin
    ap_block_state11_pp3_stage0_iter0 = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln55_fu_990_p2 == 1'd0));
end

assign ap_block_state12_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp4_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp4_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp4_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp4_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp4_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp4_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp4_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp4_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp4_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp4_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp4_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp4_stage4_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((icmp_ln26_fu_759_p2 == 1'd0) & (1'b0 == INPUT_STREAM_TVALID));
end

assign ap_block_state30_pp4_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp4_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp4_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp4_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp4_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp4_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp4_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp4_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp4_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp4_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp4_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp4_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp4_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp4_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp4_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp4_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp4_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp4_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp4_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp4_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp4_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp4_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state56_io = ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln69_reg_2098 == 1'd0));
end

always @ (*) begin
    ap_block_state56_pp5_stage0_iter1 = ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln69_reg_2098 == 1'd0));
end

assign ap_block_state58_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state59_io = ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln82_reg_2122 == 1'd0));
end

always @ (*) begin
    ap_block_state59_pp6_stage0_iter1 = ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln82_reg_2122 == 1'd0));
end

always @ (*) begin
    ap_block_state5_pp1_stage0_iter0 = ((icmp_ln35_fu_836_p2 == 1'd0) & (1'b0 == INPUT_STREAM_TVALID));
end

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp2_stage0_iter0 = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln45_fu_913_p2 == 1'd0));
end

assign ap_block_state9_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign bitcast_ln303_1_fu_1574_p1 = Ci_q0;

assign bitcast_ln303_fu_1464_p1 = Cr_q0;

assign cmp3_i_fu_1210_p2 = ((select_ln95_reg_1757_pp4_iter1_reg == 7'd0) ? 1'b1 : 1'b0);

assign cmp49_i_fu_1197_p2 = ((select_ln95_reg_1757 == 7'd63) ? 1'b1 : 1'b0);

assign cmp66210_fu_1527_p2 = ((ap_phi_mux_i_6_phi_fu_705_p4 == 3'd3) ? 1'b1 : 1'b0);

assign cmp66_mid1_fu_1521_p2 = ((add_ln82_fu_1481_p2 == 3'd3) ? 1'b1 : 1'b0);

assign empty_17_fu_1125_p1 = select_ln95_1_fu_1119_p3[1:0];

assign empty_18_fu_1140_p2 = (tmp_4_cast_fu_1129_p3 + select_ln95_cast_fu_1137_p1);

assign icmp_ln26_fu_759_p2 = ((indvar_flatten_reg_452 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_771_p2 = ((j_reg_474 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_836_p2 = ((indvar_flatten7_reg_485 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_848_p2 = ((j_1_reg_507 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_913_p2 = ((indvar_flatten15_reg_518 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_925_p2 = ((j_2_reg_540 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_990_p2 = ((indvar_flatten23_reg_551 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_1002_p2 = ((j_3_reg_573 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1397_p2 = ((indvar_flatten47_reg_657 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_1409_p2 = ((j_4_reg_679 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_1475_p2 = ((indvar_flatten55_reg_690 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_1487_p2 = ((j_5_reg_712 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1556_p2 = ((select_ln82_fu_1493_p3 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_1079_p2 = ((ap_phi_mux_indvar_flatten39_phi_fu_627_p4 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_1091_p2 = ((ap_phi_mux_k_phi_fu_650_p4 == 7'd64) ? 1'b1 : 1'b0);

assign or_ln105_1_fu_1167_p2 = (tmp_9_reg_1765 | 9'd2);

assign or_ln105_2_fu_1182_p2 = (tmp_9_reg_1765 | 9'd3);

assign or_ln105_fu_1152_p2 = (tmp_9_reg_1765 | 9'd1);

assign or_ln110_1_fu_1346_p2 = (tmp_5_reg_2066 | 5'd2);

assign or_ln110_2_fu_1371_p2 = (tmp_5_reg_2066 | 5'd3);

assign or_ln110_fu_1321_p2 = (tmp_5_reg_2066 | 5'd1);

assign p_cast_fu_1146_p1 = empty_18_fu_1140_p2;

assign select_ln103_1_fu_1226_p3 = ((cmp3_i_reg_1975[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_temp_sumi_load);

assign select_ln103_2_fu_1236_p3 = ((cmp3_i_reg_1975[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_resultr_13_load);

assign select_ln103_3_fu_1246_p3 = ((cmp3_i_reg_1975[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_temp_sumi_load_4);

assign select_ln103_4_fu_1256_p3 = ((cmp3_i_reg_1975[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_resultr_2_load);

assign select_ln103_5_fu_1266_p3 = ((cmp3_i_reg_1975[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_temp_sumi_load_5);

assign select_ln103_6_fu_1276_p3 = ((cmp3_i_reg_1975[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_resultr_3_load);

assign select_ln103_7_fu_1286_p3 = ((cmp3_i_reg_1975[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_temp_sumi_load_6);

assign select_ln103_fu_1215_p3 = ((cmp3_i_fu_1210_p2[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_resultr_0_load);

assign select_ln26_1_fu_785_p3 = ((icmp_ln28_fu_771_p2[0:0] == 1'b1) ? add_ln26_fu_765_p2 : ap_phi_mux_i_phi_fu_467_p4);

assign select_ln26_fu_777_p3 = ((icmp_ln28_fu_771_p2[0:0] == 1'b1) ? 7'd0 : j_reg_474);

assign select_ln35_1_fu_862_p3 = ((icmp_ln37_fu_848_p2[0:0] == 1'b1) ? add_ln35_fu_842_p2 : ap_phi_mux_i_1_phi_fu_500_p4);

assign select_ln35_fu_854_p3 = ((icmp_ln37_fu_848_p2[0:0] == 1'b1) ? 7'd0 : j_1_reg_507);

assign select_ln45_1_fu_939_p3 = ((icmp_ln47_fu_925_p2[0:0] == 1'b1) ? add_ln45_fu_919_p2 : ap_phi_mux_i_2_phi_fu_533_p4);

assign select_ln45_fu_931_p3 = ((icmp_ln47_fu_925_p2[0:0] == 1'b1) ? 3'd0 : j_2_reg_540);

assign select_ln55_1_fu_1016_p3 = ((icmp_ln57_fu_1002_p2[0:0] == 1'b1) ? add_ln55_fu_996_p2 : ap_phi_mux_i_3_phi_fu_566_p4);

assign select_ln55_fu_1008_p3 = ((icmp_ln57_fu_1002_p2[0:0] == 1'b1) ? 3'd0 : j_3_reg_573);

assign select_ln69_1_fu_1423_p3 = ((icmp_ln71_fu_1409_p2[0:0] == 1'b1) ? add_ln69_fu_1403_p2 : ap_phi_mux_i_5_phi_fu_672_p4);

assign select_ln69_fu_1415_p3 = ((icmp_ln71_fu_1409_p2[0:0] == 1'b1) ? 3'd0 : j_4_reg_679);

assign select_ln82_1_fu_1501_p3 = ((icmp_ln84_fu_1487_p2[0:0] == 1'b1) ? add_ln82_fu_1481_p2 : ap_phi_mux_i_6_phi_fu_705_p4);

assign select_ln82_2_fu_1533_p3 = ((icmp_ln84_fu_1487_p2[0:0] == 1'b1) ? cmp66_mid1_fu_1521_p2 : cmp66210_fu_1527_p2);

assign select_ln82_fu_1493_p3 = ((icmp_ln84_fu_1487_p2[0:0] == 1'b1) ? 3'd0 : j_5_reg_712);

assign select_ln95_1_fu_1119_p3 = ((icmp_ln99_reg_1752[0:0] == 1'b1) ? add_ln95_reg_1747 : i_4_reg_634);

assign select_ln95_cast_fu_1137_p1 = select_ln95_reg_1757;

assign select_ln95_fu_1097_p3 = ((icmp_ln99_fu_1091_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_k_phi_fu_650_p4);

assign tmp_13_cast_fu_1435_p3 = {{trunc_ln74_fu_1431_p1}, {2'd0}};

assign tmp_14_cast_fu_1513_p3 = {{trunc_ln87_fu_1509_p1}, {2'd0}};

assign tmp_1_cast_fu_874_p3 = {{trunc_ln41_fu_870_p1}, {6'd0}};

assign tmp_1_fu_1172_p3 = {{55'd0}, {or_ln105_1_fu_1167_p2}};

assign tmp_2_cast_fu_951_p3 = {{trunc_ln51_fu_947_p1}, {2'd0}};

assign tmp_2_fu_1187_p3 = {{55'd0}, {or_ln105_2_fu_1182_p2}};

assign tmp_3_cast_fu_1028_p3 = {{trunc_ln61_fu_1024_p1}, {2'd0}};

assign tmp_4_cast_fu_1129_p3 = {{empty_17_fu_1125_p1}, {6'd0}};

assign tmp_5_fu_1298_p3 = {{select_ln95_1_reg_1782_pp4_iter2_reg}, {2'd0}};

assign tmp_6_fu_1326_p3 = {{59'd0}, {or_ln110_fu_1321_p2}};

assign tmp_7_fu_1351_p3 = {{59'd0}, {or_ln110_1_fu_1346_p2}};

assign tmp_8_fu_1376_p3 = {{59'd0}, {or_ln110_2_fu_1371_p2}};

assign tmp_9_fu_1105_p3 = {{select_ln95_fu_1097_p3}, {2'd0}};

assign tmp_cast_fu_797_p3 = {{trunc_ln32_fu_793_p1}, {6'd0}};

assign tmp_s_fu_1157_p3 = {{55'd0}, {or_ln105_fu_1152_p2}};

assign trunc_ln32_fu_793_p1 = select_ln26_1_fu_785_p3[1:0];

assign trunc_ln41_fu_870_p1 = select_ln35_1_fu_862_p3[1:0];

assign trunc_ln51_fu_947_p1 = select_ln45_1_fu_939_p3[5:0];

assign trunc_ln61_fu_1024_p1 = select_ln55_1_fu_1016_p3[5:0];

assign trunc_ln74_fu_1431_p1 = select_ln69_1_fu_1423_p3[1:0];

assign trunc_ln87_fu_1509_p1 = select_ln82_1_fu_1501_p3[1:0];

assign val_last_V_fu_1562_p2 = (select_ln82_2_fu_1533_p3 & icmp_ln88_fu_1556_p2);

assign zext_ln105_fu_1113_p1 = tmp_9_fu_1105_p3;

assign zext_ln110_fu_1305_p1 = tmp_5_fu_1298_p3;

assign zext_ln32_1_fu_821_p1 = add_ln32_reg_1593;

assign zext_ln32_fu_805_p1 = select_ln26_fu_777_p3;

assign zext_ln41_1_fu_898_p1 = add_ln41_reg_1617;

assign zext_ln41_fu_882_p1 = select_ln35_fu_854_p3;

assign zext_ln51_1_fu_975_p1 = add_ln51_reg_1641;

assign zext_ln51_fu_959_p1 = select_ln45_fu_931_p3;

assign zext_ln61_1_fu_1064_p1 = add_ln61_reg_1665;

assign zext_ln61_fu_1036_p1 = select_ln55_fu_1008_p3;

assign zext_ln74_1_fu_1453_p1 = add_ln74_fu_1447_p2;

assign zext_ln74_fu_1443_p1 = select_ln69_fu_1415_p3;

assign zext_ln87_1_fu_1551_p1 = add_ln87_fu_1545_p2;

assign zext_ln87_fu_1541_p1 = select_ln82_fu_1493_p3;

always @ (posedge ap_clk) begin
    tmp_9_reg_1765[1:0] <= 2'b00;
    tmp_5_reg_2066[1:0] <= 2'b00;
    Ci_addr_1_reg_2073[1:0] <= 2'b00;
    Ci_addr_2_reg_2078[1:0] <= 2'b01;
    Ci_addr_3_reg_2083[1:0] <= 2'b10;
    Ci_addr_4_reg_2088[1:0] <= 2'b11;
end

endmodule //HLS_accel_wrapper_mmult_hw
