// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="HLS_accel_HLS_accel,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.416000,HLS_SYN_LAT=3917,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3408,HLS_SYN_LUT=2907,HLS_VERSION=2020_2}" *)

module HLS_accel (
        ap_clk,
        ap_rst_n,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst_n;
input  [31:0] INPUT_STREAM_TDATA;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
input  [3:0] INPUT_STREAM_TKEEP;
input  [3:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [31:0] OUTPUT_STREAM_TDATA;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;
output  [3:0] OUTPUT_STREAM_TKEEP;
output  [3:0] OUTPUT_STREAM_TSTRB;
output  [0:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [0:0] OUTPUT_STREAM_TID;
output  [0:0] OUTPUT_STREAM_TDEST;

 reg    ap_rst_n_inv;
wire    grp_wrapper_mmult_hw_fu_50_ap_start;
wire    grp_wrapper_mmult_hw_fu_50_ap_done;
wire    grp_wrapper_mmult_hw_fu_50_ap_idle;
wire    grp_wrapper_mmult_hw_fu_50_ap_ready;
wire    grp_wrapper_mmult_hw_fu_50_INPUT_STREAM_TREADY;
wire   [31:0] grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TDATA;
wire    grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TVALID;
wire    grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TREADY;
wire   [3:0] grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TKEEP;
wire   [3:0] grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TSTRB;
wire   [0:0] grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TUSER;
wire   [0:0] grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TLAST;
wire   [0:0] grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TID;
wire   [0:0] grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TDEST;
reg    grp_wrapper_mmult_hw_fu_50_ap_start_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg   [3:0] ap_NS_fsm;
wire    ap_CS_fsm_state4;
wire    regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk;
wire    regslice_both_INPUT_STREAM_V_data_V_U_apdone_blk;
wire   [31:0] INPUT_STREAM_TDATA_int_regslice;
wire    INPUT_STREAM_TVALID_int_regslice;
reg    INPUT_STREAM_TREADY_int_regslice;
wire    regslice_both_INPUT_STREAM_V_data_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_keep_V_U_apdone_blk;
wire   [3:0] INPUT_STREAM_TKEEP_int_regslice;
wire    regslice_both_INPUT_STREAM_V_keep_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_keep_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_strb_V_U_apdone_blk;
wire   [3:0] INPUT_STREAM_TSTRB_int_regslice;
wire    regslice_both_INPUT_STREAM_V_strb_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_strb_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_user_V_U_apdone_blk;
wire   [0:0] INPUT_STREAM_TUSER_int_regslice;
wire    regslice_both_INPUT_STREAM_V_user_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_user_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_last_V_U_apdone_blk;
wire   [0:0] INPUT_STREAM_TLAST_int_regslice;
wire    regslice_both_INPUT_STREAM_V_last_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_last_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_id_V_U_apdone_blk;
wire   [0:0] INPUT_STREAM_TID_int_regslice;
wire    regslice_both_INPUT_STREAM_V_id_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_id_V_U_ack_in;
wire    regslice_both_INPUT_STREAM_V_dest_V_U_apdone_blk;
wire   [0:0] INPUT_STREAM_TDEST_int_regslice;
wire    regslice_both_INPUT_STREAM_V_dest_V_U_vld_out;
wire    regslice_both_INPUT_STREAM_V_dest_V_U_ack_in;
wire    OUTPUT_STREAM_TREADY_int_regslice;
wire    regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_keep_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_keep_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_keep_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_strb_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_strb_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_strb_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_user_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_user_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_user_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_last_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_last_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_last_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_id_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_id_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_id_V_U_vld_out;
wire    regslice_both_OUTPUT_STREAM_V_dest_V_U_apdone_blk;
wire    regslice_both_OUTPUT_STREAM_V_dest_V_U_ack_in_dummy;
wire    regslice_both_OUTPUT_STREAM_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 grp_wrapper_mmult_hw_fu_50_ap_start_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
end

HLS_accel_wrapper_mmult_hw grp_wrapper_mmult_hw_fu_50(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_wrapper_mmult_hw_fu_50_ap_start),
    .ap_done(grp_wrapper_mmult_hw_fu_50_ap_done),
    .ap_idle(grp_wrapper_mmult_hw_fu_50_ap_idle),
    .ap_ready(grp_wrapper_mmult_hw_fu_50_ap_ready),
    .INPUT_STREAM_TDATA(INPUT_STREAM_TDATA_int_regslice),
    .INPUT_STREAM_TVALID(INPUT_STREAM_TVALID_int_regslice),
    .INPUT_STREAM_TREADY(grp_wrapper_mmult_hw_fu_50_INPUT_STREAM_TREADY),
    .INPUT_STREAM_TKEEP(INPUT_STREAM_TKEEP_int_regslice),
    .INPUT_STREAM_TSTRB(INPUT_STREAM_TSTRB_int_regslice),
    .INPUT_STREAM_TUSER(INPUT_STREAM_TUSER_int_regslice),
    .INPUT_STREAM_TLAST(INPUT_STREAM_TLAST_int_regslice),
    .INPUT_STREAM_TID(INPUT_STREAM_TID_int_regslice),
    .INPUT_STREAM_TDEST(INPUT_STREAM_TDEST_int_regslice),
    .OUTPUT_STREAM_TDATA(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TDATA),
    .OUTPUT_STREAM_TVALID(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TVALID),
    .OUTPUT_STREAM_TREADY(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TREADY),
    .OUTPUT_STREAM_TKEEP(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TKEEP),
    .OUTPUT_STREAM_TSTRB(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TSTRB),
    .OUTPUT_STREAM_TUSER(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TUSER),
    .OUTPUT_STREAM_TLAST(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TLAST),
    .OUTPUT_STREAM_TID(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TID),
    .OUTPUT_STREAM_TDEST(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TDEST)
);

HLS_accel_regslice_both #(
    .DataWidth( 32 ))
regslice_both_INPUT_STREAM_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TDATA),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_data_V_U_ack_in),
    .data_out(INPUT_STREAM_TDATA_int_regslice),
    .vld_out(INPUT_STREAM_TVALID_int_regslice),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_data_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 4 ))
regslice_both_INPUT_STREAM_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TKEEP),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_keep_V_U_ack_in),
    .data_out(INPUT_STREAM_TKEEP_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_keep_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_keep_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 4 ))
regslice_both_INPUT_STREAM_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TSTRB),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_strb_V_U_ack_in),
    .data_out(INPUT_STREAM_TSTRB_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_strb_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_strb_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_INPUT_STREAM_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TUSER),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_user_V_U_ack_in),
    .data_out(INPUT_STREAM_TUSER_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_user_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_user_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_INPUT_STREAM_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TLAST),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_last_V_U_ack_in),
    .data_out(INPUT_STREAM_TLAST_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_last_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_last_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_INPUT_STREAM_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TID),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_id_V_U_ack_in),
    .data_out(INPUT_STREAM_TID_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_id_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_id_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_INPUT_STREAM_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(INPUT_STREAM_TDEST),
    .vld_in(INPUT_STREAM_TVALID),
    .ack_in(regslice_both_INPUT_STREAM_V_dest_V_U_ack_in),
    .data_out(INPUT_STREAM_TDEST_int_regslice),
    .vld_out(regslice_both_INPUT_STREAM_V_dest_V_U_vld_out),
    .ack_out(INPUT_STREAM_TREADY_int_regslice),
    .apdone_blk(regslice_both_INPUT_STREAM_V_dest_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 32 ))
regslice_both_OUTPUT_STREAM_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TDATA),
    .vld_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TVALID),
    .ack_in(OUTPUT_STREAM_TREADY_int_regslice),
    .data_out(OUTPUT_STREAM_TDATA),
    .vld_out(regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 4 ))
regslice_both_OUTPUT_STREAM_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TKEEP),
    .vld_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_keep_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TKEEP),
    .vld_out(regslice_both_OUTPUT_STREAM_V_keep_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_keep_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 4 ))
regslice_both_OUTPUT_STREAM_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TSTRB),
    .vld_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_strb_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TSTRB),
    .vld_out(regslice_both_OUTPUT_STREAM_V_strb_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_strb_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUTPUT_STREAM_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TUSER),
    .vld_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_user_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TUSER),
    .vld_out(regslice_both_OUTPUT_STREAM_V_user_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_user_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUTPUT_STREAM_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TLAST),
    .vld_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_last_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TLAST),
    .vld_out(regslice_both_OUTPUT_STREAM_V_last_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_last_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUTPUT_STREAM_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TID),
    .vld_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_id_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TID),
    .vld_out(regslice_both_OUTPUT_STREAM_V_id_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_id_V_U_apdone_blk)
);

HLS_accel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUTPUT_STREAM_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TDEST),
    .vld_in(grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TVALID),
    .ack_in(regslice_both_OUTPUT_STREAM_V_dest_V_U_ack_in_dummy),
    .data_out(OUTPUT_STREAM_TDEST),
    .vld_out(regslice_both_OUTPUT_STREAM_V_dest_V_U_vld_out),
    .ack_out(OUTPUT_STREAM_TREADY),
    .apdone_blk(regslice_both_OUTPUT_STREAM_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_wrapper_mmult_hw_fu_50_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_wrapper_mmult_hw_fu_50_ap_start_reg <= 1'b1;
        end else if ((grp_wrapper_mmult_hw_fu_50_ap_ready == 1'b1)) begin
            grp_wrapper_mmult_hw_fu_50_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        INPUT_STREAM_TREADY_int_regslice = grp_wrapper_mmult_hw_fu_50_INPUT_STREAM_TREADY;
    end else begin
        INPUT_STREAM_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_wrapper_mmult_hw_fu_50_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((regslice_both_OUTPUT_STREAM_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign INPUT_STREAM_TREADY = regslice_both_INPUT_STREAM_V_data_V_U_ack_in;

assign OUTPUT_STREAM_TVALID = regslice_both_OUTPUT_STREAM_V_data_V_U_vld_out;

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_wrapper_mmult_hw_fu_50_OUTPUT_STREAM_TREADY = (ap_CS_fsm_state3 & OUTPUT_STREAM_TREADY_int_regslice);

assign grp_wrapper_mmult_hw_fu_50_ap_start = grp_wrapper_mmult_hw_fu_50_ap_start_reg;

endmodule //HLS_accel
