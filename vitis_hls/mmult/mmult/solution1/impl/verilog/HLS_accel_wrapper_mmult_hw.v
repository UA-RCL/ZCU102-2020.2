// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module HLS_accel_wrapper_mmult_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_pp0_stage0 = 23'd2;
parameter    ap_ST_fsm_state4 = 23'd4;
parameter    ap_ST_fsm_pp1_stage0 = 23'd8;
parameter    ap_ST_fsm_state7 = 23'd16;
parameter    ap_ST_fsm_pp2_stage0 = 23'd32;
parameter    ap_ST_fsm_state10 = 23'd64;
parameter    ap_ST_fsm_pp3_stage0 = 23'd128;
parameter    ap_ST_fsm_state13 = 23'd256;
parameter    ap_ST_fsm_pp4_stage0 = 23'd512;
parameter    ap_ST_fsm_pp4_stage1 = 23'd1024;
parameter    ap_ST_fsm_pp4_stage2 = 23'd2048;
parameter    ap_ST_fsm_pp4_stage3 = 23'd4096;
parameter    ap_ST_fsm_pp4_stage4 = 23'd8192;
parameter    ap_ST_fsm_pp4_stage5 = 23'd16384;
parameter    ap_ST_fsm_pp4_stage6 = 23'd32768;
parameter    ap_ST_fsm_pp4_stage7 = 23'd65536;
parameter    ap_ST_fsm_pp4_stage8 = 23'd131072;
parameter    ap_ST_fsm_pp4_stage9 = 23'd262144;
parameter    ap_ST_fsm_pp4_stage10 = 23'd524288;
parameter    ap_ST_fsm_state55 = 23'd1048576;
parameter    ap_ST_fsm_pp5_stage0 = 23'd2097152;
parameter    ap_ST_fsm_state59 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] INPUT_STREAM_TDATA;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
input  [3:0] INPUT_STREAM_TKEEP;
input  [3:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [31:0] OUTPUT_STREAM_TDATA;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;
output  [3:0] OUTPUT_STREAM_TKEEP;
output  [3:0] OUTPUT_STREAM_TSTRB;
output  [0:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [0:0] OUTPUT_STREAM_TID;
output  [0:0] OUTPUT_STREAM_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg INPUT_STREAM_TREADY;
reg OUTPUT_STREAM_TVALID;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    INPUT_STREAM_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln84_fu_671_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] icmp_ln95_fu_748_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage0;
wire   [0:0] icmp_ln107_fu_825_p2;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_pp3_stage0;
wire   [0:0] icmp_ln119_fu_902_p2;
reg    OUTPUT_STREAM_TDATA_blk_n;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln162_reg_1944;
reg   [0:0] icmp_ln162_reg_1944_pp5_iter1_reg;
reg   [8:0] indvar_flatten_reg_437;
reg   [2:0] i_reg_448;
reg   [6:0] j_reg_459;
reg   [8:0] indvar_flatten7_reg_470;
reg   [2:0] i_1_reg_481;
reg   [6:0] j_1_reg_492;
reg   [8:0] indvar_flatten15_reg_503;
reg   [6:0] i_2_reg_514;
reg   [2:0] j_2_reg_525;
reg   [8:0] indvar_flatten23_reg_536;
reg   [6:0] i_3_reg_547;
reg   [2:0] j_3_reg_558;
reg   [8:0] indvar_flatten39_reg_569;
reg   [2:0] i_4_reg_580;
reg   [6:0] k_reg_592;
reg   [5:0] indvar_flatten47_reg_603;
reg   [3:0] i_5_reg_614;
reg   [2:0] j_4_reg_625;
reg   [31:0] reg_656;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
reg    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state9_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
reg    ap_block_state11_pp3_stage0_iter0;
wire    ap_block_state12_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [31:0] grp_fu_640_p2;
reg   [31:0] reg_660;
wire    ap_CS_fsm_pp4_stage10;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_state24_pp4_stage10_iter0;
wire    ap_block_state35_pp4_stage10_iter1;
wire    ap_block_state46_pp4_stage10_iter2;
wire    ap_block_pp4_stage10_11001;
reg   [0:0] icmp_ln117_reg_1585;
reg   [0:0] icmp_ln117_reg_1585_pp4_iter2_reg;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter3;
wire    ap_block_state14_pp4_stage0_iter0;
wire    ap_block_state25_pp4_stage0_iter1;
wire    ap_block_state36_pp4_stage0_iter2;
wire    ap_block_state47_pp4_stage0_iter3;
wire    ap_block_pp4_stage0_11001;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_state15_pp4_stage1_iter0;
wire    ap_block_state26_pp4_stage1_iter1;
wire    ap_block_state37_pp4_stage1_iter2;
wire    ap_block_state48_pp4_stage1_iter3;
wire    ap_block_pp4_stage1_11001;
wire    ap_CS_fsm_pp4_stage2;
wire    ap_block_state16_pp4_stage2_iter0;
wire    ap_block_state27_pp4_stage2_iter1;
wire    ap_block_state38_pp4_stage2_iter2;
wire    ap_block_state49_pp4_stage2_iter3;
wire    ap_block_pp4_stage2_11001;
wire    ap_CS_fsm_pp4_stage3;
wire    ap_block_state17_pp4_stage3_iter0;
wire    ap_block_state28_pp4_stage3_iter1;
wire    ap_block_state39_pp4_stage3_iter2;
wire    ap_block_state50_pp4_stage3_iter3;
wire    ap_block_pp4_stage3_11001;
wire    ap_CS_fsm_pp4_stage4;
wire    ap_block_state18_pp4_stage4_iter0;
wire    ap_block_state29_pp4_stage4_iter1;
wire    ap_block_state40_pp4_stage4_iter2;
wire    ap_block_state51_pp4_stage4_iter3;
wire    ap_block_pp4_stage4_11001;
wire    ap_CS_fsm_pp4_stage5;
wire    ap_block_state19_pp4_stage5_iter0;
wire    ap_block_state30_pp4_stage5_iter1;
wire    ap_block_state41_pp4_stage5_iter2;
wire    ap_block_state52_pp4_stage5_iter3;
wire    ap_block_pp4_stage5_11001;
wire    ap_CS_fsm_pp4_stage6;
wire    ap_block_state20_pp4_stage6_iter0;
wire    ap_block_state31_pp4_stage6_iter1;
wire    ap_block_state42_pp4_stage6_iter2;
wire    ap_block_state53_pp4_stage6_iter3;
wire    ap_block_pp4_stage6_11001;
wire   [8:0] add_ln84_1_fu_665_p2;
reg   [0:0] icmp_ln84_reg_1441;
wire   [2:0] select_ln84_1_fu_697_p3;
reg   [2:0] select_ln84_1_reg_1445;
wire   [7:0] add_ln92_fu_721_p2;
reg   [7:0] add_ln92_reg_1450;
wire   [6:0] add_ln86_fu_727_p2;
wire   [8:0] add_ln95_1_fu_742_p2;
reg   [0:0] icmp_ln95_reg_1465;
wire   [2:0] select_ln95_1_fu_774_p3;
reg   [2:0] select_ln95_1_reg_1469;
wire   [7:0] add_ln103_fu_798_p2;
reg   [7:0] add_ln103_reg_1474;
wire   [6:0] add_ln97_fu_804_p2;
wire   [8:0] add_ln107_1_fu_819_p2;
reg   [0:0] icmp_ln107_reg_1489;
wire   [6:0] select_ln107_1_fu_851_p3;
reg   [6:0] select_ln107_1_reg_1493;
wire   [7:0] add_ln115_fu_875_p2;
reg   [7:0] add_ln115_reg_1498;
wire   [2:0] add_ln109_fu_881_p2;
wire   [8:0] add_ln119_1_fu_896_p2;
reg   [0:0] icmp_ln119_reg_1513;
wire   [6:0] select_ln119_1_fu_928_p3;
reg   [6:0] select_ln119_1_reg_1517;
wire   [7:0] add_ln127_fu_952_p2;
reg   [7:0] add_ln127_reg_1522;
wire   [2:0] add_ln121_fu_958_p2;
wire   [8:0] add_ln117_1_fu_973_p2;
reg   [8:0] add_ln117_1_reg_1580;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln117_fu_979_p2;
reg   [0:0] icmp_ln117_reg_1585_pp4_iter1_reg;
reg   [0:0] icmp_ln117_reg_1585_pp4_iter3_reg;
wire   [2:0] add_ln117_fu_985_p2;
reg   [2:0] add_ln117_reg_1589;
wire   [0:0] icmp_ln121_1_fu_991_p2;
reg   [0:0] icmp_ln121_1_reg_1594;
wire   [6:0] select_ln117_fu_997_p3;
reg   [6:0] select_ln117_reg_1600;
reg   [6:0] select_ln117_reg_1600_pp4_iter1_reg;
wire   [2:0] select_ln117_1_fu_1005_p3;
reg   [2:0] select_ln117_1_reg_1609;
reg   [2:0] select_ln117_1_reg_1609_pp4_iter1_reg;
reg   [2:0] select_ln117_1_reg_1609_pp4_iter2_reg;
wire   [2:0] select_ln117_2_fu_1035_p3;
reg   [2:0] select_ln117_2_reg_1615;
reg   [2:0] select_ln117_2_reg_1615_pp4_iter1_reg;
reg   [2:0] select_ln117_2_reg_1615_pp4_iter2_reg;
wire   [8:0] tmp_3_fu_1057_p3;
reg   [8:0] tmp_3_reg_1630;
wire   [31:0] Ar_q0;
reg   [31:0] Ar_load_reg_1657;
wire   [31:0] Ai_q0;
reg   [31:0] Ai_load_reg_1662;
wire   [31:0] Br_q0;
reg   [31:0] Br_load_reg_1667;
wire   [31:0] Bi_q0;
reg   [31:0] Bi_load_reg_1673;
reg   [31:0] Br_load_1_reg_1689;
reg   [31:0] Bi_load_1_reg_1695;
wire   [0:0] cmp49_i_fu_1115_p2;
reg   [0:0] cmp49_i_reg_1711;
reg   [0:0] cmp49_i_reg_1711_pp4_iter1_reg;
reg   [0:0] cmp49_i_reg_1711_pp4_iter2_reg;
reg   [0:0] cmp49_i_reg_1711_pp4_iter3_reg;
reg   [31:0] Br_load_2_reg_1715;
reg   [31:0] Bi_load_2_reg_1721;
reg   [31:0] Br_load_3_reg_1727;
reg   [31:0] Bi_load_3_reg_1733;
wire   [31:0] grp_fu_644_p2;
reg   [31:0] mul_i_reg_1739;
wire   [31:0] grp_fu_648_p2;
reg   [31:0] mul24_i_reg_1744;
wire   [6:0] add_ln121_1_fu_1120_p2;
reg   [6:0] add_ln121_1_reg_1749;
reg   [31:0] mul33_i_reg_1754;
reg    ap_enable_reg_pp4_iter1;
reg   [31:0] mul42_i_reg_1759;
reg   [31:0] mul_i_1_reg_1764;
reg   [31:0] mul24_i_1_reg_1769;
reg   [31:0] mul33_i_1_reg_1774;
reg   [31:0] mul42_i_1_reg_1779;
reg   [31:0] mul_i_2_reg_1784;
reg   [31:0] mul24_i_2_reg_1789;
reg   [31:0] mul33_i_2_reg_1794;
reg   [31:0] mul42_i_2_reg_1799;
reg   [31:0] mul_i_3_reg_1804;
reg   [31:0] mul24_i_3_reg_1809;
reg   [31:0] mul33_i_3_reg_1814;
reg   [31:0] mul42_i_3_reg_1819;
wire   [0:0] cmp3_i_fu_1128_p2;
reg   [0:0] cmp3_i_reg_1824;
wire   [31:0] select_ln125_fu_1133_p3;
reg   [31:0] select_ln125_reg_1835;
wire   [31:0] grp_fu_636_p2;
reg   [31:0] sub_i_reg_1840;
wire   [31:0] select_ln125_1_fu_1144_p3;
reg   [31:0] select_ln125_1_reg_1845;
reg   [31:0] add43_i_reg_1850;
wire   [31:0] select_ln125_2_fu_1154_p3;
reg   [31:0] select_ln125_2_reg_1855;
reg   [31:0] sub_i_1_reg_1860;
wire   [31:0] select_ln125_3_fu_1164_p3;
reg   [31:0] select_ln125_3_reg_1865;
reg   [31:0] add43_i_1_reg_1870;
wire   [31:0] select_ln125_4_fu_1174_p3;
reg   [31:0] select_ln125_4_reg_1875;
reg   [31:0] sub_i_2_reg_1880;
wire   [31:0] select_ln125_5_fu_1184_p3;
reg   [31:0] select_ln125_5_reg_1885;
reg   [31:0] add43_i_2_reg_1890;
wire   [31:0] select_ln125_6_fu_1194_p3;
reg   [31:0] select_ln125_6_reg_1895;
reg   [31:0] sub_i_3_reg_1900;
wire   [31:0] select_ln125_7_fu_1204_p3;
reg   [31:0] select_ln125_7_reg_1905;
reg   [31:0] add43_i_3_reg_1910;
wire   [4:0] tmp_5_fu_1216_p3;
reg   [4:0] tmp_5_reg_1915;
wire   [4:0] tmp_9_fu_1233_p3;
reg   [4:0] tmp_9_reg_1922;
reg   [4:0] C_addr_4_reg_1929;
reg   [4:0] C_addr_8_reg_1934;
wire   [5:0] add_ln162_1_fu_1359_p2;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state56_pp5_stage0_iter0;
wire    ap_block_state57_pp5_stage0_iter1;
reg    ap_block_state58_pp5_stage0_iter2;
reg    ap_block_state58_io;
reg    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln162_fu_1365_p2;
wire   [3:0] select_ln162_1_fu_1391_p3;
reg   [3:0] select_ln162_1_reg_1948;
wire   [4:0] add_ln171_fu_1415_p2;
reg   [4:0] add_ln171_reg_1953;
wire   [2:0] add_ln164_fu_1421_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state7;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg    ap_enable_reg_pp2_iter1;
wire    ap_CS_fsm_state10;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state11;
reg    ap_enable_reg_pp3_iter1;
wire    ap_CS_fsm_state13;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state14;
wire    ap_block_pp4_stage10_subdone;
wire    ap_block_state21_pp4_stage7_iter0;
wire    ap_block_state32_pp4_stage7_iter1;
wire    ap_block_state43_pp4_stage7_iter2;
wire    ap_block_state54_pp4_stage7_iter3;
wire    ap_block_pp4_stage7_subdone;
wire    ap_CS_fsm_pp4_stage7;
wire    ap_CS_fsm_state55;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state56;
reg    ap_enable_reg_pp5_iter1;
reg   [7:0] Ar_address0;
reg    Ar_ce0;
reg    Ar_we0;
wire   [31:0] Ar_d0;
reg   [7:0] Ai_address0;
reg    Ai_ce0;
reg    Ai_we0;
wire   [31:0] Ai_d0;
reg   [7:0] Br_address0;
reg    Br_ce0;
reg    Br_we0;
wire   [31:0] Br_d0;
reg   [7:0] Bi_address0;
reg    Bi_ce0;
reg    Bi_we0;
wire   [31:0] Bi_d0;
reg   [4:0] C_address0;
reg    C_ce0;
reg    C_we0;
wire   [31:0] C_q0;
reg   [2:0] ap_phi_mux_i_phi_fu_452_p4;
reg   [2:0] ap_phi_mux_i_1_phi_fu_485_p4;
reg   [6:0] ap_phi_mux_i_2_phi_fu_518_p4;
reg   [6:0] ap_phi_mux_i_3_phi_fu_551_p4;
reg   [8:0] ap_phi_mux_indvar_flatten39_phi_fu_573_p4;
wire    ap_block_pp4_stage0;
reg   [2:0] ap_phi_mux_i_4_phi_fu_584_p4;
reg   [6:0] ap_phi_mux_k_phi_fu_596_p4;
reg   [3:0] ap_phi_mux_i_5_phi_fu_618_p4;
wire   [63:0] zext_ln92_1_fu_733_p1;
wire   [63:0] zext_ln103_1_fu_810_p1;
wire   [63:0] zext_ln115_1_fu_887_p1;
wire   [63:0] zext_ln127_2_fu_964_p1;
wire   [63:0] p_cast_fu_1051_p1;
wire    ap_block_pp4_stage1;
wire   [63:0] zext_ln127_1_fu_1064_p1;
wire   [63:0] tmp_4_fu_1075_p3;
wire    ap_block_pp4_stage2;
wire   [63:0] tmp_10_fu_1090_p3;
wire    ap_block_pp4_stage3;
wire   [63:0] tmp_11_fu_1105_p3;
wire    ap_block_pp4_stage4;
wire   [63:0] zext_ln132_fu_1223_p1;
wire   [63:0] zext_ln133_fu_1240_p1;
wire   [63:0] tmp_6_fu_1255_p3;
wire   [63:0] tmp_s_fu_1274_p3;
wire   [63:0] tmp_7_fu_1293_p3;
wire   [63:0] tmp_8_fu_1312_p3;
wire    ap_block_pp4_stage5;
wire   [63:0] tmp_1_fu_1326_p3;
wire   [63:0] tmp_2_fu_1340_p3;
wire   [63:0] zext_ln171_1_fu_1427_p1;
reg   [31:0] resultr_3_fu_172;
reg   [31:0] ap_sig_allocacmp_resultr_3_load;
reg   [31:0] temp_sumi_load_3_fu_176;
reg   [31:0] ap_sig_allocacmp_temp_sumi_load_6;
wire    ap_block_pp4_stage6;
reg   [31:0] resultr_2_fu_180;
reg   [31:0] ap_sig_allocacmp_resultr_2_load;
reg   [31:0] temp_sumi_load_2_fu_184;
reg   [31:0] ap_sig_allocacmp_temp_sumi_load_5;
reg   [31:0] resultr_13_fu_188;
reg   [31:0] ap_sig_allocacmp_resultr_13_load;
reg   [31:0] temp_sumi_load_1_fu_192;
reg   [31:0] ap_sig_allocacmp_temp_sumi_load_4;
reg   [31:0] resultr_0_fu_196;
reg   [31:0] ap_sig_allocacmp_resultr_0_load;
wire    ap_block_pp4_stage10;
reg   [31:0] temp_sumi_load_0_fu_200;
reg   [31:0] ap_sig_allocacmp_temp_sumi_load;
reg    ap_block_pp5_stage0_01001;
wire    ap_block_pp4_stage7_11001;
wire    ap_block_pp4_stage7;
reg   [31:0] grp_fu_636_p0;
reg   [31:0] grp_fu_636_p1;
reg   [31:0] grp_fu_640_p0;
reg   [31:0] grp_fu_640_p1;
reg   [31:0] grp_fu_644_p1;
wire    ap_CS_fsm_pp4_stage8;
wire    ap_block_pp4_stage8;
wire    ap_CS_fsm_pp4_stage9;
wire    ap_block_pp4_stage9;
reg   [31:0] grp_fu_648_p1;
wire   [0:0] icmp_ln86_fu_683_p2;
wire   [2:0] add_ln84_fu_677_p2;
wire   [1:0] trunc_ln92_fu_705_p1;
wire   [6:0] select_ln84_fu_689_p3;
wire   [7:0] tmp_cast_fu_709_p3;
wire   [7:0] zext_ln92_fu_717_p1;
wire   [0:0] icmp_ln97_fu_760_p2;
wire   [2:0] add_ln95_fu_754_p2;
wire   [1:0] trunc_ln103_fu_782_p1;
wire   [6:0] select_ln95_fu_766_p3;
wire   [7:0] tmp_1_cast_fu_786_p3;
wire   [7:0] zext_ln103_fu_794_p1;
wire   [0:0] icmp_ln109_fu_837_p2;
wire   [6:0] add_ln107_fu_831_p2;
wire   [5:0] trunc_ln115_fu_859_p1;
wire   [2:0] select_ln107_fu_843_p3;
wire   [7:0] tmp_2_cast_fu_863_p3;
wire   [7:0] zext_ln115_fu_871_p1;
wire   [0:0] icmp_ln121_fu_914_p2;
wire   [6:0] add_ln119_fu_908_p2;
wire   [5:0] trunc_ln127_fu_936_p1;
wire   [2:0] select_ln119_fu_920_p3;
wire   [7:0] tmp_3_cast_fu_940_p3;
wire   [7:0] zext_ln127_fu_948_p1;
wire   [1:0] empty_16_fu_1011_p1;
wire   [2:0] arrayidx42_sum_mid1_fu_1023_p2;
wire   [2:0] arrayidx42_sum192_fu_1029_p2;
wire   [7:0] tmp_4_cast_fu_1015_p3;
wire   [7:0] select_ln117_cast_fu_1042_p1;
wire   [7:0] empty_17_fu_1045_p2;
wire   [8:0] or_ln127_fu_1070_p2;
wire   [8:0] or_ln127_1_fu_1085_p2;
wire   [8:0] or_ln127_2_fu_1100_p2;
wire   [4:0] or_ln132_fu_1250_p2;
wire   [4:0] or_ln133_fu_1269_p2;
wire   [4:0] or_ln132_1_fu_1288_p2;
wire   [4:0] or_ln132_2_fu_1307_p2;
wire   [4:0] or_ln133_1_fu_1321_p2;
wire   [4:0] or_ln133_2_fu_1335_p2;
wire   [0:0] icmp_ln164_fu_1377_p2;
wire   [3:0] add_ln162_fu_1371_p2;
wire   [2:0] trunc_ln171_fu_1399_p1;
wire   [2:0] select_ln162_fu_1383_p3;
wire   [4:0] tmp_17_cast_fu_1403_p3;
wire   [4:0] zext_ln171_fu_1411_p1;
reg   [1:0] grp_fu_636_opcode;
wire    ap_block_pp4_stage1_00001;
wire    ap_block_pp4_stage3_00001;
wire    ap_block_pp4_stage5_00001;
wire    ap_block_pp4_stage7_00001;
wire    ap_block_pp4_stage0_00001;
wire    ap_block_pp4_stage2_00001;
wire    ap_block_pp4_stage4_00001;
wire    ap_block_pp4_stage6_00001;
wire    ap_CS_fsm_state59;
reg   [22:0] ap_NS_fsm;
wire    ap_block_pp4_stage1_subdone;
wire    ap_block_pp4_stage2_subdone;
wire    ap_block_pp4_stage3_subdone;
wire    ap_block_pp4_stage4_subdone;
wire    ap_block_pp4_stage5_subdone;
wire    ap_block_pp4_stage6_subdone;
wire    ap_block_state22_pp4_stage8_iter0;
wire    ap_block_state33_pp4_stage8_iter1;
wire    ap_block_state44_pp4_stage8_iter2;
wire    ap_block_pp4_stage8_subdone;
wire    ap_block_state23_pp4_stage9_iter0;
wire    ap_block_state34_pp4_stage9_iter1;
wire    ap_block_state45_pp4_stage9_iter2;
wire    ap_block_pp4_stage9_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
end

HLS_accel_wrapper_mmult_hw_Ar #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Ar_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Ar_address0),
    .ce0(Ar_ce0),
    .we0(Ar_we0),
    .d0(Ar_d0),
    .q0(Ar_q0)
);

HLS_accel_wrapper_mmult_hw_Ar #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Ai_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Ai_address0),
    .ce0(Ai_ce0),
    .we0(Ai_we0),
    .d0(Ai_d0),
    .q0(Ai_q0)
);

HLS_accel_wrapper_mmult_hw_Br #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Br_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Br_address0),
    .ce0(Br_ce0),
    .we0(Br_we0),
    .d0(Br_d0),
    .q0(Br_q0)
);

HLS_accel_wrapper_mmult_hw_Br #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Bi_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Bi_address0),
    .ce0(Bi_ce0),
    .we0(Bi_we0),
    .d0(Bi_d0),
    .q0(Bi_q0)
);

HLS_accel_wrapper_mmult_hw_C #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
C_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(C_address0),
    .ce0(C_ce0),
    .we0(C_we0),
    .d0(reg_660),
    .q0(C_q0)
);

HLS_accel_faddfsub_32ns_32ns_32_11_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_11_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_636_p0),
    .din1(grp_fu_636_p1),
    .opcode(grp_fu_636_opcode),
    .ce(1'b1),
    .dout(grp_fu_636_p2)
);

HLS_accel_fadd_32ns_32ns_32_11_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_11_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_640_p0),
    .din1(grp_fu_640_p1),
    .ce(1'b1),
    .dout(grp_fu_640_p2)
);

HLS_accel_fmul_32ns_32ns_32_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_8_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Ar_load_reg_1657),
    .din1(grp_fu_644_p1),
    .ce(1'b1),
    .dout(grp_fu_644_p2)
);

HLS_accel_fmul_32ns_32ns_32_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_8_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Ai_load_reg_1662),
    .din1(grp_fu_648_p1),
    .ce(1'b1),
    .dout(grp_fu_648_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state8))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state11))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage10_subdone) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage10_subdone) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp4_stage7_subdone) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage7)) | ((1'b0 == ap_block_pp4_stage10_subdone) & (1'b1 == ap_CS_fsm_pp4_stage10)))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp4_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state56) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state56)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state56);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_reg_481 <= 3'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln95_reg_1465 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_1_reg_481 <= select_ln95_1_reg_1469;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_2_reg_514 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln107_reg_1489 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_2_reg_514 <= select_ln107_1_reg_1493;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_3_reg_547 <= 7'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln119_reg_1513 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_3_reg_547 <= select_ln119_1_reg_1517;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_4_reg_580 <= 3'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_4_reg_580 <= select_ln117_1_reg_1609;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        i_5_reg_614 <= 4'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln162_reg_1944 == 1'd0))) begin
        i_5_reg_614 <= select_ln162_1_reg_1948;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln84_reg_1441 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_448 <= select_ln84_1_reg_1445;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_448 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten15_reg_503 <= 9'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln107_fu_825_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        indvar_flatten15_reg_503 <= add_ln107_1_fu_819_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten23_reg_536 <= 9'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln119_fu_902_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        indvar_flatten23_reg_536 <= add_ln119_1_fu_896_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        indvar_flatten39_reg_569 <= 9'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        indvar_flatten39_reg_569 <= add_ln117_1_reg_1580;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        indvar_flatten47_reg_603 <= 6'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln162_fu_1365_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        indvar_flatten47_reg_603 <= add_ln162_1_fu_1359_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten7_reg_470 <= 9'd0;
    end else if (((icmp_ln95_fu_748_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten7_reg_470 <= add_ln95_1_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_fu_671_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_437 <= add_ln84_1_fu_665_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_437 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_1_reg_492 <= 7'd0;
    end else if (((icmp_ln95_fu_748_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_1_reg_492 <= add_ln97_fu_804_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j_2_reg_525 <= 3'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln107_fu_825_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        j_2_reg_525 <= add_ln109_fu_881_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_3_reg_558 <= 3'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln119_fu_902_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        j_3_reg_558 <= add_ln121_fu_958_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        j_4_reg_625 <= 3'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln162_fu_1365_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        j_4_reg_625 <= add_ln164_fu_1421_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_fu_671_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_459 <= add_ln86_fu_727_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_459 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_reg_592 <= 7'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        k_reg_592 <= add_ln121_1_reg_1749;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        Ai_load_reg_1662 <= Ai_q0;
        Ar_load_reg_1657 <= Ar_q0;
        Bi_load_reg_1673 <= Bi_q0;
        Br_load_reg_1667 <= Br_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        Bi_load_1_reg_1695 <= Bi_q0;
        Br_load_1_reg_1689 <= Br_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        Bi_load_2_reg_1721 <= Bi_q0;
        Br_load_2_reg_1715 <= Br_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        Bi_load_3_reg_1733 <= Bi_q0;
        Br_load_3_reg_1727 <= Br_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (icmp_ln117_reg_1585_pp4_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        C_addr_4_reg_1929[4 : 2] <= tmp_8_fu_1312_p3[4 : 2];
        C_addr_8_reg_1934[4 : 2] <= tmp_2_fu_1340_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        add43_i_1_reg_1870 <= grp_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        add43_i_2_reg_1890 <= grp_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage6_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        add43_i_3_reg_1910 <= grp_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln117_reg_1585_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        add43_i_reg_1850 <= grp_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_748_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln103_reg_1474 <= add_ln103_fu_798_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln107_fu_825_p2 == 1'd0))) begin
        add_ln115_reg_1498 <= add_ln115_fu_875_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        add_ln117_1_reg_1580 <= add_ln117_1_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln117_fu_979_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        add_ln117_reg_1589 <= add_ln117_fu_985_p2;
        icmp_ln121_1_reg_1594 <= icmp_ln121_1_fu_991_p2;
        select_ln117_reg_1600 <= select_ln117_fu_997_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage10_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        add_ln121_1_reg_1749 <= add_ln121_1_fu_1120_p2;
        mul24_i_reg_1744 <= grp_fu_648_p2;
        mul_i_reg_1739 <= grp_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln119_fu_902_p2 == 1'd0))) begin
        add_ln127_reg_1522 <= add_ln127_fu_952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln162_fu_1365_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        add_ln171_reg_1953 <= add_ln171_fu_1415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_fu_671_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln92_reg_1450 <= add_ln92_fu_721_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage10_11001) & (icmp_ln117_reg_1585_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        cmp3_i_reg_1824 <= cmp3_i_fu_1128_p2;
        select_ln125_reg_1835 <= select_ln125_fu_1133_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage4_11001) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        cmp49_i_reg_1711 <= cmp49_i_fu_1115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage4_11001) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        cmp49_i_reg_1711_pp4_iter1_reg <= cmp49_i_reg_1711;
        cmp49_i_reg_1711_pp4_iter2_reg <= cmp49_i_reg_1711_pp4_iter1_reg;
        cmp49_i_reg_1711_pp4_iter3_reg <= cmp49_i_reg_1711_pp4_iter2_reg;
        select_ln125_5_reg_1885 <= select_ln125_5_fu_1184_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln107_reg_1489 <= icmp_ln107_fu_825_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln117_reg_1585 <= icmp_ln117_fu_979_p2;
        icmp_ln117_reg_1585_pp4_iter1_reg <= icmp_ln117_reg_1585;
        icmp_ln117_reg_1585_pp4_iter2_reg <= icmp_ln117_reg_1585_pp4_iter1_reg;
        icmp_ln117_reg_1585_pp4_iter3_reg <= icmp_ln117_reg_1585_pp4_iter2_reg;
        select_ln117_reg_1600_pp4_iter1_reg <= select_ln117_reg_1600;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln119_reg_1513 <= icmp_ln119_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln162_reg_1944 <= icmp_ln162_fu_1365_p2;
        icmp_ln162_reg_1944_pp5_iter1_reg <= icmp_ln162_reg_1944;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln84_reg_1441 <= icmp_ln84_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln95_reg_1465 <= icmp_ln95_fu_748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        mul24_i_1_reg_1769 <= grp_fu_648_p2;
        mul_i_1_reg_1764 <= grp_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        mul24_i_2_reg_1789 <= grp_fu_648_p2;
        mul_i_2_reg_1784 <= grp_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        mul24_i_3_reg_1809 <= grp_fu_648_p2;
        mul_i_3_reg_1804 <= grp_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        mul33_i_1_reg_1774 <= grp_fu_644_p2;
        mul42_i_1_reg_1779 <= grp_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        mul33_i_2_reg_1794 <= grp_fu_644_p2;
        mul42_i_2_reg_1799 <= grp_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage6_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        mul33_i_3_reg_1814 <= grp_fu_644_p2;
        mul42_i_3_reg_1819 <= grp_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        mul33_i_reg_1754 <= grp_fu_644_p2;
        mul42_i_reg_1759 <= grp_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln95_fu_748_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln84_fu_671_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln119_fu_902_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln107_fu_825_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        reg_656 <= INPUT_STREAM_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp4_stage6_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6)) | ((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (icmp_ln117_reg_1585_pp4_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage10_11001) & (icmp_ln117_reg_1585_pp4_iter2_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10)))) begin
        reg_660 <= grp_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage10_11001) & (icmp_ln117_reg_1585_pp4_iter2_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        resultr_0_fu_196 <= grp_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        resultr_13_fu_188 <= grp_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        resultr_2_fu_180 <= grp_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        resultr_3_fu_172 <= grp_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln107_fu_825_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        select_ln107_1_reg_1493 <= select_ln107_1_fu_851_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        select_ln117_1_reg_1609 <= select_ln117_1_fu_1005_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        select_ln117_1_reg_1609_pp4_iter1_reg <= select_ln117_1_reg_1609;
        select_ln117_1_reg_1609_pp4_iter2_reg <= select_ln117_1_reg_1609_pp4_iter1_reg;
        select_ln117_2_reg_1615_pp4_iter1_reg <= select_ln117_2_reg_1615;
        select_ln117_2_reg_1615_pp4_iter2_reg <= select_ln117_2_reg_1615_pp4_iter1_reg;
        select_ln125_2_reg_1855 <= select_ln125_2_fu_1154_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        select_ln117_2_reg_1615 <= select_ln117_2_fu_1035_p3;
        tmp_3_reg_1630[8 : 2] <= tmp_3_fu_1057_p3[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln119_fu_902_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        select_ln119_1_reg_1517 <= select_ln119_1_fu_928_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln117_reg_1585_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        select_ln125_1_reg_1845 <= select_ln125_1_fu_1144_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        select_ln125_3_reg_1865 <= select_ln125_3_fu_1164_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        select_ln125_4_reg_1875 <= select_ln125_4_fu_1174_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        select_ln125_6_reg_1895 <= select_ln125_6_fu_1194_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage6_11001) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        select_ln125_7_reg_1905 <= select_ln125_7_fu_1204_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln162_fu_1365_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        select_ln162_1_reg_1948 <= select_ln162_1_fu_1391_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_fu_671_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln84_1_reg_1445 <= select_ln84_1_fu_697_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_748_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln95_1_reg_1469 <= select_ln95_1_fu_774_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        sub_i_1_reg_1860 <= grp_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        sub_i_2_reg_1880 <= grp_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        sub_i_3_reg_1900 <= grp_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage10_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln117_reg_1585_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        sub_i_reg_1840 <= grp_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (icmp_ln117_reg_1585_pp4_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        temp_sumi_load_0_fu_200 <= grp_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        temp_sumi_load_1_fu_192 <= grp_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        temp_sumi_load_2_fu_184 <= grp_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage6_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        temp_sumi_load_3_fu_176 <= grp_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln117_reg_1585_pp4_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        tmp_5_reg_1915[4 : 2] <= tmp_5_fu_1216_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (icmp_ln117_reg_1585_pp4_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        tmp_9_reg_1922[4 : 2] <= tmp_9_fu_1233_p3[4 : 2];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        Ai_address0 = p_cast_fu_1051_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Ai_address0 = zext_ln103_1_fu_810_p1;
    end else begin
        Ai_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        Ai_ce0 = 1'b1;
    end else begin
        Ai_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln95_reg_1465 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Ai_we0 = 1'b1;
    end else begin
        Ai_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        Ar_address0 = p_cast_fu_1051_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ar_address0 = zext_ln92_1_fu_733_p1;
    end else begin
        Ar_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Ar_ce0 = 1'b1;
    end else begin
        Ar_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln84_reg_1441 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ar_we0 = 1'b1;
    end else begin
        Ar_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage4) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        Bi_address0 = tmp_11_fu_1105_p3;
    end else if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        Bi_address0 = tmp_10_fu_1090_p3;
    end else if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        Bi_address0 = tmp_4_fu_1075_p3;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        Bi_address0 = zext_ln127_1_fu_1064_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        Bi_address0 = zext_ln127_2_fu_964_p1;
    end else begin
        Bi_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        Bi_ce0 = 1'b1;
    end else begin
        Bi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln119_reg_1513 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        Bi_we0 = 1'b1;
    end else begin
        Bi_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage4) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        Br_address0 = tmp_11_fu_1105_p3;
    end else if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        Br_address0 = tmp_10_fu_1090_p3;
    end else if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        Br_address0 = tmp_4_fu_1075_p3;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        Br_address0 = zext_ln127_1_fu_1064_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Br_address0 = zext_ln115_1_fu_887_p1;
    end else begin
        Br_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        Br_ce0 = 1'b1;
    end else begin
        Br_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln107_reg_1489 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Br_we0 = 1'b1;
    end else begin
        Br_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        C_address0 = zext_ln171_1_fu_1427_p1;
    end else if (((1'b0 == ap_block_pp4_stage7) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
        C_address0 = C_addr_8_reg_1934;
    end else if (((1'b0 == ap_block_pp4_stage6) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        C_address0 = C_addr_4_reg_1929;
    end else if (((1'b0 == ap_block_pp4_stage5) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        C_address0 = tmp_1_fu_1326_p3;
    end else if (((1'b0 == ap_block_pp4_stage4) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        C_address0 = tmp_7_fu_1293_p3;
    end else if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        C_address0 = tmp_s_fu_1274_p3;
    end else if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        C_address0 = tmp_6_fu_1255_p3;
    end else if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        C_address0 = zext_ln133_fu_1240_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        C_address0 = zext_ln132_fu_1223_p1;
    end else begin
        C_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage6_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6)) | ((1'b0 == ap_block_pp4_stage5_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b0 == ap_block_pp4_stage4_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage7_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage7)))) begin
        C_ce0 = 1'b1;
    end else begin
        C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage6_11001) & (cmp49_i_reg_1711_pp4_iter3_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6)) | ((1'b0 == ap_block_pp4_stage5_11001) & (cmp49_i_reg_1711_pp4_iter3_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b0 == ap_block_pp4_stage4_11001) & (cmp49_i_reg_1711_pp4_iter2_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b0 == ap_block_pp4_stage3_11001) & (cmp49_i_reg_1711_pp4_iter2_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage2_11001) & (cmp49_i_reg_1711_pp4_iter2_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage1_11001) & (cmp49_i_reg_1711_pp4_iter2_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (cmp49_i_reg_1711_pp4_iter2_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage7_11001) & (cmp49_i_reg_1711_pp4_iter3_reg == 1'd1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage7)))) begin
        C_we0 = 1'b1;
    end else begin
        C_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln95_fu_748_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln84_fu_671_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln119_fu_902_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln107_fu_825_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        INPUT_STREAM_TDATA_blk_n = INPUT_STREAM_TVALID;
    end else begin
        INPUT_STREAM_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln95_fu_748_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln84_fu_671_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln119_fu_902_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln107_fu_825_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        INPUT_STREAM_TREADY = 1'b1;
    end else begin
        INPUT_STREAM_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (icmp_ln162_reg_1944_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        OUTPUT_STREAM_TDATA_blk_n = OUTPUT_STREAM_TREADY;
    end else begin
        OUTPUT_STREAM_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln162_reg_1944_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        OUTPUT_STREAM_TVALID = 1'b1;
    end else begin
        OUTPUT_STREAM_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln84_fu_671_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_fu_748_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln107_fu_825_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln119_fu_902_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln117_fu_979_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln162_fu_1365_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state56 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state56 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln95_reg_1465 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_1_phi_fu_485_p4 = select_ln95_1_reg_1469;
    end else begin
        ap_phi_mux_i_1_phi_fu_485_p4 = i_1_reg_481;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln107_reg_1489 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_2_phi_fu_518_p4 = select_ln107_1_reg_1493;
    end else begin
        ap_phi_mux_i_2_phi_fu_518_p4 = i_2_reg_514;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln119_reg_1513 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_i_3_phi_fu_551_p4 = select_ln119_1_reg_1517;
    end else begin
        ap_phi_mux_i_3_phi_fu_551_p4 = i_3_reg_547;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_i_4_phi_fu_584_p4 = select_ln117_1_reg_1609;
    end else begin
        ap_phi_mux_i_4_phi_fu_584_p4 = i_4_reg_580;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln162_reg_1944 == 1'd0))) begin
        ap_phi_mux_i_5_phi_fu_618_p4 = select_ln162_1_reg_1948;
    end else begin
        ap_phi_mux_i_5_phi_fu_618_p4 = i_5_reg_614;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln84_reg_1441 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_452_p4 = select_ln84_1_reg_1445;
    end else begin
        ap_phi_mux_i_phi_fu_452_p4 = i_reg_448;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_indvar_flatten39_phi_fu_573_p4 = add_ln117_1_reg_1580;
    end else begin
        ap_phi_mux_indvar_flatten39_phi_fu_573_p4 = indvar_flatten39_reg_569;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_k_phi_fu_596_p4 = add_ln121_1_reg_1749;
    end else begin
        ap_phi_mux_k_phi_fu_596_p4 = k_reg_592;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage10) & (icmp_ln117_reg_1585_pp4_iter2_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
        ap_sig_allocacmp_resultr_0_load = grp_fu_640_p2;
    end else begin
        ap_sig_allocacmp_resultr_0_load = resultr_0_fu_196;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        ap_sig_allocacmp_resultr_13_load = grp_fu_640_p2;
    end else begin
        ap_sig_allocacmp_resultr_13_load = resultr_13_fu_188;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        ap_sig_allocacmp_resultr_2_load = grp_fu_640_p2;
    end else begin
        ap_sig_allocacmp_resultr_2_load = resultr_2_fu_180;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage5) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
        ap_sig_allocacmp_resultr_3_load = grp_fu_640_p2;
    end else begin
        ap_sig_allocacmp_resultr_3_load = resultr_3_fu_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1) & (icmp_ln117_reg_1585_pp4_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_sig_allocacmp_temp_sumi_load = grp_fu_640_p2;
    end else begin
        ap_sig_allocacmp_temp_sumi_load = temp_sumi_load_0_fu_200;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        ap_sig_allocacmp_temp_sumi_load_4 = grp_fu_640_p2;
    end else begin
        ap_sig_allocacmp_temp_sumi_load_4 = temp_sumi_load_1_fu_192;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage4) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
        ap_sig_allocacmp_temp_sumi_load_5 = grp_fu_640_p2;
    end else begin
        ap_sig_allocacmp_temp_sumi_load_5 = temp_sumi_load_2_fu_184;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage6) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
        ap_sig_allocacmp_temp_sumi_load_6 = grp_fu_640_p2;
    end else begin
        ap_sig_allocacmp_temp_sumi_load_6 = temp_sumi_load_3_fu_176;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage6_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6)) | ((1'b0 == ap_block_pp4_stage4_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4)) | ((1'b0 == ap_block_pp4_stage2_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage0_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln117_reg_1585 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        grp_fu_636_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp4_stage7_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage7)) | ((1'b0 == ap_block_pp4_stage5_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5)) | ((1'b0 == ap_block_pp4_stage3_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((1'b0 == ap_block_pp4_stage1_00001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln117_reg_1585_pp4_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
        grp_fu_636_opcode = 2'd0;
    end else begin
        grp_fu_636_opcode = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp4_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp4_stage7) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
            grp_fu_636_p0 = mul33_i_3_reg_1814;
        end else if (((1'b0 == ap_block_pp4_stage6) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
            grp_fu_636_p0 = mul_i_3_reg_1804;
        end else if (((1'b0 == ap_block_pp4_stage5) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
            grp_fu_636_p0 = mul33_i_2_reg_1794;
        end else if (((1'b0 == ap_block_pp4_stage4) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
            grp_fu_636_p0 = mul_i_2_reg_1784;
        end else if (((1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
            grp_fu_636_p0 = mul33_i_1_reg_1774;
        end else if (((1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
            grp_fu_636_p0 = mul_i_1_reg_1764;
        end else if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            grp_fu_636_p0 = mul33_i_reg_1754;
        end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            grp_fu_636_p0 = mul_i_reg_1739;
        end else begin
            grp_fu_636_p0 = 'bx;
        end
    end else begin
        grp_fu_636_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp4_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp4_stage7) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
            grp_fu_636_p1 = mul42_i_3_reg_1819;
        end else if (((1'b0 == ap_block_pp4_stage6) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
            grp_fu_636_p1 = mul24_i_3_reg_1809;
        end else if (((1'b0 == ap_block_pp4_stage5) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
            grp_fu_636_p1 = mul42_i_2_reg_1799;
        end else if (((1'b0 == ap_block_pp4_stage4) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
            grp_fu_636_p1 = mul24_i_2_reg_1789;
        end else if (((1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
            grp_fu_636_p1 = mul42_i_1_reg_1779;
        end else if (((1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
            grp_fu_636_p1 = mul24_i_1_reg_1769;
        end else if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            grp_fu_636_p1 = mul42_i_reg_1759;
        end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            grp_fu_636_p1 = mul24_i_reg_1744;
        end else begin
            grp_fu_636_p1 = 'bx;
        end
    end else begin
        grp_fu_636_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp4_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp4_stage7) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
            grp_fu_640_p0 = select_ln125_7_reg_1905;
        end else if (((1'b0 == ap_block_pp4_stage6) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
            grp_fu_640_p0 = select_ln125_6_reg_1895;
        end else if (((1'b0 == ap_block_pp4_stage5) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
            grp_fu_640_p0 = select_ln125_5_reg_1885;
        end else if (((1'b0 == ap_block_pp4_stage4) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
            grp_fu_640_p0 = select_ln125_4_reg_1875;
        end else if (((1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
            grp_fu_640_p0 = select_ln125_3_reg_1865;
        end else if (((1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
            grp_fu_640_p0 = select_ln125_2_reg_1855;
        end else if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            grp_fu_640_p0 = select_ln125_1_reg_1845;
        end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            grp_fu_640_p0 = select_ln125_reg_1835;
        end else begin
            grp_fu_640_p0 = 'bx;
        end
    end else begin
        grp_fu_640_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp4_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp4_stage7) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
            grp_fu_640_p1 = add43_i_3_reg_1910;
        end else if (((1'b0 == ap_block_pp4_stage6) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
            grp_fu_640_p1 = sub_i_3_reg_1900;
        end else if (((1'b0 == ap_block_pp4_stage5) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
            grp_fu_640_p1 = add43_i_2_reg_1890;
        end else if (((1'b0 == ap_block_pp4_stage4) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
            grp_fu_640_p1 = sub_i_2_reg_1880;
        end else if (((1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
            grp_fu_640_p1 = add43_i_1_reg_1870;
        end else if (((1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
            grp_fu_640_p1 = sub_i_1_reg_1860;
        end else if (((1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            grp_fu_640_p1 = add43_i_reg_1850;
        end else if (((1'b0 == ap_block_pp4_stage0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            grp_fu_640_p1 = sub_i_reg_1840;
        end else begin
            grp_fu_640_p1 = 'bx;
        end
    end else begin
        grp_fu_640_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp4_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp4_stage10) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
            grp_fu_644_p1 = Bi_load_3_reg_1733;
        end else if (((1'b0 == ap_block_pp4_stage9) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
            grp_fu_644_p1 = Br_load_3_reg_1727;
        end else if (((1'b0 == ap_block_pp4_stage8) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
            grp_fu_644_p1 = Bi_load_2_reg_1721;
        end else if (((1'b0 == ap_block_pp4_stage7) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
            grp_fu_644_p1 = Br_load_2_reg_1715;
        end else if (((1'b0 == ap_block_pp4_stage6) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
            grp_fu_644_p1 = Bi_load_1_reg_1695;
        end else if (((1'b0 == ap_block_pp4_stage5) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
            grp_fu_644_p1 = Br_load_1_reg_1689;
        end else if (((1'b0 == ap_block_pp4_stage4) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
            grp_fu_644_p1 = Bi_load_reg_1673;
        end else if (((1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
            grp_fu_644_p1 = Br_load_reg_1667;
        end else begin
            grp_fu_644_p1 = 'bx;
        end
    end else begin
        grp_fu_644_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp4_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp4_stage10) & (1'b1 == ap_CS_fsm_pp4_stage10))) begin
            grp_fu_648_p1 = Br_load_3_reg_1727;
        end else if (((1'b0 == ap_block_pp4_stage9) & (1'b1 == ap_CS_fsm_pp4_stage9))) begin
            grp_fu_648_p1 = Bi_load_3_reg_1733;
        end else if (((1'b0 == ap_block_pp4_stage8) & (1'b1 == ap_CS_fsm_pp4_stage8))) begin
            grp_fu_648_p1 = Br_load_2_reg_1715;
        end else if (((1'b0 == ap_block_pp4_stage7) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
            grp_fu_648_p1 = Bi_load_2_reg_1721;
        end else if (((1'b0 == ap_block_pp4_stage6) & (1'b1 == ap_CS_fsm_pp4_stage6))) begin
            grp_fu_648_p1 = Br_load_1_reg_1689;
        end else if (((1'b0 == ap_block_pp4_stage5) & (1'b1 == ap_CS_fsm_pp4_stage5))) begin
            grp_fu_648_p1 = Bi_load_1_reg_1695;
        end else if (((1'b0 == ap_block_pp4_stage4) & (1'b1 == ap_CS_fsm_pp4_stage4))) begin
            grp_fu_648_p1 = Br_load_reg_1667;
        end else if (((1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
            grp_fu_648_p1 = Bi_load_reg_1673;
        end else begin
            grp_fu_648_p1 = 'bx;
        end
    end else begin
        grp_fu_648_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln84_fu_671_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln84_fu_671_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln95_fu_748_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln95_fu_748_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln107_fu_825_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln107_fu_825_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln119_fu_902_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln119_fu_902_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln117_fu_979_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln117_fu_979_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((1'b0 == ap_block_pp4_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((1'b0 == ap_block_pp4_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_pp4_stage4 : begin
            if ((1'b0 == ap_block_pp4_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end
        end
        ap_ST_fsm_pp4_stage5 : begin
            if ((1'b0 == ap_block_pp4_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end
        end
        ap_ST_fsm_pp4_stage6 : begin
            if ((1'b0 == ap_block_pp4_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end
        end
        ap_ST_fsm_pp4_stage7 : begin
            if ((~((1'b0 == ap_block_pp4_stage7_subdone) & (ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage7)) & (1'b0 == ap_block_pp4_stage7_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end else if (((1'b0 == ap_block_pp4_stage7_subdone) & (ap_enable_reg_pp4_iter3 == 1'b1) & (ap_enable_reg_pp4_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage7))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end
        end
        ap_ST_fsm_pp4_stage8 : begin
            if ((1'b0 == ap_block_pp4_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end
        end
        ap_ST_fsm_pp4_stage9 : begin
            if ((1'b0 == ap_block_pp4_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage9;
            end
        end
        ap_ST_fsm_pp4_stage10 : begin
            if ((1'b0 == ap_block_pp4_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage10;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln162_fu_1365_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln162_fu_1365_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) | ((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ai_d0 = reg_656;

assign Ar_d0 = reg_656;

assign Bi_d0 = reg_656;

assign Br_d0 = reg_656;

assign OUTPUT_STREAM_TDATA = C_q0;

assign OUTPUT_STREAM_TDEST = 1'd0;

assign OUTPUT_STREAM_TID = 1'd0;

assign OUTPUT_STREAM_TKEEP = 4'd15;

assign OUTPUT_STREAM_TLAST = 1'd0;

assign OUTPUT_STREAM_TSTRB = 4'd15;

assign OUTPUT_STREAM_TUSER = 1'd0;

assign add_ln103_fu_798_p2 = (tmp_1_cast_fu_786_p3 + zext_ln103_fu_794_p1);

assign add_ln107_1_fu_819_p2 = (indvar_flatten15_reg_503 + 9'd1);

assign add_ln107_fu_831_p2 = (ap_phi_mux_i_2_phi_fu_518_p4 + 7'd1);

assign add_ln109_fu_881_p2 = (select_ln107_fu_843_p3 + 3'd1);

assign add_ln115_fu_875_p2 = (tmp_2_cast_fu_863_p3 + zext_ln115_fu_871_p1);

assign add_ln117_1_fu_973_p2 = (ap_phi_mux_indvar_flatten39_phi_fu_573_p4 + 9'd1);

assign add_ln117_fu_985_p2 = (ap_phi_mux_i_4_phi_fu_584_p4 + 3'd1);

assign add_ln119_1_fu_896_p2 = (indvar_flatten23_reg_536 + 9'd1);

assign add_ln119_fu_908_p2 = (ap_phi_mux_i_3_phi_fu_551_p4 + 7'd1);

assign add_ln121_1_fu_1120_p2 = (select_ln117_reg_1600 + 7'd1);

assign add_ln121_fu_958_p2 = (select_ln119_fu_920_p3 + 3'd1);

assign add_ln127_fu_952_p2 = (tmp_3_cast_fu_940_p3 + zext_ln127_fu_948_p1);

assign add_ln162_1_fu_1359_p2 = (indvar_flatten47_reg_603 + 6'd1);

assign add_ln162_fu_1371_p2 = (ap_phi_mux_i_5_phi_fu_618_p4 + 4'd1);

assign add_ln164_fu_1421_p2 = (select_ln162_fu_1383_p3 + 3'd1);

assign add_ln171_fu_1415_p2 = (tmp_17_cast_fu_1403_p3 + zext_ln171_fu_1411_p1);

assign add_ln84_1_fu_665_p2 = (indvar_flatten_reg_437 + 9'd1);

assign add_ln84_fu_677_p2 = (ap_phi_mux_i_phi_fu_452_p4 + 3'd1);

assign add_ln86_fu_727_p2 = (select_ln84_fu_689_p3 + 7'd1);

assign add_ln92_fu_721_p2 = (tmp_cast_fu_709_p3 + zext_ln92_fu_717_p1);

assign add_ln95_1_fu_742_p2 = (indvar_flatten7_reg_470 + 9'd1);

assign add_ln95_fu_754_p2 = (ap_phi_mux_i_1_phi_fu_485_p4 + 3'd1);

assign add_ln97_fu_804_p2 = (select_ln95_fu_766_p3 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp4_stage10 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp4_stage4 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp4_stage7 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp4_stage8 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp4_stage9 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln84_fu_671_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == INPUT_STREAM_TVALID));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln84_fu_671_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == INPUT_STREAM_TVALID));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln95_fu_748_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == INPUT_STREAM_TVALID));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln95_fu_748_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == INPUT_STREAM_TVALID));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln107_fu_825_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln107_fu_825_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln119_fu_902_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln119_fu_902_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_01001 = ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln162_reg_1944_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((ap_enable_reg_pp5_iter2 == 1'b1) & ((1'b1 == ap_block_state58_io) | ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln162_reg_1944_pp5_iter1_reg == 1'd0))));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((ap_enable_reg_pp5_iter2 == 1'b1) & ((1'b1 == ap_block_state58_io) | ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln162_reg_1944_pp5_iter1_reg == 1'd0))));
end

always @ (*) begin
    ap_block_state11_pp3_stage0_iter0 = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln119_fu_902_p2 == 1'd0));
end

assign ap_block_state12_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp4_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp4_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp4_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp4_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp4_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp4_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp4_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp4_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp4_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp4_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp4_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp4_stage4_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((icmp_ln84_fu_671_p2 == 1'd0) & (1'b0 == INPUT_STREAM_TVALID));
end

assign ap_block_state30_pp4_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp4_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp4_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp4_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp4_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp4_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp4_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp4_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp4_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp4_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp4_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp4_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp4_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp4_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp4_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp4_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp4_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp4_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp4_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp4_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp4_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp4_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp4_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state58_io = ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln162_reg_1944_pp5_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state58_pp5_stage0_iter2 = ((1'b0 == OUTPUT_STREAM_TREADY) & (icmp_ln162_reg_1944_pp5_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state5_pp1_stage0_iter0 = ((icmp_ln95_fu_748_p2 == 1'd0) & (1'b0 == INPUT_STREAM_TVALID));
end

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp2_stage0_iter0 = ((1'b0 == INPUT_STREAM_TVALID) & (icmp_ln107_fu_825_p2 == 1'd0));
end

assign ap_block_state9_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign arrayidx42_sum192_fu_1029_p2 = (i_4_reg_580 ^ 3'd4);

assign arrayidx42_sum_mid1_fu_1023_p2 = ($signed(i_4_reg_580) + $signed(3'd5));

assign cmp3_i_fu_1128_p2 = ((select_ln117_reg_1600_pp4_iter1_reg == 7'd0) ? 1'b1 : 1'b0);

assign cmp49_i_fu_1115_p2 = ((select_ln117_reg_1600 == 7'd63) ? 1'b1 : 1'b0);

assign empty_16_fu_1011_p1 = select_ln117_1_fu_1005_p3[1:0];

assign empty_17_fu_1045_p2 = (tmp_4_cast_fu_1015_p3 + select_ln117_cast_fu_1042_p1);

assign icmp_ln107_fu_825_p2 = ((indvar_flatten15_reg_503 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln109_fu_837_p2 = ((j_2_reg_525 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_979_p2 = ((ap_phi_mux_indvar_flatten39_phi_fu_573_p4 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_902_p2 = ((indvar_flatten23_reg_536 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln121_1_fu_991_p2 = ((ap_phi_mux_k_phi_fu_596_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_914_p2 = ((j_3_reg_558 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln162_fu_1365_p2 = ((indvar_flatten47_reg_603 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln164_fu_1377_p2 = ((j_4_reg_625 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_671_p2 = ((indvar_flatten_reg_437 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_683_p2 = ((j_reg_459 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_748_p2 = ((indvar_flatten7_reg_470 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_760_p2 = ((j_1_reg_492 == 7'd64) ? 1'b1 : 1'b0);

assign or_ln127_1_fu_1085_p2 = (tmp_3_reg_1630 | 9'd2);

assign or_ln127_2_fu_1100_p2 = (tmp_3_reg_1630 | 9'd3);

assign or_ln127_fu_1070_p2 = (tmp_3_reg_1630 | 9'd1);

assign or_ln132_1_fu_1288_p2 = (tmp_5_reg_1915 | 5'd2);

assign or_ln132_2_fu_1307_p2 = (tmp_5_reg_1915 | 5'd3);

assign or_ln132_fu_1250_p2 = (tmp_5_reg_1915 | 5'd1);

assign or_ln133_1_fu_1321_p2 = (tmp_9_reg_1922 | 5'd2);

assign or_ln133_2_fu_1335_p2 = (tmp_9_reg_1922 | 5'd3);

assign or_ln133_fu_1269_p2 = (tmp_9_reg_1922 | 5'd1);

assign p_cast_fu_1051_p1 = empty_17_fu_1045_p2;

assign select_ln107_1_fu_851_p3 = ((icmp_ln109_fu_837_p2[0:0] == 1'b1) ? add_ln107_fu_831_p2 : ap_phi_mux_i_2_phi_fu_518_p4);

assign select_ln107_fu_843_p3 = ((icmp_ln109_fu_837_p2[0:0] == 1'b1) ? 3'd0 : j_2_reg_525);

assign select_ln117_1_fu_1005_p3 = ((icmp_ln121_1_reg_1594[0:0] == 1'b1) ? add_ln117_reg_1589 : i_4_reg_580);

assign select_ln117_2_fu_1035_p3 = ((icmp_ln121_1_reg_1594[0:0] == 1'b1) ? arrayidx42_sum_mid1_fu_1023_p2 : arrayidx42_sum192_fu_1029_p2);

assign select_ln117_cast_fu_1042_p1 = select_ln117_reg_1600;

assign select_ln117_fu_997_p3 = ((icmp_ln121_1_fu_991_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_k_phi_fu_596_p4);

assign select_ln119_1_fu_928_p3 = ((icmp_ln121_fu_914_p2[0:0] == 1'b1) ? add_ln119_fu_908_p2 : ap_phi_mux_i_3_phi_fu_551_p4);

assign select_ln119_fu_920_p3 = ((icmp_ln121_fu_914_p2[0:0] == 1'b1) ? 3'd0 : j_3_reg_558);

assign select_ln125_1_fu_1144_p3 = ((cmp3_i_reg_1824[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_temp_sumi_load);

assign select_ln125_2_fu_1154_p3 = ((cmp3_i_reg_1824[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_resultr_13_load);

assign select_ln125_3_fu_1164_p3 = ((cmp3_i_reg_1824[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_temp_sumi_load_4);

assign select_ln125_4_fu_1174_p3 = ((cmp3_i_reg_1824[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_resultr_2_load);

assign select_ln125_5_fu_1184_p3 = ((cmp3_i_reg_1824[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_temp_sumi_load_5);

assign select_ln125_6_fu_1194_p3 = ((cmp3_i_reg_1824[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_resultr_3_load);

assign select_ln125_7_fu_1204_p3 = ((cmp3_i_reg_1824[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_temp_sumi_load_6);

assign select_ln125_fu_1133_p3 = ((cmp3_i_fu_1128_p2[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_resultr_0_load);

assign select_ln162_1_fu_1391_p3 = ((icmp_ln164_fu_1377_p2[0:0] == 1'b1) ? add_ln162_fu_1371_p2 : ap_phi_mux_i_5_phi_fu_618_p4);

assign select_ln162_fu_1383_p3 = ((icmp_ln164_fu_1377_p2[0:0] == 1'b1) ? 3'd0 : j_4_reg_625);

assign select_ln84_1_fu_697_p3 = ((icmp_ln86_fu_683_p2[0:0] == 1'b1) ? add_ln84_fu_677_p2 : ap_phi_mux_i_phi_fu_452_p4);

assign select_ln84_fu_689_p3 = ((icmp_ln86_fu_683_p2[0:0] == 1'b1) ? 7'd0 : j_reg_459);

assign select_ln95_1_fu_774_p3 = ((icmp_ln97_fu_760_p2[0:0] == 1'b1) ? add_ln95_fu_754_p2 : ap_phi_mux_i_1_phi_fu_485_p4);

assign select_ln95_fu_766_p3 = ((icmp_ln97_fu_760_p2[0:0] == 1'b1) ? 7'd0 : j_1_reg_492);

assign tmp_10_fu_1090_p3 = {{55'd0}, {or_ln127_1_fu_1085_p2}};

assign tmp_11_fu_1105_p3 = {{55'd0}, {or_ln127_2_fu_1100_p2}};

assign tmp_17_cast_fu_1403_p3 = {{trunc_ln171_fu_1399_p1}, {2'd0}};

assign tmp_1_cast_fu_786_p3 = {{trunc_ln103_fu_782_p1}, {6'd0}};

assign tmp_1_fu_1326_p3 = {{59'd0}, {or_ln133_1_fu_1321_p2}};

assign tmp_2_cast_fu_863_p3 = {{trunc_ln115_fu_859_p1}, {2'd0}};

assign tmp_2_fu_1340_p3 = {{59'd0}, {or_ln133_2_fu_1335_p2}};

assign tmp_3_cast_fu_940_p3 = {{trunc_ln127_fu_936_p1}, {2'd0}};

assign tmp_3_fu_1057_p3 = {{select_ln117_reg_1600}, {2'd0}};

assign tmp_4_cast_fu_1015_p3 = {{empty_16_fu_1011_p1}, {6'd0}};

assign tmp_4_fu_1075_p3 = {{55'd0}, {or_ln127_fu_1070_p2}};

assign tmp_5_fu_1216_p3 = {{select_ln117_1_reg_1609_pp4_iter2_reg}, {2'd0}};

assign tmp_6_fu_1255_p3 = {{59'd0}, {or_ln132_fu_1250_p2}};

assign tmp_7_fu_1293_p3 = {{59'd0}, {or_ln132_1_fu_1288_p2}};

assign tmp_8_fu_1312_p3 = {{59'd0}, {or_ln132_2_fu_1307_p2}};

assign tmp_9_fu_1233_p3 = {{select_ln117_2_reg_1615_pp4_iter2_reg}, {2'd0}};

assign tmp_cast_fu_709_p3 = {{trunc_ln92_fu_705_p1}, {6'd0}};

assign tmp_s_fu_1274_p3 = {{59'd0}, {or_ln133_fu_1269_p2}};

assign trunc_ln103_fu_782_p1 = select_ln95_1_fu_774_p3[1:0];

assign trunc_ln115_fu_859_p1 = select_ln107_1_fu_851_p3[5:0];

assign trunc_ln127_fu_936_p1 = select_ln119_1_fu_928_p3[5:0];

assign trunc_ln171_fu_1399_p1 = select_ln162_1_fu_1391_p3[2:0];

assign trunc_ln92_fu_705_p1 = select_ln84_1_fu_697_p3[1:0];

assign zext_ln103_1_fu_810_p1 = add_ln103_reg_1474;

assign zext_ln103_fu_794_p1 = select_ln95_fu_766_p3;

assign zext_ln115_1_fu_887_p1 = add_ln115_reg_1498;

assign zext_ln115_fu_871_p1 = select_ln107_fu_843_p3;

assign zext_ln127_1_fu_1064_p1 = tmp_3_fu_1057_p3;

assign zext_ln127_2_fu_964_p1 = add_ln127_reg_1522;

assign zext_ln127_fu_948_p1 = select_ln119_fu_920_p3;

assign zext_ln132_fu_1223_p1 = tmp_5_fu_1216_p3;

assign zext_ln133_fu_1240_p1 = tmp_9_fu_1233_p3;

assign zext_ln171_1_fu_1427_p1 = add_ln171_reg_1953;

assign zext_ln171_fu_1411_p1 = select_ln162_fu_1383_p3;

assign zext_ln92_1_fu_733_p1 = add_ln92_reg_1450;

assign zext_ln92_fu_717_p1 = select_ln84_fu_689_p3;

always @ (posedge ap_clk) begin
    tmp_3_reg_1630[1:0] <= 2'b00;
    tmp_5_reg_1915[1:0] <= 2'b00;
    tmp_9_reg_1922[1:0] <= 2'b00;
    C_addr_4_reg_1929[1:0] <= 2'b11;
    C_addr_8_reg_1934[1:0] <= 2'b11;
end

endmodule //HLS_accel_wrapper_mmult_hw
