// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Filter2DKernel_Filter2DKernel,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.239000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=258,HLS_SYN_DSP=0,HLS_SYN_FF=70410,HLS_SYN_LUT=105485,HLS_VERSION=2020_2}" *)

module Filter2DKernel (
        s_axi_config_AWVALID,
        s_axi_config_AWREADY,
        s_axi_config_AWADDR,
        s_axi_config_WVALID,
        s_axi_config_WREADY,
        s_axi_config_WDATA,
        s_axi_config_WSTRB,
        s_axi_config_ARVALID,
        s_axi_config_ARREADY,
        s_axi_config_ARADDR,
        s_axi_config_RVALID,
        s_axi_config_RREADY,
        s_axi_config_RDATA,
        s_axi_config_RRESP,
        s_axi_config_BVALID,
        s_axi_config_BREADY,
        s_axi_config_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        input_stream_V_TDATA,
        output_stream_TDATA,
        output_stream_TKEEP,
        output_stream_TSTRB,
        output_stream_TLAST,
        input_stream_V_TVALID,
        input_stream_V_TREADY,
        output_stream_TVALID,
        output_stream_TREADY
);

parameter    C_S_AXI_CONFIG_DATA_WIDTH = 32;
parameter    C_S_AXI_CONFIG_ADDR_WIDTH = 10;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_CONFIG_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_config_AWVALID;
output   s_axi_config_AWREADY;
input  [C_S_AXI_CONFIG_ADDR_WIDTH - 1:0] s_axi_config_AWADDR;
input   s_axi_config_WVALID;
output   s_axi_config_WREADY;
input  [C_S_AXI_CONFIG_DATA_WIDTH - 1:0] s_axi_config_WDATA;
input  [C_S_AXI_CONFIG_WSTRB_WIDTH - 1:0] s_axi_config_WSTRB;
input   s_axi_config_ARVALID;
output   s_axi_config_ARREADY;
input  [C_S_AXI_CONFIG_ADDR_WIDTH - 1:0] s_axi_config_ARADDR;
output   s_axi_config_RVALID;
input   s_axi_config_RREADY;
output  [C_S_AXI_CONFIG_DATA_WIDTH - 1:0] s_axi_config_RDATA;
output  [1:0] s_axi_config_RRESP;
output   s_axi_config_BVALID;
input   s_axi_config_BREADY;
output  [1:0] s_axi_config_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [31:0] input_stream_V_TDATA;
output  [31:0] output_stream_TDATA;
output  [3:0] output_stream_TKEEP;
output  [3:0] output_stream_TSTRB;
output  [0:0] output_stream_TLAST;
input   input_stream_V_TVALID;
output   input_stream_V_TREADY;
output   output_stream_TVALID;
input   output_stream_TREADY;

 reg    ap_rst_n_inv;
wire   [31:0] factor;
wire   [15:0] bias;
wire   [15:0] width;
wire   [15:0] height;
wire   [15:0] stride;
wire   [31:0] coeffs_q0;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    Filter2DKernel_entry3_U0_ap_start;
wire    Filter2DKernel_entry3_U0_ap_done;
wire    Filter2DKernel_entry3_U0_ap_continue;
wire    Filter2DKernel_entry3_U0_ap_idle;
wire    Filter2DKernel_entry3_U0_ap_ready;
wire    Filter2DKernel_entry3_U0_start_out;
wire    Filter2DKernel_entry3_U0_start_write;
wire   [15:0] Filter2DKernel_entry3_U0_bias_out_din;
wire    Filter2DKernel_entry3_U0_bias_out_write;
wire   [15:0] Filter2DKernel_entry3_U0_width_out_din;
wire    Filter2DKernel_entry3_U0_width_out_write;
wire   [15:0] Filter2DKernel_entry3_U0_height_out_din;
wire    Filter2DKernel_entry3_U0_height_out_write;
wire    Filter2DKernel_entry4_U0_ap_start;
wire    Filter2DKernel_entry4_U0_ap_done;
wire    Filter2DKernel_entry4_U0_ap_continue;
wire    Filter2DKernel_entry4_U0_ap_idle;
wire    Filter2DKernel_entry4_U0_ap_ready;
wire    Filter2DKernel_entry4_U0_start_out;
wire    Filter2DKernel_entry4_U0_start_write;
wire    Filter2DKernel_entry4_U0_bias_read;
wire    Filter2DKernel_entry4_U0_width_read;
wire    Filter2DKernel_entry4_U0_height_read;
wire   [15:0] Filter2DKernel_entry4_U0_bias_out_din;
wire    Filter2DKernel_entry4_U0_bias_out_write;
wire   [15:0] Filter2DKernel_entry4_U0_width_out_din;
wire    Filter2DKernel_entry4_U0_width_out_write;
wire   [15:0] Filter2DKernel_entry4_U0_width_out1_din;
wire    Filter2DKernel_entry4_U0_width_out1_write;
wire   [15:0] Filter2DKernel_entry4_U0_height_out_din;
wire    Filter2DKernel_entry4_U0_height_out_write;
wire   [15:0] Filter2DKernel_entry4_U0_height_out2_din;
wire    Filter2DKernel_entry4_U0_height_out2_write;
wire    ReadFromMem_U0_ap_start;
wire    ReadFromMem_U0_ap_done;
wire    ReadFromMem_U0_ap_continue;
wire    ReadFromMem_U0_ap_idle;
wire    ReadFromMem_U0_ap_ready;
wire    ReadFromMem_U0_start_out;
wire    ReadFromMem_U0_start_write;
wire   [6:0] ReadFromMem_U0_coeffs_address0;
wire    ReadFromMem_U0_coeffs_ce0;
wire   [31:0] ReadFromMem_U0_coeff_stream5_din;
wire    ReadFromMem_U0_coeff_stream5_write;
wire    Window2D_U0_ap_start;
wire    Window2D_U0_ap_done;
wire    Window2D_U0_ap_continue;
wire    Window2D_U0_ap_idle;
wire    Window2D_U0_ap_ready;
wire    Window2D_U0_input_stream_V_TREADY;
wire   [3871:0] Window2D_U0_window_stream_din;
wire    Window2D_U0_window_stream_write;
wire    Window2D_U0_width_read;
wire    Window2D_U0_height_read;
wire    Filter2D_U0_ap_start;
wire    Filter2D_U0_ap_done;
wire    Filter2D_U0_ap_continue;
wire    Filter2D_U0_ap_idle;
wire    Filter2D_U0_ap_ready;
wire    Filter2D_U0_coeff_stream5_read;
wire    Filter2D_U0_window_stream_read;
wire    Filter2D_U0_width_read;
wire    Filter2D_U0_height_read;
wire    Filter2D_U0_bias_read;
wire   [31:0] Filter2D_U0_output_stream_TDATA;
wire    Filter2D_U0_output_stream_TVALID;
wire   [3:0] Filter2D_U0_output_stream_TKEEP;
wire   [3:0] Filter2D_U0_output_stream_TSTRB;
wire   [0:0] Filter2D_U0_output_stream_TLAST;
wire    ap_sync_continue;
wire    bias_c1_full_n;
wire   [15:0] bias_c1_dout;
wire    bias_c1_empty_n;
wire    width_c2_full_n;
wire   [15:0] width_c2_dout;
wire    width_c2_empty_n;
wire    height_c3_full_n;
wire   [15:0] height_c3_dout;
wire    height_c3_empty_n;
wire    bias_c_full_n;
wire   [15:0] bias_c_dout;
wire    bias_c_empty_n;
wire    width_c_full_n;
wire   [15:0] width_c_dout;
wire    width_c_empty_n;
wire    width_c9_full_n;
wire   [15:0] width_c9_dout;
wire    width_c9_empty_n;
wire    height_c_full_n;
wire   [15:0] height_c_dout;
wire    height_c_empty_n;
wire    height_c10_full_n;
wire   [15:0] height_c10_dout;
wire    height_c10_empty_n;
wire    coeff_stream_full_n;
wire   [31:0] coeff_stream_dout;
wire    coeff_stream_empty_n;
wire    window_stream_full_n;
wire   [3871:0] window_stream_dout;
wire    window_stream_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Filter2DKernel_entry3_U0_ap_ready;
wire    ap_sync_Filter2DKernel_entry3_U0_ap_ready;
reg    ap_sync_reg_ReadFromMem_U0_ap_ready;
wire    ap_sync_ReadFromMem_U0_ap_ready;
wire   [0:0] start_for_Filter2DKernel_entry4_U0_din;
wire    start_for_Filter2DKernel_entry4_U0_full_n;
wire   [0:0] start_for_Filter2DKernel_entry4_U0_dout;
wire    start_for_Filter2DKernel_entry4_U0_empty_n;
wire   [0:0] start_for_Window2D_U0_din;
wire    start_for_Window2D_U0_full_n;
wire   [0:0] start_for_Window2D_U0_dout;
wire    start_for_Window2D_U0_empty_n;
wire   [0:0] start_for_Filter2D_U0_din;
wire    start_for_Filter2D_U0_full_n;
wire   [0:0] start_for_Filter2D_U0_dout;
wire    start_for_Filter2D_U0_empty_n;
wire    Window2D_U0_start_full_n;
wire    Window2D_U0_start_write;
wire    Filter2D_U0_start_full_n;
wire    Filter2D_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_Filter2DKernel_entry3_U0_ap_ready = 1'b0;
#0 ap_sync_reg_ReadFromMem_U0_ap_ready = 1'b0;
end

Filter2DKernel_config_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONFIG_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONFIG_DATA_WIDTH ))
config_s_axi_U(
    .AWVALID(s_axi_config_AWVALID),
    .AWREADY(s_axi_config_AWREADY),
    .AWADDR(s_axi_config_AWADDR),
    .WVALID(s_axi_config_WVALID),
    .WREADY(s_axi_config_WREADY),
    .WDATA(s_axi_config_WDATA),
    .WSTRB(s_axi_config_WSTRB),
    .ARVALID(s_axi_config_ARVALID),
    .ARREADY(s_axi_config_ARREADY),
    .ARADDR(s_axi_config_ARADDR),
    .RVALID(s_axi_config_RVALID),
    .RREADY(s_axi_config_RREADY),
    .RDATA(s_axi_config_RDATA),
    .RRESP(s_axi_config_RRESP),
    .BVALID(s_axi_config_BVALID),
    .BREADY(s_axi_config_BREADY),
    .BRESP(s_axi_config_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .factor(factor),
    .bias(bias),
    .width(width),
    .height(height),
    .stride(stride),
    .coeffs_address0(ReadFromMem_U0_coeffs_address0),
    .coeffs_ce0(ReadFromMem_U0_coeffs_ce0),
    .coeffs_q0(coeffs_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Filter2DKernel_Filter2DKernel_entry3 Filter2DKernel_entry3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Filter2DKernel_entry3_U0_ap_start),
    .start_full_n(start_for_Filter2DKernel_entry4_U0_full_n),
    .ap_done(Filter2DKernel_entry3_U0_ap_done),
    .ap_continue(Filter2DKernel_entry3_U0_ap_continue),
    .ap_idle(Filter2DKernel_entry3_U0_ap_idle),
    .ap_ready(Filter2DKernel_entry3_U0_ap_ready),
    .start_out(Filter2DKernel_entry3_U0_start_out),
    .start_write(Filter2DKernel_entry3_U0_start_write),
    .bias(bias),
    .width(width),
    .height(height),
    .bias_out_din(Filter2DKernel_entry3_U0_bias_out_din),
    .bias_out_full_n(bias_c1_full_n),
    .bias_out_write(Filter2DKernel_entry3_U0_bias_out_write),
    .width_out_din(Filter2DKernel_entry3_U0_width_out_din),
    .width_out_full_n(width_c2_full_n),
    .width_out_write(Filter2DKernel_entry3_U0_width_out_write),
    .height_out_din(Filter2DKernel_entry3_U0_height_out_din),
    .height_out_full_n(height_c3_full_n),
    .height_out_write(Filter2DKernel_entry3_U0_height_out_write)
);

Filter2DKernel_Filter2DKernel_entry4 Filter2DKernel_entry4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Filter2DKernel_entry4_U0_ap_start),
    .start_full_n(start_for_Window2D_U0_full_n),
    .ap_done(Filter2DKernel_entry4_U0_ap_done),
    .ap_continue(Filter2DKernel_entry4_U0_ap_continue),
    .ap_idle(Filter2DKernel_entry4_U0_ap_idle),
    .ap_ready(Filter2DKernel_entry4_U0_ap_ready),
    .start_out(Filter2DKernel_entry4_U0_start_out),
    .start_write(Filter2DKernel_entry4_U0_start_write),
    .bias_dout(bias_c1_dout),
    .bias_empty_n(bias_c1_empty_n),
    .bias_read(Filter2DKernel_entry4_U0_bias_read),
    .width_dout(width_c2_dout),
    .width_empty_n(width_c2_empty_n),
    .width_read(Filter2DKernel_entry4_U0_width_read),
    .height_dout(height_c3_dout),
    .height_empty_n(height_c3_empty_n),
    .height_read(Filter2DKernel_entry4_U0_height_read),
    .bias_out_din(Filter2DKernel_entry4_U0_bias_out_din),
    .bias_out_full_n(bias_c_full_n),
    .bias_out_write(Filter2DKernel_entry4_U0_bias_out_write),
    .width_out_din(Filter2DKernel_entry4_U0_width_out_din),
    .width_out_full_n(width_c_full_n),
    .width_out_write(Filter2DKernel_entry4_U0_width_out_write),
    .width_out1_din(Filter2DKernel_entry4_U0_width_out1_din),
    .width_out1_full_n(width_c9_full_n),
    .width_out1_write(Filter2DKernel_entry4_U0_width_out1_write),
    .height_out_din(Filter2DKernel_entry4_U0_height_out_din),
    .height_out_full_n(height_c_full_n),
    .height_out_write(Filter2DKernel_entry4_U0_height_out_write),
    .height_out2_din(Filter2DKernel_entry4_U0_height_out2_din),
    .height_out2_full_n(height_c10_full_n),
    .height_out2_write(Filter2DKernel_entry4_U0_height_out2_write)
);

Filter2DKernel_ReadFromMem ReadFromMem_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ReadFromMem_U0_ap_start),
    .start_full_n(start_for_Filter2D_U0_full_n),
    .ap_done(ReadFromMem_U0_ap_done),
    .ap_continue(ReadFromMem_U0_ap_continue),
    .ap_idle(ReadFromMem_U0_ap_idle),
    .ap_ready(ReadFromMem_U0_ap_ready),
    .start_out(ReadFromMem_U0_start_out),
    .start_write(ReadFromMem_U0_start_write),
    .coeffs_address0(ReadFromMem_U0_coeffs_address0),
    .coeffs_ce0(ReadFromMem_U0_coeffs_ce0),
    .coeffs_q0(coeffs_q0),
    .coeff_stream5_din(ReadFromMem_U0_coeff_stream5_din),
    .coeff_stream5_full_n(coeff_stream_full_n),
    .coeff_stream5_write(ReadFromMem_U0_coeff_stream5_write)
);

Filter2DKernel_Window2D Window2D_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Window2D_U0_ap_start),
    .ap_done(Window2D_U0_ap_done),
    .ap_continue(Window2D_U0_ap_continue),
    .ap_idle(Window2D_U0_ap_idle),
    .ap_ready(Window2D_U0_ap_ready),
    .input_stream_V_TDATA(input_stream_V_TDATA),
    .input_stream_V_TVALID(input_stream_V_TVALID),
    .input_stream_V_TREADY(Window2D_U0_input_stream_V_TREADY),
    .window_stream_din(Window2D_U0_window_stream_din),
    .window_stream_full_n(window_stream_full_n),
    .window_stream_write(Window2D_U0_window_stream_write),
    .width_dout(width_c_dout),
    .width_empty_n(width_c_empty_n),
    .width_read(Window2D_U0_width_read),
    .height_dout(height_c_dout),
    .height_empty_n(height_c_empty_n),
    .height_read(Window2D_U0_height_read)
);

Filter2DKernel_Filter2D Filter2D_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Filter2D_U0_ap_start),
    .ap_done(Filter2D_U0_ap_done),
    .ap_continue(Filter2D_U0_ap_continue),
    .ap_idle(Filter2D_U0_ap_idle),
    .ap_ready(Filter2D_U0_ap_ready),
    .coeff_stream5_dout(coeff_stream_dout),
    .coeff_stream5_empty_n(coeff_stream_empty_n),
    .coeff_stream5_read(Filter2D_U0_coeff_stream5_read),
    .window_stream_dout(window_stream_dout),
    .window_stream_empty_n(window_stream_empty_n),
    .window_stream_read(Filter2D_U0_window_stream_read),
    .width_dout(width_c9_dout),
    .width_empty_n(width_c9_empty_n),
    .width_read(Filter2D_U0_width_read),
    .height_dout(height_c10_dout),
    .height_empty_n(height_c10_empty_n),
    .height_read(Filter2D_U0_height_read),
    .bias_dout(bias_c_dout),
    .bias_empty_n(bias_c_empty_n),
    .bias_read(Filter2D_U0_bias_read),
    .output_stream_TDATA(Filter2D_U0_output_stream_TDATA),
    .output_stream_TVALID(Filter2D_U0_output_stream_TVALID),
    .output_stream_TREADY(output_stream_TREADY),
    .output_stream_TKEEP(Filter2D_U0_output_stream_TKEEP),
    .output_stream_TSTRB(Filter2D_U0_output_stream_TSTRB),
    .output_stream_TLAST(Filter2D_U0_output_stream_TLAST)
);

Filter2DKernel_fifo_w16_d2_S bias_c1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Filter2DKernel_entry3_U0_bias_out_din),
    .if_full_n(bias_c1_full_n),
    .if_write(Filter2DKernel_entry3_U0_bias_out_write),
    .if_dout(bias_c1_dout),
    .if_empty_n(bias_c1_empty_n),
    .if_read(Filter2DKernel_entry4_U0_bias_read)
);

Filter2DKernel_fifo_w16_d2_S width_c2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Filter2DKernel_entry3_U0_width_out_din),
    .if_full_n(width_c2_full_n),
    .if_write(Filter2DKernel_entry3_U0_width_out_write),
    .if_dout(width_c2_dout),
    .if_empty_n(width_c2_empty_n),
    .if_read(Filter2DKernel_entry4_U0_width_read)
);

Filter2DKernel_fifo_w16_d2_S height_c3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Filter2DKernel_entry3_U0_height_out_din),
    .if_full_n(height_c3_full_n),
    .if_write(Filter2DKernel_entry3_U0_height_out_write),
    .if_dout(height_c3_dout),
    .if_empty_n(height_c3_empty_n),
    .if_read(Filter2DKernel_entry4_U0_height_read)
);

Filter2DKernel_fifo_w16_d3_S bias_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Filter2DKernel_entry4_U0_bias_out_din),
    .if_full_n(bias_c_full_n),
    .if_write(Filter2DKernel_entry4_U0_bias_out_write),
    .if_dout(bias_c_dout),
    .if_empty_n(bias_c_empty_n),
    .if_read(Filter2D_U0_bias_read)
);

Filter2DKernel_fifo_w16_d2_S width_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Filter2DKernel_entry4_U0_width_out_din),
    .if_full_n(width_c_full_n),
    .if_write(Filter2DKernel_entry4_U0_width_out_write),
    .if_dout(width_c_dout),
    .if_empty_n(width_c_empty_n),
    .if_read(Window2D_U0_width_read)
);

Filter2DKernel_fifo_w16_d3_S width_c9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Filter2DKernel_entry4_U0_width_out1_din),
    .if_full_n(width_c9_full_n),
    .if_write(Filter2DKernel_entry4_U0_width_out1_write),
    .if_dout(width_c9_dout),
    .if_empty_n(width_c9_empty_n),
    .if_read(Filter2D_U0_width_read)
);

Filter2DKernel_fifo_w16_d2_S height_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Filter2DKernel_entry4_U0_height_out_din),
    .if_full_n(height_c_full_n),
    .if_write(Filter2DKernel_entry4_U0_height_out_write),
    .if_dout(height_c_dout),
    .if_empty_n(height_c_empty_n),
    .if_read(Window2D_U0_height_read)
);

Filter2DKernel_fifo_w16_d3_S height_c10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Filter2DKernel_entry4_U0_height_out2_din),
    .if_full_n(height_c10_full_n),
    .if_write(Filter2DKernel_entry4_U0_height_out2_write),
    .if_dout(height_c10_dout),
    .if_empty_n(height_c10_empty_n),
    .if_read(Filter2D_U0_height_read)
);

Filter2DKernel_fifo_w32_d2_S coeff_stream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ReadFromMem_U0_coeff_stream5_din),
    .if_full_n(coeff_stream_full_n),
    .if_write(ReadFromMem_U0_coeff_stream5_write),
    .if_dout(coeff_stream_dout),
    .if_empty_n(coeff_stream_empty_n),
    .if_read(Filter2D_U0_coeff_stream5_read)
);

Filter2DKernel_fifo_w3872_d3_A window_stream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Window2D_U0_window_stream_din),
    .if_full_n(window_stream_full_n),
    .if_write(Window2D_U0_window_stream_write),
    .if_dout(window_stream_dout),
    .if_empty_n(window_stream_empty_n),
    .if_read(Filter2D_U0_window_stream_read)
);

Filter2DKernel_start_for_Filter2DKernel_entry4_U0 start_for_Filter2DKernel_entry4_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Filter2DKernel_entry4_U0_din),
    .if_full_n(start_for_Filter2DKernel_entry4_U0_full_n),
    .if_write(Filter2DKernel_entry3_U0_start_write),
    .if_dout(start_for_Filter2DKernel_entry4_U0_dout),
    .if_empty_n(start_for_Filter2DKernel_entry4_U0_empty_n),
    .if_read(Filter2DKernel_entry4_U0_ap_ready)
);

Filter2DKernel_start_for_Window2D_U0 start_for_Window2D_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Window2D_U0_din),
    .if_full_n(start_for_Window2D_U0_full_n),
    .if_write(Filter2DKernel_entry4_U0_start_write),
    .if_dout(start_for_Window2D_U0_dout),
    .if_empty_n(start_for_Window2D_U0_empty_n),
    .if_read(Window2D_U0_ap_ready)
);

Filter2DKernel_start_for_Filter2D_U0 start_for_Filter2D_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Filter2D_U0_din),
    .if_full_n(start_for_Filter2D_U0_full_n),
    .if_write(ReadFromMem_U0_start_write),
    .if_dout(start_for_Filter2D_U0_dout),
    .if_empty_n(start_for_Filter2D_U0_empty_n),
    .if_read(Filter2D_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Filter2DKernel_entry3_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Filter2DKernel_entry3_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Filter2DKernel_entry3_U0_ap_ready <= ap_sync_Filter2DKernel_entry3_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_ReadFromMem_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_ReadFromMem_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_ReadFromMem_U0_ap_ready <= ap_sync_ReadFromMem_U0_ap_ready;
        end
    end
end

assign Filter2DKernel_entry3_U0_ap_continue = 1'b1;

assign Filter2DKernel_entry3_U0_ap_start = ((ap_sync_reg_Filter2DKernel_entry3_U0_ap_ready ^ 1'b1) & ap_start);

assign Filter2DKernel_entry4_U0_ap_continue = 1'b1;

assign Filter2DKernel_entry4_U0_ap_start = start_for_Filter2DKernel_entry4_U0_empty_n;

assign Filter2D_U0_ap_continue = 1'b1;

assign Filter2D_U0_ap_start = start_for_Filter2D_U0_empty_n;

assign Filter2D_U0_start_full_n = 1'b1;

assign Filter2D_U0_start_write = 1'b0;

assign ReadFromMem_U0_ap_continue = 1'b1;

assign ReadFromMem_U0_ap_start = ((ap_sync_reg_ReadFromMem_U0_ap_ready ^ 1'b1) & ap_start);

assign Window2D_U0_ap_continue = 1'b1;

assign Window2D_U0_ap_start = start_for_Window2D_U0_empty_n;

assign Window2D_U0_start_full_n = 1'b1;

assign Window2D_U0_start_write = 1'b0;

assign ap_done = Filter2D_U0_ap_done;

assign ap_idle = (Window2D_U0_ap_idle & ReadFromMem_U0_ap_idle & Filter2D_U0_ap_idle & Filter2DKernel_entry4_U0_ap_idle & Filter2DKernel_entry3_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_Filter2DKernel_entry3_U0_ap_ready = (ap_sync_reg_Filter2DKernel_entry3_U0_ap_ready | Filter2DKernel_entry3_U0_ap_ready);

assign ap_sync_ReadFromMem_U0_ap_ready = (ap_sync_reg_ReadFromMem_U0_ap_ready | ReadFromMem_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Filter2D_U0_ap_done;

assign ap_sync_ready = (ap_sync_ReadFromMem_U0_ap_ready & ap_sync_Filter2DKernel_entry3_U0_ap_ready);

assign input_stream_V_TREADY = Window2D_U0_input_stream_V_TREADY;

assign output_stream_TDATA = Filter2D_U0_output_stream_TDATA;

assign output_stream_TKEEP = Filter2D_U0_output_stream_TKEEP;

assign output_stream_TLAST = Filter2D_U0_output_stream_TLAST;

assign output_stream_TSTRB = Filter2D_U0_output_stream_TSTRB;

assign output_stream_TVALID = Filter2D_U0_output_stream_TVALID;

assign start_for_Filter2DKernel_entry4_U0_din = 1'b1;

assign start_for_Filter2D_U0_din = 1'b1;

assign start_for_Window2D_U0_din = 1'b1;


// synthesis translate_off
`include "Filter2DKernel_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //Filter2DKernel

