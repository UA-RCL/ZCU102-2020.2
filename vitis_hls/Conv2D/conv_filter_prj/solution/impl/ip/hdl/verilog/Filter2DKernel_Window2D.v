// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2DKernel_Window2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_stream_V_TDATA,
        input_stream_V_TVALID,
        input_stream_V_TREADY,
        window_stream_din,
        window_stream_full_n,
        window_stream_write,
        width_dout,
        width_empty_n,
        width_read,
        height_dout,
        height_empty_n,
        height_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state8 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] input_stream_V_TDATA;
input   input_stream_V_TVALID;
output   input_stream_V_TREADY;
output  [3871:0] window_stream_din;
input   window_stream_full_n;
output   window_stream_write;
input  [15:0] width_dout;
input   width_empty_n;
output   width_read;
input  [15:0] height_dout;
input   height_empty_n;
output   height_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg window_stream_write;
reg width_read;
reg height_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    input_stream_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln100_fu_825_p2;
wire   [0:0] icmp_ln107_fu_830_p2;
reg    window_stream_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln131_reg_2720;
reg   [0:0] icmp_ln131_reg_2720_pp0_iter1_reg;
reg    width_blk_n;
reg    height_blk_n;
reg   [31:0] n_reg_729;
reg   [31:0] col_ptr_reg_740;
reg   [31:0] new_pixel_reg_751;
reg   [15:0] width_read_reg_2591;
wire   [16:0] zext_ln93_1_fu_772_p1;
reg   [16:0] zext_ln93_1_reg_2607;
wire    ap_CS_fsm_state3;
wire   [18:0] ramp_up_fu_796_p2;
reg   [18:0] ramp_up_reg_2612;
wire   [31:0] zext_ln93_4_fu_802_p1;
reg   [31:0] zext_ln93_4_reg_2617;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_1913_p2;
reg   [31:0] num_pixels_reg_2622;
(* use_dsp48 = "no" *) wire   [31:0] num_iterations_fu_805_p2;
reg   [31:0] num_iterations_reg_2627;
wire  signed [31:0] sext_ln100_fu_815_p1;
reg  signed [31:0] sext_ln100_reg_2632;
wire   [31:0] n_1_fu_819_p2;
reg    ap_predicate_op164_read_state5;
reg    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_block_state7_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln100_reg_2642;
reg   [0:0] icmp_ln100_reg_2642_pp0_iter1_reg;
reg   [10:0] LineBuffer_0_addr_reg_2655;
reg   [10:0] LineBuffer_0_addr_reg_2655_pp0_iter1_reg;
reg   [10:0] LineBuffer_1_addr_reg_2661;
reg   [10:0] LineBuffer_1_addr_reg_2661_pp0_iter1_reg;
reg   [10:0] LineBuffer_2_addr_reg_2667;
reg   [10:0] LineBuffer_2_addr_reg_2667_pp0_iter1_reg;
reg   [10:0] LineBuffer_3_addr_reg_2673;
reg   [10:0] LineBuffer_3_addr_reg_2673_pp0_iter1_reg;
reg   [10:0] LineBuffer_4_addr_reg_2679;
reg   [10:0] LineBuffer_4_addr_reg_2679_pp0_iter1_reg;
reg   [10:0] LineBuffer_5_addr_reg_2685;
reg   [10:0] LineBuffer_5_addr_reg_2685_pp0_iter1_reg;
reg   [10:0] LineBuffer_6_addr_reg_2691;
reg   [10:0] LineBuffer_6_addr_reg_2691_pp0_iter1_reg;
reg   [10:0] LineBuffer_7_addr_reg_2697;
reg   [10:0] LineBuffer_7_addr_reg_2697_pp0_iter1_reg;
reg   [10:0] LineBuffer_8_addr_reg_2703;
reg   [10:0] LineBuffer_8_addr_reg_2703_pp0_iter1_reg;
reg   [10:0] LineBuffer_9_addr_reg_2709;
wire   [31:0] col_ptr_2_fu_860_p3;
wire   [0:0] icmp_ln131_fu_868_p2;
reg   [31:0] Window_pix_0_1_0275_i_load_reg_2724;
reg   [31:0] Window_pix_0_1_load_reg_2729;
reg   [31:0] Window_pix_0_2_load_reg_2734;
reg   [31:0] Window_pix_0_3_load_reg_2739;
reg   [31:0] Window_pix_0_4_load_reg_2744;
reg   [31:0] Window_pix_0_5_load_reg_2749;
reg   [31:0] Window_pix_0_6_load_reg_2754;
reg   [31:0] Window_pix_0_7_load_reg_2759;
reg   [31:0] Window_pix_0_8_load_reg_2764;
reg   [31:0] Window_pix_1_1_0285_i_load_reg_2769;
reg   [31:0] Window_pix_1_1_load_reg_2774;
reg   [31:0] Window_pix_1_2_load_reg_2779;
reg   [31:0] Window_pix_1_3_load_reg_2784;
reg   [31:0] Window_pix_1_4_load_reg_2789;
reg   [31:0] Window_pix_1_5_load_reg_2794;
reg   [31:0] Window_pix_1_6_load_reg_2799;
reg   [31:0] Window_pix_1_7_load_reg_2804;
reg   [31:0] Window_pix_1_8_load_reg_2809;
reg   [31:0] Window_pix_2_1_0295_i_load_reg_2814;
reg   [31:0] Window_pix_2_1_load_reg_2819;
reg   [31:0] Window_pix_2_2_load_reg_2824;
reg   [31:0] Window_pix_2_3_load_reg_2829;
reg   [31:0] Window_pix_2_4_load_reg_2834;
reg   [31:0] Window_pix_2_5_load_reg_2839;
reg   [31:0] Window_pix_2_6_load_reg_2844;
reg   [31:0] Window_pix_2_7_load_reg_2849;
reg   [31:0] Window_pix_2_8_load_reg_2854;
reg   [31:0] Window_pix_3_1_0305_i_load_reg_2859;
reg   [31:0] Window_pix_3_1_load_reg_2864;
reg   [31:0] Window_pix_3_2_load_reg_2869;
reg   [31:0] Window_pix_3_3_load_reg_2874;
reg   [31:0] Window_pix_3_4_load_reg_2879;
reg   [31:0] Window_pix_3_5_load_reg_2884;
reg   [31:0] Window_pix_3_6_load_reg_2889;
reg   [31:0] Window_pix_3_7_load_reg_2894;
reg   [31:0] Window_pix_3_8_load_reg_2899;
reg   [31:0] Window_pix_4_1_0315_i_load_reg_2904;
reg   [31:0] Window_pix_4_1_load_reg_2909;
reg   [31:0] Window_pix_4_2_load_reg_2914;
reg   [31:0] Window_pix_4_3_load_reg_2919;
reg   [31:0] Window_pix_4_4_load_reg_2924;
reg   [31:0] Window_pix_4_5_load_reg_2929;
reg   [31:0] Window_pix_4_6_load_reg_2934;
reg   [31:0] Window_pix_4_7_load_reg_2939;
reg   [31:0] Window_pix_4_8_load_reg_2944;
reg   [31:0] Window_pix_5_1_0325_i_load_reg_2949;
reg   [31:0] Window_pix_5_1_load_reg_2954;
reg   [31:0] Window_pix_5_2_load_reg_2959;
reg   [31:0] Window_pix_5_3_load_reg_2964;
reg   [31:0] Window_pix_5_4_load_reg_2969;
reg   [31:0] Window_pix_5_5_load_reg_2974;
reg   [31:0] Window_pix_5_6_load_reg_2979;
reg   [31:0] Window_pix_5_7_load_reg_2984;
reg   [31:0] Window_pix_5_8_load_reg_2989;
reg   [31:0] Window_pix_6_1_0335_i_load_reg_2994;
reg   [31:0] Window_pix_6_1_load_reg_2999;
reg   [31:0] Window_pix_6_2_load_reg_3004;
reg   [31:0] Window_pix_6_3_load_reg_3009;
reg   [31:0] Window_pix_6_4_load_reg_3014;
reg   [31:0] Window_pix_6_5_load_reg_3019;
reg   [31:0] Window_pix_6_6_load_reg_3024;
reg   [31:0] Window_pix_6_7_load_reg_3029;
reg   [31:0] Window_pix_6_8_load_reg_3034;
reg   [31:0] Window_pix_7_1_0345_i_load_reg_3039;
reg   [31:0] Window_pix_7_1_load_reg_3044;
reg   [31:0] Window_pix_7_2_load_reg_3049;
reg   [31:0] Window_pix_7_3_load_reg_3054;
reg   [31:0] Window_pix_7_4_load_reg_3059;
reg   [31:0] Window_pix_7_5_load_reg_3064;
reg   [31:0] Window_pix_7_6_load_reg_3069;
reg   [31:0] Window_pix_7_7_load_reg_3074;
reg   [31:0] Window_pix_7_8_load_reg_3079;
reg   [31:0] Window_pix_8_1_0355_i_load_reg_3084;
reg   [31:0] Window_pix_8_1_load_reg_3089;
reg   [31:0] Window_pix_8_2_load_reg_3094;
reg   [31:0] Window_pix_8_3_load_reg_3099;
reg   [31:0] Window_pix_8_4_load_reg_3104;
reg   [31:0] Window_pix_8_5_load_reg_3109;
reg   [31:0] Window_pix_8_6_load_reg_3114;
reg   [31:0] Window_pix_8_7_load_reg_3119;
reg   [31:0] Window_pix_8_8_load_reg_3124;
reg   [31:0] Window_pix_9_1_0365_i_load_reg_3129;
reg   [31:0] Window_pix_9_1_load_reg_3134;
reg   [31:0] Window_pix_9_2_load_reg_3139;
reg   [31:0] Window_pix_9_3_load_reg_3144;
reg   [31:0] Window_pix_9_4_load_reg_3149;
reg   [31:0] Window_pix_9_5_load_reg_3154;
reg   [31:0] Window_pix_9_6_load_reg_3159;
reg   [31:0] Window_pix_9_7_load_reg_3164;
reg   [31:0] Window_pix_9_8_load_reg_3169;
reg   [31:0] Window_pix_10_1_0375_i_load_reg_3174;
reg   [31:0] Window_pix_10_1_load_reg_3179;
reg   [31:0] Window_pix_10_2_load_reg_3184;
reg   [31:0] Window_pix_10_3_load_reg_3189;
reg   [31:0] Window_pix_10_4_load_reg_3194;
reg   [31:0] Window_pix_10_5_load_reg_3199;
reg   [31:0] Window_pix_10_6_load_reg_3204;
reg   [31:0] Window_pix_10_7_load_reg_3209;
reg   [31:0] Window_pix_10_8_load_reg_3214;
reg   [31:0] Window_pix_0_9_load_reg_3219;
reg   [31:0] Window_pix_1_9_load_reg_3224;
reg   [31:0] Window_pix_2_9_load_reg_3229;
reg   [31:0] Window_pix_3_9_load_reg_3234;
reg   [31:0] Window_pix_4_9_load_reg_3239;
reg   [31:0] Window_pix_5_9_load_reg_3244;
reg   [31:0] Window_pix_6_9_load_reg_3249;
reg   [31:0] Window_pix_7_9_load_reg_3254;
reg   [31:0] Window_pix_8_9_load_reg_3259;
reg   [31:0] Window_pix_9_9_load_reg_3264;
reg   [31:0] Window_pix_10_9_load_reg_3269;
wire   [31:0] LineBuffer_0_q1;
reg   [31:0] Window_pix_0_10_reg_3274;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] LineBuffer_1_q1;
reg   [31:0] Window_pix_1_10_reg_3279;
wire   [31:0] LineBuffer_2_q1;
reg   [31:0] Window_pix_2_10_reg_3285;
wire   [31:0] LineBuffer_3_q1;
reg   [31:0] Window_pix_3_10_reg_3291;
wire   [31:0] LineBuffer_4_q1;
reg   [31:0] Window_pix_4_10_reg_3297;
wire   [31:0] LineBuffer_5_q1;
reg   [31:0] Window_pix_5_10_reg_3303;
wire   [31:0] LineBuffer_6_q1;
reg   [31:0] Window_pix_6_10_reg_3309;
wire   [31:0] LineBuffer_7_q1;
reg   [31:0] Window_pix_7_10_reg_3315;
wire   [31:0] LineBuffer_8_q1;
reg   [31:0] Window_pix_8_10_reg_3321;
wire   [31:0] LineBuffer_9_q1;
reg   [31:0] Window_pix_9_10_reg_3327;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter1_state6;
wire   [10:0] LineBuffer_0_address0;
reg    LineBuffer_0_ce0;
reg    LineBuffer_0_we0;
wire   [10:0] LineBuffer_0_address1;
reg    LineBuffer_0_ce1;
wire   [10:0] LineBuffer_1_address0;
reg    LineBuffer_1_ce0;
reg    LineBuffer_1_we0;
wire   [10:0] LineBuffer_1_address1;
reg    LineBuffer_1_ce1;
wire   [10:0] LineBuffer_2_address0;
reg    LineBuffer_2_ce0;
reg    LineBuffer_2_we0;
wire   [10:0] LineBuffer_2_address1;
reg    LineBuffer_2_ce1;
wire   [10:0] LineBuffer_3_address0;
reg    LineBuffer_3_ce0;
reg    LineBuffer_3_we0;
wire   [10:0] LineBuffer_3_address1;
reg    LineBuffer_3_ce1;
wire   [10:0] LineBuffer_4_address0;
reg    LineBuffer_4_ce0;
reg    LineBuffer_4_we0;
wire   [10:0] LineBuffer_4_address1;
reg    LineBuffer_4_ce1;
wire   [10:0] LineBuffer_5_address0;
reg    LineBuffer_5_ce0;
reg    LineBuffer_5_we0;
wire   [10:0] LineBuffer_5_address1;
reg    LineBuffer_5_ce1;
wire   [10:0] LineBuffer_6_address0;
reg    LineBuffer_6_ce0;
reg    LineBuffer_6_we0;
wire   [10:0] LineBuffer_6_address1;
reg    LineBuffer_6_ce1;
wire   [10:0] LineBuffer_7_address0;
reg    LineBuffer_7_ce0;
reg    LineBuffer_7_we0;
wire   [10:0] LineBuffer_7_address1;
reg    LineBuffer_7_ce1;
wire   [10:0] LineBuffer_8_address0;
reg    LineBuffer_8_ce0;
reg    LineBuffer_8_we0;
wire   [10:0] LineBuffer_8_address1;
reg    LineBuffer_8_ce1;
wire   [10:0] LineBuffer_9_address0;
reg    LineBuffer_9_ce0;
reg    LineBuffer_9_we0;
wire   [10:0] LineBuffer_9_address1;
reg    LineBuffer_9_ce1;
wire   [31:0] ap_phi_reg_pp0_iter0_new_pixel_reg_751;
reg   [31:0] ap_phi_reg_pp0_iter1_new_pixel_reg_751;
wire   [63:0] idxprom19_i_fu_835_p1;
reg   [31:0] Window_pix_0_1_0275_i_fu_64;
reg   [31:0] Window_pix_0_1_fu_68;
reg   [31:0] Window_pix_0_2_fu_72;
reg   [31:0] Window_pix_0_3_fu_76;
reg   [31:0] Window_pix_0_4_fu_80;
reg   [31:0] Window_pix_0_5_fu_84;
reg   [31:0] Window_pix_0_6_fu_88;
reg   [31:0] Window_pix_0_7_fu_92;
reg   [31:0] Window_pix_0_8_fu_96;
reg   [31:0] Window_pix_0_9_fu_100;
reg   [31:0] Window_pix_1_1_0285_i_fu_104;
reg   [31:0] Window_pix_1_1_fu_108;
reg   [31:0] Window_pix_1_2_fu_112;
reg   [31:0] Window_pix_1_3_fu_116;
reg   [31:0] Window_pix_1_4_fu_120;
reg   [31:0] Window_pix_1_5_fu_124;
reg   [31:0] Window_pix_1_6_fu_128;
reg   [31:0] Window_pix_1_7_fu_132;
reg   [31:0] Window_pix_1_8_fu_136;
reg   [31:0] Window_pix_1_9_fu_140;
reg   [31:0] Window_pix_2_1_0295_i_fu_144;
reg   [31:0] Window_pix_2_1_fu_148;
reg   [31:0] Window_pix_2_2_fu_152;
reg   [31:0] Window_pix_2_3_fu_156;
reg   [31:0] Window_pix_2_4_fu_160;
reg   [31:0] Window_pix_2_5_fu_164;
reg   [31:0] Window_pix_2_6_fu_168;
reg   [31:0] Window_pix_2_7_fu_172;
reg   [31:0] Window_pix_2_8_fu_176;
reg   [31:0] Window_pix_2_9_fu_180;
reg   [31:0] Window_pix_3_1_0305_i_fu_184;
reg   [31:0] Window_pix_3_1_fu_188;
reg   [31:0] Window_pix_3_2_fu_192;
reg   [31:0] Window_pix_3_3_fu_196;
reg   [31:0] Window_pix_3_4_fu_200;
reg   [31:0] Window_pix_3_5_fu_204;
reg   [31:0] Window_pix_3_6_fu_208;
reg   [31:0] Window_pix_3_7_fu_212;
reg   [31:0] Window_pix_3_8_fu_216;
reg   [31:0] Window_pix_3_9_fu_220;
reg   [31:0] Window_pix_4_1_0315_i_fu_224;
reg   [31:0] Window_pix_4_1_fu_228;
reg   [31:0] Window_pix_4_2_fu_232;
reg   [31:0] Window_pix_4_3_fu_236;
reg   [31:0] Window_pix_4_4_fu_240;
reg   [31:0] Window_pix_4_5_fu_244;
reg   [31:0] Window_pix_4_6_fu_248;
reg   [31:0] Window_pix_4_7_fu_252;
reg   [31:0] Window_pix_4_8_fu_256;
reg   [31:0] Window_pix_4_9_fu_260;
reg   [31:0] Window_pix_5_1_0325_i_fu_264;
reg   [31:0] Window_pix_5_1_fu_268;
reg   [31:0] Window_pix_5_2_fu_272;
reg   [31:0] Window_pix_5_3_fu_276;
reg   [31:0] Window_pix_5_4_fu_280;
reg   [31:0] Window_pix_5_5_fu_284;
reg   [31:0] Window_pix_5_6_fu_288;
reg   [31:0] Window_pix_5_7_fu_292;
reg   [31:0] Window_pix_5_8_fu_296;
reg   [31:0] Window_pix_5_9_fu_300;
reg   [31:0] Window_pix_6_1_0335_i_fu_304;
reg   [31:0] Window_pix_6_1_fu_308;
reg   [31:0] Window_pix_6_2_fu_312;
reg   [31:0] Window_pix_6_3_fu_316;
reg   [31:0] Window_pix_6_4_fu_320;
reg   [31:0] Window_pix_6_5_fu_324;
reg   [31:0] Window_pix_6_6_fu_328;
reg   [31:0] Window_pix_6_7_fu_332;
reg   [31:0] Window_pix_6_8_fu_336;
reg   [31:0] Window_pix_6_9_fu_340;
reg   [31:0] Window_pix_7_1_0345_i_fu_344;
reg   [31:0] Window_pix_7_1_fu_348;
reg   [31:0] Window_pix_7_2_fu_352;
reg   [31:0] Window_pix_7_3_fu_356;
reg   [31:0] Window_pix_7_4_fu_360;
reg   [31:0] Window_pix_7_5_fu_364;
reg   [31:0] Window_pix_7_6_fu_368;
reg   [31:0] Window_pix_7_7_fu_372;
reg   [31:0] Window_pix_7_8_fu_376;
reg   [31:0] Window_pix_7_9_fu_380;
reg   [31:0] Window_pix_8_1_0355_i_fu_384;
reg   [31:0] Window_pix_8_1_fu_388;
reg   [31:0] Window_pix_8_2_fu_392;
reg   [31:0] Window_pix_8_3_fu_396;
reg   [31:0] Window_pix_8_4_fu_400;
reg   [31:0] Window_pix_8_5_fu_404;
reg   [31:0] Window_pix_8_6_fu_408;
reg   [31:0] Window_pix_8_7_fu_412;
reg   [31:0] Window_pix_8_8_fu_416;
reg   [31:0] Window_pix_8_9_fu_420;
reg   [31:0] Window_pix_9_1_0365_i_fu_424;
reg   [31:0] Window_pix_9_1_fu_428;
reg   [31:0] Window_pix_9_2_fu_432;
reg   [31:0] Window_pix_9_3_fu_436;
reg   [31:0] Window_pix_9_4_fu_440;
reg   [31:0] Window_pix_9_5_fu_444;
reg   [31:0] Window_pix_9_6_fu_448;
reg   [31:0] Window_pix_9_7_fu_452;
reg   [31:0] Window_pix_9_8_fu_456;
reg   [31:0] Window_pix_9_9_fu_460;
reg   [31:0] Window_pix_10_1_0375_i_fu_464;
reg   [31:0] Window_pix_10_1_fu_468;
reg   [31:0] Window_pix_10_2_fu_472;
reg   [31:0] Window_pix_10_3_fu_476;
reg   [31:0] Window_pix_10_4_fu_480;
reg   [31:0] Window_pix_10_5_fu_484;
reg   [31:0] Window_pix_10_6_fu_488;
reg   [31:0] Window_pix_10_7_fu_492;
reg   [31:0] Window_pix_10_8_fu_496;
reg   [31:0] Window_pix_10_9_fu_500;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_01001;
wire   [17:0] shl_ln_fu_775_p3;
wire   [16:0] add_ln93_fu_786_p2;
wire   [18:0] zext_ln93_3_fu_792_p1;
wire   [18:0] zext_ln93_2_fu_782_p1;
wire   [16:0] sub_i_fu_810_p2;
wire   [0:0] icmp_ln124_fu_849_p2;
wire   [31:0] col_ptr_1_fu_854_p2;
wire   [15:0] grp_fu_1913_p0;
wire   [15:0] grp_fu_1913_p1;
reg    grp_fu_1913_ce;
wire    ap_CS_fsm_state8;
reg   [5:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_168;
reg    ap_enable_state5_pp0_iter0_stage0;
reg    ap_enable_operation_414;
reg    ap_enable_state6_pp0_iter1_stage0;
reg    ap_enable_operation_436;
reg    ap_enable_state7_pp0_iter2_stage0;
reg    ap_enable_operation_170;
reg    ap_enable_operation_415;
reg    ap_enable_operation_437;
reg    ap_enable_operation_172;
reg    ap_enable_operation_416;
reg    ap_enable_operation_438;
reg    ap_enable_operation_174;
reg    ap_enable_operation_417;
reg    ap_enable_operation_439;
reg    ap_enable_operation_176;
reg    ap_enable_operation_418;
reg    ap_enable_operation_440;
reg    ap_enable_operation_178;
reg    ap_enable_operation_419;
reg    ap_enable_operation_441;
reg    ap_enable_operation_180;
reg    ap_enable_operation_420;
reg    ap_enable_operation_442;
reg    ap_enable_operation_182;
reg    ap_enable_operation_421;
reg    ap_enable_operation_443;
reg    ap_enable_operation_184;
reg    ap_enable_operation_422;
reg    ap_enable_operation_444;
reg    ap_enable_operation_186;
reg    ap_enable_operation_423;
reg    ap_enable_operation_424;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_input_stream_V_U_apdone_blk;
wire   [31:0] input_stream_V_TDATA_int_regslice;
wire    input_stream_V_TVALID_int_regslice;
reg    input_stream_V_TREADY_int_regslice;
wire    regslice_both_input_stream_V_U_ack_in;
wire   [31:0] grp_fu_1913_p00;
wire   [31:0] grp_fu_1913_p10;
reg    ap_condition_130;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

Filter2DKernel_Window2D_LineBuffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuffer_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_0_address0),
    .ce0(LineBuffer_0_ce0),
    .we0(LineBuffer_0_we0),
    .d0(Window_pix_1_10_reg_3279),
    .address1(LineBuffer_0_address1),
    .ce1(LineBuffer_0_ce1),
    .q1(LineBuffer_0_q1)
);

Filter2DKernel_Window2D_LineBuffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_1_address0),
    .ce0(LineBuffer_1_ce0),
    .we0(LineBuffer_1_we0),
    .d0(Window_pix_2_10_reg_3285),
    .address1(LineBuffer_1_address1),
    .ce1(LineBuffer_1_ce1),
    .q1(LineBuffer_1_q1)
);

Filter2DKernel_Window2D_LineBuffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_2_address0),
    .ce0(LineBuffer_2_ce0),
    .we0(LineBuffer_2_we0),
    .d0(Window_pix_3_10_reg_3291),
    .address1(LineBuffer_2_address1),
    .ce1(LineBuffer_2_ce1),
    .q1(LineBuffer_2_q1)
);

Filter2DKernel_Window2D_LineBuffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_3_address0),
    .ce0(LineBuffer_3_ce0),
    .we0(LineBuffer_3_we0),
    .d0(Window_pix_4_10_reg_3297),
    .address1(LineBuffer_3_address1),
    .ce1(LineBuffer_3_ce1),
    .q1(LineBuffer_3_q1)
);

Filter2DKernel_Window2D_LineBuffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuffer_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_4_address0),
    .ce0(LineBuffer_4_ce0),
    .we0(LineBuffer_4_we0),
    .d0(Window_pix_5_10_reg_3303),
    .address1(LineBuffer_4_address1),
    .ce1(LineBuffer_4_ce1),
    .q1(LineBuffer_4_q1)
);

Filter2DKernel_Window2D_LineBuffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuffer_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_5_address0),
    .ce0(LineBuffer_5_ce0),
    .we0(LineBuffer_5_we0),
    .d0(Window_pix_6_10_reg_3309),
    .address1(LineBuffer_5_address1),
    .ce1(LineBuffer_5_ce1),
    .q1(LineBuffer_5_q1)
);

Filter2DKernel_Window2D_LineBuffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuffer_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_6_address0),
    .ce0(LineBuffer_6_ce0),
    .we0(LineBuffer_6_we0),
    .d0(Window_pix_7_10_reg_3315),
    .address1(LineBuffer_6_address1),
    .ce1(LineBuffer_6_ce1),
    .q1(LineBuffer_6_q1)
);

Filter2DKernel_Window2D_LineBuffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuffer_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_7_address0),
    .ce0(LineBuffer_7_ce0),
    .we0(LineBuffer_7_we0),
    .d0(Window_pix_8_10_reg_3321),
    .address1(LineBuffer_7_address1),
    .ce1(LineBuffer_7_ce1),
    .q1(LineBuffer_7_q1)
);

Filter2DKernel_Window2D_LineBuffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuffer_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_8_address0),
    .ce0(LineBuffer_8_ce0),
    .we0(LineBuffer_8_we0),
    .d0(Window_pix_9_10_reg_3327),
    .address1(LineBuffer_8_address1),
    .ce1(LineBuffer_8_ce1),
    .q1(LineBuffer_8_q1)
);

Filter2DKernel_Window2D_LineBuffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuffer_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_9_address0),
    .ce0(LineBuffer_9_ce0),
    .we0(LineBuffer_9_we0),
    .d0(ap_phi_reg_pp0_iter1_new_pixel_reg_751),
    .address1(LineBuffer_9_address1),
    .ce1(LineBuffer_9_ce1),
    .q1(LineBuffer_9_q1)
);

Filter2DKernel_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1913_p0),
    .din1(grp_fu_1913_p1),
    .ce(grp_fu_1913_ce),
    .dout(grp_fu_1913_p2)
);

Filter2DKernel_regslice_both #(
    .DataWidth( 32 ))
regslice_both_input_stream_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(input_stream_V_TDATA),
    .vld_in(input_stream_V_TVALID),
    .ack_in(regslice_both_input_stream_V_U_ack_in),
    .data_out(input_stream_V_TDATA_int_regslice),
    .vld_out(input_stream_V_TVALID_int_regslice),
    .ack_out(input_stream_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_stream_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter1_state6)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state6))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_130)) begin
        if (((icmp_ln107_fu_830_p2 == 1'd0) & (icmp_ln100_fu_825_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_new_pixel_reg_751 <= 32'd0;
        end else if (((icmp_ln107_fu_830_p2 == 1'd1) & (icmp_ln100_fu_825_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_new_pixel_reg_751 <= input_stream_V_TDATA_int_regslice;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_new_pixel_reg_751 <= ap_phi_reg_pp0_iter0_new_pixel_reg_751;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_825_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_ptr_reg_740 <= col_ptr_2_fu_860_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        col_ptr_reg_740 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_825_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_reg_729 <= n_1_fu_819_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        n_reg_729 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_825_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_0_addr_reg_2655 <= idxprom19_i_fu_835_p1;
        LineBuffer_1_addr_reg_2661 <= idxprom19_i_fu_835_p1;
        LineBuffer_2_addr_reg_2667 <= idxprom19_i_fu_835_p1;
        LineBuffer_3_addr_reg_2673 <= idxprom19_i_fu_835_p1;
        LineBuffer_4_addr_reg_2679 <= idxprom19_i_fu_835_p1;
        LineBuffer_5_addr_reg_2685 <= idxprom19_i_fu_835_p1;
        LineBuffer_6_addr_reg_2691 <= idxprom19_i_fu_835_p1;
        LineBuffer_7_addr_reg_2697 <= idxprom19_i_fu_835_p1;
        LineBuffer_8_addr_reg_2703 <= idxprom19_i_fu_835_p1;
        LineBuffer_9_addr_reg_2709 <= idxprom19_i_fu_835_p1;
        icmp_ln131_reg_2720 <= icmp_ln131_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_0_addr_reg_2655_pp0_iter1_reg <= LineBuffer_0_addr_reg_2655;
        LineBuffer_1_addr_reg_2661_pp0_iter1_reg <= LineBuffer_1_addr_reg_2661;
        LineBuffer_2_addr_reg_2667_pp0_iter1_reg <= LineBuffer_2_addr_reg_2667;
        LineBuffer_3_addr_reg_2673_pp0_iter1_reg <= LineBuffer_3_addr_reg_2673;
        LineBuffer_4_addr_reg_2679_pp0_iter1_reg <= LineBuffer_4_addr_reg_2679;
        LineBuffer_5_addr_reg_2685_pp0_iter1_reg <= LineBuffer_5_addr_reg_2685;
        LineBuffer_6_addr_reg_2691_pp0_iter1_reg <= LineBuffer_6_addr_reg_2691;
        LineBuffer_7_addr_reg_2697_pp0_iter1_reg <= LineBuffer_7_addr_reg_2697;
        LineBuffer_8_addr_reg_2703_pp0_iter1_reg <= LineBuffer_8_addr_reg_2703;
        Window_pix_0_1_0275_i_load_reg_2724 <= Window_pix_0_1_0275_i_fu_64;
        Window_pix_0_1_load_reg_2729 <= Window_pix_0_1_fu_68;
        Window_pix_0_2_load_reg_2734 <= Window_pix_0_2_fu_72;
        Window_pix_0_3_load_reg_2739 <= Window_pix_0_3_fu_76;
        Window_pix_0_4_load_reg_2744 <= Window_pix_0_4_fu_80;
        Window_pix_0_5_load_reg_2749 <= Window_pix_0_5_fu_84;
        Window_pix_0_6_load_reg_2754 <= Window_pix_0_6_fu_88;
        Window_pix_0_7_load_reg_2759 <= Window_pix_0_7_fu_92;
        Window_pix_0_8_load_reg_2764 <= Window_pix_0_8_fu_96;
        Window_pix_10_1_0375_i_load_reg_3174 <= Window_pix_10_1_0375_i_fu_464;
        Window_pix_10_1_load_reg_3179 <= Window_pix_10_1_fu_468;
        Window_pix_10_2_load_reg_3184 <= Window_pix_10_2_fu_472;
        Window_pix_10_3_load_reg_3189 <= Window_pix_10_3_fu_476;
        Window_pix_10_4_load_reg_3194 <= Window_pix_10_4_fu_480;
        Window_pix_10_5_load_reg_3199 <= Window_pix_10_5_fu_484;
        Window_pix_10_6_load_reg_3204 <= Window_pix_10_6_fu_488;
        Window_pix_10_7_load_reg_3209 <= Window_pix_10_7_fu_492;
        Window_pix_10_8_load_reg_3214 <= Window_pix_10_8_fu_496;
        Window_pix_1_1_0285_i_load_reg_2769 <= Window_pix_1_1_0285_i_fu_104;
        Window_pix_1_1_load_reg_2774 <= Window_pix_1_1_fu_108;
        Window_pix_1_2_load_reg_2779 <= Window_pix_1_2_fu_112;
        Window_pix_1_3_load_reg_2784 <= Window_pix_1_3_fu_116;
        Window_pix_1_4_load_reg_2789 <= Window_pix_1_4_fu_120;
        Window_pix_1_5_load_reg_2794 <= Window_pix_1_5_fu_124;
        Window_pix_1_6_load_reg_2799 <= Window_pix_1_6_fu_128;
        Window_pix_1_7_load_reg_2804 <= Window_pix_1_7_fu_132;
        Window_pix_1_8_load_reg_2809 <= Window_pix_1_8_fu_136;
        Window_pix_2_1_0295_i_load_reg_2814 <= Window_pix_2_1_0295_i_fu_144;
        Window_pix_2_1_load_reg_2819 <= Window_pix_2_1_fu_148;
        Window_pix_2_2_load_reg_2824 <= Window_pix_2_2_fu_152;
        Window_pix_2_3_load_reg_2829 <= Window_pix_2_3_fu_156;
        Window_pix_2_4_load_reg_2834 <= Window_pix_2_4_fu_160;
        Window_pix_2_5_load_reg_2839 <= Window_pix_2_5_fu_164;
        Window_pix_2_6_load_reg_2844 <= Window_pix_2_6_fu_168;
        Window_pix_2_7_load_reg_2849 <= Window_pix_2_7_fu_172;
        Window_pix_2_8_load_reg_2854 <= Window_pix_2_8_fu_176;
        Window_pix_3_1_0305_i_load_reg_2859 <= Window_pix_3_1_0305_i_fu_184;
        Window_pix_3_1_load_reg_2864 <= Window_pix_3_1_fu_188;
        Window_pix_3_2_load_reg_2869 <= Window_pix_3_2_fu_192;
        Window_pix_3_3_load_reg_2874 <= Window_pix_3_3_fu_196;
        Window_pix_3_4_load_reg_2879 <= Window_pix_3_4_fu_200;
        Window_pix_3_5_load_reg_2884 <= Window_pix_3_5_fu_204;
        Window_pix_3_6_load_reg_2889 <= Window_pix_3_6_fu_208;
        Window_pix_3_7_load_reg_2894 <= Window_pix_3_7_fu_212;
        Window_pix_3_8_load_reg_2899 <= Window_pix_3_8_fu_216;
        Window_pix_4_1_0315_i_load_reg_2904 <= Window_pix_4_1_0315_i_fu_224;
        Window_pix_4_1_load_reg_2909 <= Window_pix_4_1_fu_228;
        Window_pix_4_2_load_reg_2914 <= Window_pix_4_2_fu_232;
        Window_pix_4_3_load_reg_2919 <= Window_pix_4_3_fu_236;
        Window_pix_4_4_load_reg_2924 <= Window_pix_4_4_fu_240;
        Window_pix_4_5_load_reg_2929 <= Window_pix_4_5_fu_244;
        Window_pix_4_6_load_reg_2934 <= Window_pix_4_6_fu_248;
        Window_pix_4_7_load_reg_2939 <= Window_pix_4_7_fu_252;
        Window_pix_4_8_load_reg_2944 <= Window_pix_4_8_fu_256;
        Window_pix_5_1_0325_i_load_reg_2949 <= Window_pix_5_1_0325_i_fu_264;
        Window_pix_5_1_load_reg_2954 <= Window_pix_5_1_fu_268;
        Window_pix_5_2_load_reg_2959 <= Window_pix_5_2_fu_272;
        Window_pix_5_3_load_reg_2964 <= Window_pix_5_3_fu_276;
        Window_pix_5_4_load_reg_2969 <= Window_pix_5_4_fu_280;
        Window_pix_5_5_load_reg_2974 <= Window_pix_5_5_fu_284;
        Window_pix_5_6_load_reg_2979 <= Window_pix_5_6_fu_288;
        Window_pix_5_7_load_reg_2984 <= Window_pix_5_7_fu_292;
        Window_pix_5_8_load_reg_2989 <= Window_pix_5_8_fu_296;
        Window_pix_6_1_0335_i_load_reg_2994 <= Window_pix_6_1_0335_i_fu_304;
        Window_pix_6_1_load_reg_2999 <= Window_pix_6_1_fu_308;
        Window_pix_6_2_load_reg_3004 <= Window_pix_6_2_fu_312;
        Window_pix_6_3_load_reg_3009 <= Window_pix_6_3_fu_316;
        Window_pix_6_4_load_reg_3014 <= Window_pix_6_4_fu_320;
        Window_pix_6_5_load_reg_3019 <= Window_pix_6_5_fu_324;
        Window_pix_6_6_load_reg_3024 <= Window_pix_6_6_fu_328;
        Window_pix_6_7_load_reg_3029 <= Window_pix_6_7_fu_332;
        Window_pix_6_8_load_reg_3034 <= Window_pix_6_8_fu_336;
        Window_pix_7_1_0345_i_load_reg_3039 <= Window_pix_7_1_0345_i_fu_344;
        Window_pix_7_1_load_reg_3044 <= Window_pix_7_1_fu_348;
        Window_pix_7_2_load_reg_3049 <= Window_pix_7_2_fu_352;
        Window_pix_7_3_load_reg_3054 <= Window_pix_7_3_fu_356;
        Window_pix_7_4_load_reg_3059 <= Window_pix_7_4_fu_360;
        Window_pix_7_5_load_reg_3064 <= Window_pix_7_5_fu_364;
        Window_pix_7_6_load_reg_3069 <= Window_pix_7_6_fu_368;
        Window_pix_7_7_load_reg_3074 <= Window_pix_7_7_fu_372;
        Window_pix_7_8_load_reg_3079 <= Window_pix_7_8_fu_376;
        Window_pix_8_1_0355_i_load_reg_3084 <= Window_pix_8_1_0355_i_fu_384;
        Window_pix_8_1_load_reg_3089 <= Window_pix_8_1_fu_388;
        Window_pix_8_2_load_reg_3094 <= Window_pix_8_2_fu_392;
        Window_pix_8_3_load_reg_3099 <= Window_pix_8_3_fu_396;
        Window_pix_8_4_load_reg_3104 <= Window_pix_8_4_fu_400;
        Window_pix_8_5_load_reg_3109 <= Window_pix_8_5_fu_404;
        Window_pix_8_6_load_reg_3114 <= Window_pix_8_6_fu_408;
        Window_pix_8_7_load_reg_3119 <= Window_pix_8_7_fu_412;
        Window_pix_8_8_load_reg_3124 <= Window_pix_8_8_fu_416;
        Window_pix_9_1_0365_i_load_reg_3129 <= Window_pix_9_1_0365_i_fu_424;
        Window_pix_9_1_load_reg_3134 <= Window_pix_9_1_fu_428;
        Window_pix_9_2_load_reg_3139 <= Window_pix_9_2_fu_432;
        Window_pix_9_3_load_reg_3144 <= Window_pix_9_3_fu_436;
        Window_pix_9_4_load_reg_3149 <= Window_pix_9_4_fu_440;
        Window_pix_9_5_load_reg_3154 <= Window_pix_9_5_fu_444;
        Window_pix_9_6_load_reg_3159 <= Window_pix_9_6_fu_448;
        Window_pix_9_7_load_reg_3164 <= Window_pix_9_7_fu_452;
        Window_pix_9_8_load_reg_3169 <= Window_pix_9_8_fu_456;
        icmp_ln100_reg_2642 <= icmp_ln100_fu_825_p2;
        icmp_ln100_reg_2642_pp0_iter1_reg <= icmp_ln100_reg_2642;
        icmp_ln131_reg_2720_pp0_iter1_reg <= icmp_ln131_reg_2720;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln100_reg_2642 == 1'd0))) begin
        Window_pix_0_10_reg_3274 <= LineBuffer_0_q1;
        Window_pix_0_9_fu_100 <= LineBuffer_0_q1;
        Window_pix_10_9_fu_500 <= ap_phi_reg_pp0_iter1_new_pixel_reg_751;
        Window_pix_1_10_reg_3279 <= LineBuffer_1_q1;
        Window_pix_1_9_fu_140 <= LineBuffer_1_q1;
        Window_pix_2_10_reg_3285 <= LineBuffer_2_q1;
        Window_pix_2_9_fu_180 <= LineBuffer_2_q1;
        Window_pix_3_10_reg_3291 <= LineBuffer_3_q1;
        Window_pix_3_9_fu_220 <= LineBuffer_3_q1;
        Window_pix_4_10_reg_3297 <= LineBuffer_4_q1;
        Window_pix_4_9_fu_260 <= LineBuffer_4_q1;
        Window_pix_5_10_reg_3303 <= LineBuffer_5_q1;
        Window_pix_5_9_fu_300 <= LineBuffer_5_q1;
        Window_pix_6_10_reg_3309 <= LineBuffer_6_q1;
        Window_pix_6_9_fu_340 <= LineBuffer_6_q1;
        Window_pix_7_10_reg_3315 <= LineBuffer_7_q1;
        Window_pix_7_9_fu_380 <= LineBuffer_7_q1;
        Window_pix_8_10_reg_3321 <= LineBuffer_8_q1;
        Window_pix_8_9_fu_420 <= LineBuffer_8_q1;
        Window_pix_9_10_reg_3327 <= LineBuffer_9_q1;
        Window_pix_9_9_fu_460 <= LineBuffer_9_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Window_pix_0_1_0275_i_fu_64 <= Window_pix_0_1_fu_68;
        Window_pix_0_1_fu_68 <= Window_pix_0_2_fu_72;
        Window_pix_0_2_fu_72 <= Window_pix_0_3_fu_76;
        Window_pix_0_3_fu_76 <= Window_pix_0_4_fu_80;
        Window_pix_0_4_fu_80 <= Window_pix_0_5_fu_84;
        Window_pix_0_5_fu_84 <= Window_pix_0_6_fu_88;
        Window_pix_0_6_fu_88 <= Window_pix_0_7_fu_92;
        Window_pix_0_7_fu_92 <= Window_pix_0_8_fu_96;
        Window_pix_0_8_fu_96 <= Window_pix_0_9_fu_100;
        Window_pix_10_1_0375_i_fu_464 <= Window_pix_10_1_fu_468;
        Window_pix_10_1_fu_468 <= Window_pix_10_2_fu_472;
        Window_pix_10_2_fu_472 <= Window_pix_10_3_fu_476;
        Window_pix_10_3_fu_476 <= Window_pix_10_4_fu_480;
        Window_pix_10_4_fu_480 <= Window_pix_10_5_fu_484;
        Window_pix_10_5_fu_484 <= Window_pix_10_6_fu_488;
        Window_pix_10_6_fu_488 <= Window_pix_10_7_fu_492;
        Window_pix_10_7_fu_492 <= Window_pix_10_8_fu_496;
        Window_pix_10_8_fu_496 <= Window_pix_10_9_fu_500;
        Window_pix_1_1_0285_i_fu_104 <= Window_pix_1_1_fu_108;
        Window_pix_1_1_fu_108 <= Window_pix_1_2_fu_112;
        Window_pix_1_2_fu_112 <= Window_pix_1_3_fu_116;
        Window_pix_1_3_fu_116 <= Window_pix_1_4_fu_120;
        Window_pix_1_4_fu_120 <= Window_pix_1_5_fu_124;
        Window_pix_1_5_fu_124 <= Window_pix_1_6_fu_128;
        Window_pix_1_6_fu_128 <= Window_pix_1_7_fu_132;
        Window_pix_1_7_fu_132 <= Window_pix_1_8_fu_136;
        Window_pix_1_8_fu_136 <= Window_pix_1_9_fu_140;
        Window_pix_2_1_0295_i_fu_144 <= Window_pix_2_1_fu_148;
        Window_pix_2_1_fu_148 <= Window_pix_2_2_fu_152;
        Window_pix_2_2_fu_152 <= Window_pix_2_3_fu_156;
        Window_pix_2_3_fu_156 <= Window_pix_2_4_fu_160;
        Window_pix_2_4_fu_160 <= Window_pix_2_5_fu_164;
        Window_pix_2_5_fu_164 <= Window_pix_2_6_fu_168;
        Window_pix_2_6_fu_168 <= Window_pix_2_7_fu_172;
        Window_pix_2_7_fu_172 <= Window_pix_2_8_fu_176;
        Window_pix_2_8_fu_176 <= Window_pix_2_9_fu_180;
        Window_pix_3_1_0305_i_fu_184 <= Window_pix_3_1_fu_188;
        Window_pix_3_1_fu_188 <= Window_pix_3_2_fu_192;
        Window_pix_3_2_fu_192 <= Window_pix_3_3_fu_196;
        Window_pix_3_3_fu_196 <= Window_pix_3_4_fu_200;
        Window_pix_3_4_fu_200 <= Window_pix_3_5_fu_204;
        Window_pix_3_5_fu_204 <= Window_pix_3_6_fu_208;
        Window_pix_3_6_fu_208 <= Window_pix_3_7_fu_212;
        Window_pix_3_7_fu_212 <= Window_pix_3_8_fu_216;
        Window_pix_3_8_fu_216 <= Window_pix_3_9_fu_220;
        Window_pix_4_1_0315_i_fu_224 <= Window_pix_4_1_fu_228;
        Window_pix_4_1_fu_228 <= Window_pix_4_2_fu_232;
        Window_pix_4_2_fu_232 <= Window_pix_4_3_fu_236;
        Window_pix_4_3_fu_236 <= Window_pix_4_4_fu_240;
        Window_pix_4_4_fu_240 <= Window_pix_4_5_fu_244;
        Window_pix_4_5_fu_244 <= Window_pix_4_6_fu_248;
        Window_pix_4_6_fu_248 <= Window_pix_4_7_fu_252;
        Window_pix_4_7_fu_252 <= Window_pix_4_8_fu_256;
        Window_pix_4_8_fu_256 <= Window_pix_4_9_fu_260;
        Window_pix_5_1_0325_i_fu_264 <= Window_pix_5_1_fu_268;
        Window_pix_5_1_fu_268 <= Window_pix_5_2_fu_272;
        Window_pix_5_2_fu_272 <= Window_pix_5_3_fu_276;
        Window_pix_5_3_fu_276 <= Window_pix_5_4_fu_280;
        Window_pix_5_4_fu_280 <= Window_pix_5_5_fu_284;
        Window_pix_5_5_fu_284 <= Window_pix_5_6_fu_288;
        Window_pix_5_6_fu_288 <= Window_pix_5_7_fu_292;
        Window_pix_5_7_fu_292 <= Window_pix_5_8_fu_296;
        Window_pix_5_8_fu_296 <= Window_pix_5_9_fu_300;
        Window_pix_6_1_0335_i_fu_304 <= Window_pix_6_1_fu_308;
        Window_pix_6_1_fu_308 <= Window_pix_6_2_fu_312;
        Window_pix_6_2_fu_312 <= Window_pix_6_3_fu_316;
        Window_pix_6_3_fu_316 <= Window_pix_6_4_fu_320;
        Window_pix_6_4_fu_320 <= Window_pix_6_5_fu_324;
        Window_pix_6_5_fu_324 <= Window_pix_6_6_fu_328;
        Window_pix_6_6_fu_328 <= Window_pix_6_7_fu_332;
        Window_pix_6_7_fu_332 <= Window_pix_6_8_fu_336;
        Window_pix_6_8_fu_336 <= Window_pix_6_9_fu_340;
        Window_pix_7_1_0345_i_fu_344 <= Window_pix_7_1_fu_348;
        Window_pix_7_1_fu_348 <= Window_pix_7_2_fu_352;
        Window_pix_7_2_fu_352 <= Window_pix_7_3_fu_356;
        Window_pix_7_3_fu_356 <= Window_pix_7_4_fu_360;
        Window_pix_7_4_fu_360 <= Window_pix_7_5_fu_364;
        Window_pix_7_5_fu_364 <= Window_pix_7_6_fu_368;
        Window_pix_7_6_fu_368 <= Window_pix_7_7_fu_372;
        Window_pix_7_7_fu_372 <= Window_pix_7_8_fu_376;
        Window_pix_7_8_fu_376 <= Window_pix_7_9_fu_380;
        Window_pix_8_1_0355_i_fu_384 <= Window_pix_8_1_fu_388;
        Window_pix_8_1_fu_388 <= Window_pix_8_2_fu_392;
        Window_pix_8_2_fu_392 <= Window_pix_8_3_fu_396;
        Window_pix_8_3_fu_396 <= Window_pix_8_4_fu_400;
        Window_pix_8_4_fu_400 <= Window_pix_8_5_fu_404;
        Window_pix_8_5_fu_404 <= Window_pix_8_6_fu_408;
        Window_pix_8_6_fu_408 <= Window_pix_8_7_fu_412;
        Window_pix_8_7_fu_412 <= Window_pix_8_8_fu_416;
        Window_pix_8_8_fu_416 <= Window_pix_8_9_fu_420;
        Window_pix_9_1_0365_i_fu_424 <= Window_pix_9_1_fu_428;
        Window_pix_9_1_fu_428 <= Window_pix_9_2_fu_432;
        Window_pix_9_2_fu_432 <= Window_pix_9_3_fu_436;
        Window_pix_9_3_fu_436 <= Window_pix_9_4_fu_440;
        Window_pix_9_4_fu_440 <= Window_pix_9_5_fu_444;
        Window_pix_9_5_fu_444 <= Window_pix_9_6_fu_448;
        Window_pix_9_6_fu_448 <= Window_pix_9_7_fu_452;
        Window_pix_9_7_fu_452 <= Window_pix_9_8_fu_456;
        Window_pix_9_8_fu_456 <= Window_pix_9_9_fu_460;
        new_pixel_reg_751 <= ap_phi_reg_pp0_iter1_new_pixel_reg_751;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln100_reg_2642 == 1'd0))) begin
        Window_pix_0_9_load_reg_3219 <= Window_pix_0_9_fu_100;
        Window_pix_10_9_load_reg_3269 <= Window_pix_10_9_fu_500;
        Window_pix_1_9_load_reg_3224 <= Window_pix_1_9_fu_140;
        Window_pix_2_9_load_reg_3229 <= Window_pix_2_9_fu_180;
        Window_pix_3_9_load_reg_3234 <= Window_pix_3_9_fu_220;
        Window_pix_4_9_load_reg_3239 <= Window_pix_4_9_fu_260;
        Window_pix_5_9_load_reg_3244 <= Window_pix_5_9_fu_300;
        Window_pix_6_9_load_reg_3249 <= Window_pix_6_9_fu_340;
        Window_pix_7_9_load_reg_3254 <= Window_pix_7_9_fu_380;
        Window_pix_8_9_load_reg_3259 <= Window_pix_8_9_fu_420;
        Window_pix_9_9_load_reg_3264 <= Window_pix_9_9_fu_460;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        num_iterations_reg_2627 <= num_iterations_fu_805_p2;
        num_pixels_reg_2622 <= grp_fu_1913_p2;
        sext_ln100_reg_2632 <= sext_ln100_fu_815_p1;
        zext_ln93_4_reg_2617[18 : 0] <= zext_ln93_4_fu_802_p1[18 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ramp_up_reg_2612 <= ramp_up_fu_796_p2;
        zext_ln93_1_reg_2607[15 : 0] <= zext_ln93_1_fu_772_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        width_read_reg_2591 <= width_dout;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_0_ce0 = 1'b1;
    end else begin
        LineBuffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_0_ce1 = 1'b1;
    end else begin
        LineBuffer_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0))) begin
        LineBuffer_0_we0 = 1'b1;
    end else begin
        LineBuffer_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_1_ce0 = 1'b1;
    end else begin
        LineBuffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_1_ce1 = 1'b1;
    end else begin
        LineBuffer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0))) begin
        LineBuffer_1_we0 = 1'b1;
    end else begin
        LineBuffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_2_ce0 = 1'b1;
    end else begin
        LineBuffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_2_ce1 = 1'b1;
    end else begin
        LineBuffer_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0))) begin
        LineBuffer_2_we0 = 1'b1;
    end else begin
        LineBuffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_3_ce0 = 1'b1;
    end else begin
        LineBuffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_3_ce1 = 1'b1;
    end else begin
        LineBuffer_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0))) begin
        LineBuffer_3_we0 = 1'b1;
    end else begin
        LineBuffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_4_ce0 = 1'b1;
    end else begin
        LineBuffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_4_ce1 = 1'b1;
    end else begin
        LineBuffer_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0))) begin
        LineBuffer_4_we0 = 1'b1;
    end else begin
        LineBuffer_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_5_ce0 = 1'b1;
    end else begin
        LineBuffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_5_ce1 = 1'b1;
    end else begin
        LineBuffer_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0))) begin
        LineBuffer_5_we0 = 1'b1;
    end else begin
        LineBuffer_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_6_ce0 = 1'b1;
    end else begin
        LineBuffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_6_ce1 = 1'b1;
    end else begin
        LineBuffer_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0))) begin
        LineBuffer_6_we0 = 1'b1;
    end else begin
        LineBuffer_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_7_ce0 = 1'b1;
    end else begin
        LineBuffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_7_ce1 = 1'b1;
    end else begin
        LineBuffer_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0))) begin
        LineBuffer_7_we0 = 1'b1;
    end else begin
        LineBuffer_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_8_ce0 = 1'b1;
    end else begin
        LineBuffer_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_8_ce1 = 1'b1;
    end else begin
        LineBuffer_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0))) begin
        LineBuffer_8_we0 = 1'b1;
    end else begin
        LineBuffer_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_9_ce0 = 1'b1;
    end else begin
        LineBuffer_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LineBuffer_9_ce1 = 1'b1;
    end else begin
        LineBuffer_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln100_reg_2642 == 1'd0))) begin
        LineBuffer_9_we0 = 1'b1;
    end else begin
        LineBuffer_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln100_fu_825_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state1) & ((height_empty_n == 1'b0) | (width_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))))) begin
        grp_fu_1913_ce = 1'b0;
    end else begin
        grp_fu_1913_ce = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_blk_n = height_empty_n;
    end else begin
        height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((height_empty_n == 1'b0) | (width_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read = 1'b1;
    end else begin
        height_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_830_p2 == 1'd1) & (icmp_ln100_fu_825_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_stream_V_TDATA_blk_n = input_stream_V_TVALID_int_regslice;
    end else begin
        input_stream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op164_read_state5 == 1'b1))) begin
        input_stream_V_TREADY_int_regslice = 1'b1;
    end else begin
        input_stream_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_blk_n = width_empty_n;
    end else begin
        width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((height_empty_n == 1'b0) | (width_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_read = 1'b1;
    end else begin
        width_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_2720_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        window_stream_blk_n = window_stream_full_n;
    end else begin
        window_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_2720_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        window_stream_write = 1'b1;
    end else begin
        window_stream_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((height_empty_n == 1'b0) | (width_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LineBuffer_0_address0 = LineBuffer_0_addr_reg_2655_pp0_iter1_reg;

assign LineBuffer_0_address1 = idxprom19_i_fu_835_p1;

assign LineBuffer_1_address0 = LineBuffer_1_addr_reg_2661_pp0_iter1_reg;

assign LineBuffer_1_address1 = idxprom19_i_fu_835_p1;

assign LineBuffer_2_address0 = LineBuffer_2_addr_reg_2667_pp0_iter1_reg;

assign LineBuffer_2_address1 = idxprom19_i_fu_835_p1;

assign LineBuffer_3_address0 = LineBuffer_3_addr_reg_2673_pp0_iter1_reg;

assign LineBuffer_3_address1 = idxprom19_i_fu_835_p1;

assign LineBuffer_4_address0 = LineBuffer_4_addr_reg_2679_pp0_iter1_reg;

assign LineBuffer_4_address1 = idxprom19_i_fu_835_p1;

assign LineBuffer_5_address0 = LineBuffer_5_addr_reg_2685_pp0_iter1_reg;

assign LineBuffer_5_address1 = idxprom19_i_fu_835_p1;

assign LineBuffer_6_address0 = LineBuffer_6_addr_reg_2691_pp0_iter1_reg;

assign LineBuffer_6_address1 = idxprom19_i_fu_835_p1;

assign LineBuffer_7_address0 = LineBuffer_7_addr_reg_2697_pp0_iter1_reg;

assign LineBuffer_7_address1 = idxprom19_i_fu_835_p1;

assign LineBuffer_8_address0 = LineBuffer_8_addr_reg_2703_pp0_iter1_reg;

assign LineBuffer_8_address1 = idxprom19_i_fu_835_p1;

assign LineBuffer_9_address0 = LineBuffer_9_addr_reg_2709;

assign LineBuffer_9_address1 = idxprom19_i_fu_835_p1;

assign add_ln93_fu_786_p2 = (zext_ln93_1_fu_772_p1 + 17'd5);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln131_reg_2720_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (window_stream_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (input_stream_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op164_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln131_reg_2720_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (window_stream_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (input_stream_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op164_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln131_reg_2720_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (window_stream_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (input_stream_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op164_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((height_empty_n == 1'b0) | (width_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter0 = ((input_stream_V_TVALID_int_regslice == 1'b0) & (ap_predicate_op164_read_state5 == 1'b1));
end

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter2 = ((icmp_ln131_reg_2720_pp0_iter1_reg == 1'd0) & (window_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_130 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_168 = (icmp_ln100_fu_825_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_170 = (icmp_ln100_fu_825_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_172 = (icmp_ln100_fu_825_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_174 = (icmp_ln100_fu_825_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_176 = (icmp_ln100_fu_825_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_178 = (icmp_ln100_fu_825_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_180 = (icmp_ln100_fu_825_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_182 = (icmp_ln100_fu_825_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_184 = (icmp_ln100_fu_825_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_186 = (icmp_ln100_fu_825_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_414 = (icmp_ln100_reg_2642 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_415 = (icmp_ln100_reg_2642 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_416 = (icmp_ln100_reg_2642 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_417 = (icmp_ln100_reg_2642 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_418 = (icmp_ln100_reg_2642 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_419 = (icmp_ln100_reg_2642 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_420 = (icmp_ln100_reg_2642 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_421 = (icmp_ln100_reg_2642 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_422 = (icmp_ln100_reg_2642 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_423 = (icmp_ln100_reg_2642 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_424 = (icmp_ln100_reg_2642 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_436 = (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_437 = (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_438 = (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_439 = (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_440 = (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_441 = (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_442 = (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_443 = (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_444 = (icmp_ln100_reg_2642_pp0_iter1_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state5_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state7_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_phi_reg_pp0_iter0_new_pixel_reg_751 = 'bx;

always @ (*) begin
    ap_predicate_op164_read_state5 = ((icmp_ln107_fu_830_p2 == 1'd1) & (icmp_ln100_fu_825_p2 == 1'd0));
end

assign col_ptr_1_fu_854_p2 = (col_ptr_reg_740 + 32'd1);

assign col_ptr_2_fu_860_p3 = ((icmp_ln124_fu_849_p2[0:0] == 1'b1) ? 32'd0 : col_ptr_1_fu_854_p2);

assign grp_fu_1913_p0 = grp_fu_1913_p00;

assign grp_fu_1913_p00 = height_dout;

assign grp_fu_1913_p1 = grp_fu_1913_p10;

assign grp_fu_1913_p10 = width_dout;

assign icmp_ln100_fu_825_p2 = ((n_reg_729 == num_iterations_reg_2627) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_830_p2 = ((n_reg_729 < num_pixels_reg_2622) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_849_p2 = ((col_ptr_reg_740 == sext_ln100_reg_2632) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_868_p2 = ((n_reg_729 < zext_ln93_4_reg_2617) ? 1'b1 : 1'b0);

assign idxprom19_i_fu_835_p1 = col_ptr_reg_740;

assign input_stream_V_TREADY = regslice_both_input_stream_V_U_ack_in;

assign n_1_fu_819_p2 = (n_reg_729 + 32'd1);

assign num_iterations_fu_805_p2 = (grp_fu_1913_p2 + zext_ln93_4_fu_802_p1);

assign ramp_up_fu_796_p2 = (zext_ln93_3_fu_792_p1 + zext_ln93_2_fu_782_p1);

assign sext_ln100_fu_815_p1 = $signed(sub_i_fu_810_p2);

assign shl_ln_fu_775_p3 = {{width_read_reg_2591}, {2'd0}};

assign sub_i_fu_810_p2 = ($signed(zext_ln93_1_reg_2607) + $signed(17'd131071));

assign window_stream_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{new_pixel_reg_751}, {Window_pix_10_9_load_reg_3269}}, {Window_pix_10_8_load_reg_3214}}, {Window_pix_10_7_load_reg_3209}}, {Window_pix_10_6_load_reg_3204}}, {Window_pix_10_5_load_reg_3199}}, {Window_pix_10_4_load_reg_3194}}, {Window_pix_10_3_load_reg_3189}}, {Window_pix_10_2_load_reg_3184}}, {Window_pix_10_1_load_reg_3179}}, {Window_pix_10_1_0375_i_load_reg_3174}}, {Window_pix_9_10_reg_3327}}, {Window_pix_9_9_load_reg_3264}}, {Window_pix_9_8_load_reg_3169}}, {Window_pix_9_7_load_reg_3164}}, {Window_pix_9_6_load_reg_3159}}, {Window_pix_9_5_load_reg_3154}}, {Window_pix_9_4_load_reg_3149}}, {Window_pix_9_3_load_reg_3144}}, {Window_pix_9_2_load_reg_3139}}, {Window_pix_9_1_load_reg_3134}}, {Window_pix_9_1_0365_i_load_reg_3129}}, {Window_pix_8_10_reg_3321}}, {Window_pix_8_9_load_reg_3259}}, {Window_pix_8_8_load_reg_3124}}, {Window_pix_8_7_load_reg_3119}}, {Window_pix_8_6_load_reg_3114}}, {Window_pix_8_5_load_reg_3109}}, {Window_pix_8_4_load_reg_3104}}, {Window_pix_8_3_load_reg_3099}}, {Window_pix_8_2_load_reg_3094}}, {Window_pix_8_1_load_reg_3089}}, {Window_pix_8_1_0355_i_load_reg_3084}}, {Window_pix_7_10_reg_3315}}, {Window_pix_7_9_load_reg_3254}}, {Window_pix_7_8_load_reg_3079}}, {Window_pix_7_7_load_reg_3074}}, {Window_pix_7_6_load_reg_3069}}, {Window_pix_7_5_load_reg_3064}}, {Window_pix_7_4_load_reg_3059}}, {Window_pix_7_3_load_reg_3054}}, {Window_pix_7_2_load_reg_3049}}, {Window_pix_7_1_load_reg_3044}}, {Window_pix_7_1_0345_i_load_reg_3039}}, {Window_pix_6_10_reg_3309}}, {Window_pix_6_9_load_reg_3249}}, {Window_pix_6_8_load_reg_3034}}, {Window_pix_6_7_load_reg_3029}}, {Window_pix_6_6_load_reg_3024}}, {Window_pix_6_5_load_reg_3019}}, {Window_pix_6_4_load_reg_3014}}, {Window_pix_6_3_load_reg_3009}}, {Window_pix_6_2_load_reg_3004}}, {Window_pix_6_1_load_reg_2999}}, {Window_pix_6_1_0335_i_load_reg_2994}}, {Window_pix_5_10_reg_3303}}, {Window_pix_5_9_load_reg_3244}}, {Window_pix_5_8_load_reg_2989}}, {Window_pix_5_7_load_reg_2984}}, {Window_pix_5_6_load_reg_2979}}, {Window_pix_5_5_load_reg_2974}}, {Window_pix_5_4_load_reg_2969}}, {Window_pix_5_3_load_reg_2964}}, {Window_pix_5_2_load_reg_2959}}, {Window_pix_5_1_load_reg_2954}}, {Window_pix_5_1_0325_i_load_reg_2949}}, {Window_pix_4_10_reg_3297}}, {Window_pix_4_9_load_reg_3239}}, {Window_pix_4_8_load_reg_2944}}, {Window_pix_4_7_load_reg_2939}}, {Window_pix_4_6_load_reg_2934}}, {Window_pix_4_5_load_reg_2929}}, {Window_pix_4_4_load_reg_2924}}, {Window_pix_4_3_load_reg_2919}}, {Window_pix_4_2_load_reg_2914}}, {Window_pix_4_1_load_reg_2909}}, {Window_pix_4_1_0315_i_load_reg_2904}}, {Window_pix_3_10_reg_3291}}, {Window_pix_3_9_load_reg_3234}}, {Window_pix_3_8_load_reg_2899}}, {Window_pix_3_7_load_reg_2894}}, {Window_pix_3_6_load_reg_2889}}, {Window_pix_3_5_load_reg_2884}}, {Window_pix_3_4_load_reg_2879}}, {Window_pix_3_3_load_reg_2874}}, {Window_pix_3_2_load_reg_2869}}, {Window_pix_3_1_load_reg_2864}}, {Window_pix_3_1_0305_i_load_reg_2859}}, {Window_pix_2_10_reg_3285}}, {Window_pix_2_9_load_reg_3229}}, {Window_pix_2_8_load_reg_2854}}, {Window_pix_2_7_load_reg_2849}}, {Window_pix_2_6_load_reg_2844}}, {Window_pix_2_5_load_reg_2839}}, {Window_pix_2_4_load_reg_2834}}, {Window_pix_2_3_load_reg_2829}}, {Window_pix_2_2_load_reg_2824}}, {Window_pix_2_1_load_reg_2819}}, {Window_pix_2_1_0295_i_load_reg_2814}}, {Window_pix_1_10_reg_3279}}, {Window_pix_1_9_load_reg_3224}}, {Window_pix_1_8_load_reg_2809}}, {Window_pix_1_7_load_reg_2804}}, {Window_pix_1_6_load_reg_2799}}, {Window_pix_1_5_load_reg_2794}}, {Window_pix_1_4_load_reg_2789}}, {Window_pix_1_3_load_reg_2784}}, {Window_pix_1_2_load_reg_2779}}, {Window_pix_1_1_load_reg_2774}}, {Window_pix_1_1_0285_i_load_reg_2769}}, {Window_pix_0_10_reg_3274}}, {Window_pix_0_9_load_reg_3219}}, {Window_pix_0_8_load_reg_2764}}, {Window_pix_0_7_load_reg_2759}}, {Window_pix_0_6_load_reg_2754}}, {Window_pix_0_5_load_reg_2749}}, {Window_pix_0_4_load_reg_2744}}, {Window_pix_0_3_load_reg_2739}}, {Window_pix_0_2_load_reg_2734}}, {Window_pix_0_1_load_reg_2729}}, {Window_pix_0_1_0275_i_load_reg_2724}};

assign zext_ln93_1_fu_772_p1 = width_read_reg_2591;

assign zext_ln93_2_fu_782_p1 = shl_ln_fu_775_p3;

assign zext_ln93_3_fu_792_p1 = add_ln93_fu_786_p2;

assign zext_ln93_4_fu_802_p1 = ramp_up_reg_2612;

always @ (posedge ap_clk) begin
    zext_ln93_1_reg_2607[16] <= 1'b0;
    zext_ln93_4_reg_2617[31:19] <= 13'b0000000000000;
end

endmodule //Filter2DKernel_Window2D
